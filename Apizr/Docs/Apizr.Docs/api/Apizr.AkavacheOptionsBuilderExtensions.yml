### YamlMime:ManagedReference
items:
- uid: Apizr.AkavacheOptionsBuilderExtensions
  commentId: T:Apizr.AkavacheOptionsBuilderExtensions
  id: AkavacheOptionsBuilderExtensions
  parent: Apizr
  children:
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: AkavacheOptionsBuilderExtensions
  nameWithType: AkavacheOptionsBuilderExtensions
  fullName: Apizr.AkavacheOptionsBuilderExtensions
  type: Class
  source:
    id: AkavacheOptionsBuilderExtensions
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Akavache\AkavacheOptionsBuilderExtensions.cs
    startLine: 6
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  syntax:
    content: public static class AkavacheOptionsBuilderExtensions
    content.vb: Public Module AkavacheOptionsBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  id: WithAkavacheCacheHandler``1(``0)
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  type: Method
  source:
    id: WithAkavacheCacheHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Akavache\AkavacheOptionsBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: "\nSet Akavache as CacheHandler with LocalMachine blob cache and ApizrAkavacheCacheHandler name\n"
  example: []
  syntax:
    content: >-
      public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder)
          where TBuilder : IApizrGlobalCommonOptionsBuilderBase
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  id: WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>)
  type: Method
  source:
    id: WithAkavacheCacheHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Akavache\AkavacheOptionsBuilderExtensions.cs
    startLine: 29
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: "\nSet Akavache as CacheHandler with your blob cache and ApizrAkavacheCacheHandler name\n"
  example: []
  syntax:
    content: >-
      public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder, Func<IBlobCache> blobCacheFactory)
          where TBuilder : IApizrGlobalCommonOptionsBuilderBase
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: blobCacheFactory
      type: System.Func{Akavache.IBlobCache}
      description: The blob cache factory of your choice
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder, blobCacheFactory As Func(Of IBlobCache)) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache))
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  id: WithAkavacheCacheHandler``1(``0,System.String)
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.String)
  type: Method
  source:
    id: WithAkavacheCacheHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Akavache\AkavacheOptionsBuilderExtensions.cs
    startLine: 44
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: "\nSet Akavache as CacheHandler with LocalMachine blob cache and your provided name\n"
  example: []
  syntax:
    content: >-
      public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder, string applicationName)
          where TBuilder : IApizrGlobalCommonOptionsBuilderBase
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: applicationName
      type: System.String
      description: The application name used by Akavache
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder, applicationName As String) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  id: WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>, System.String)
  type: Method
  source:
    id: WithAkavacheCacheHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Akavache\AkavacheOptionsBuilderExtensions.cs
    startLine: 60
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: "\nSet Akavache as CacheHandler with your blob cache and your provided name\n"
  example: []
  syntax:
    content: >-
      public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder, Func<IBlobCache> blobCacheFactory, string applicationName)
          where TBuilder : IApizrGlobalCommonOptionsBuilderBase
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: blobCacheFactory
      type: System.Func{Akavache.IBlobCache}
      description: The blob cache factory of your choice
    - id: applicationName
      type: System.String
      description: The application name used by Akavache
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder, blobCacheFactory As Func(Of IBlobCache), applicationName As String) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache), System.String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
references:
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  commentId: Overload:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler
  name: WithAkavacheCacheHandler
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler
- uid: '{TBuilder}'
  commentId: '!:TBuilder'
  definition: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: System.Func{Akavache.IBlobCache}
  commentId: T:System.Func{Akavache.IBlobCache}
  parent: System
  definition: System.Func`1
  name: Func<IBlobCache>
  nameWithType: Func<IBlobCache>
  fullName: System.Func<Akavache.IBlobCache>
  nameWithType.vb: Func(Of IBlobCache)
  fullName.vb: System.Func(Of Akavache.IBlobCache)
  name.vb: Func(Of IBlobCache)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
