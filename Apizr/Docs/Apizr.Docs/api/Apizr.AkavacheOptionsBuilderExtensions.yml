### YamlMime:ManagedReference
items:
- uid: Apizr.AkavacheOptionsBuilderExtensions
  commentId: T:Apizr.AkavacheOptionsBuilderExtensions
  id: AkavacheOptionsBuilderExtensions
  parent: Apizr
  children:
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  - Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: AkavacheOptionsBuilderExtensions
  nameWithType: AkavacheOptionsBuilderExtensions
  fullName: Apizr.AkavacheOptionsBuilderExtensions
  type: Class
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AkavacheOptionsBuilderExtensions
    path: ../../Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
    startLine: 9
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: Akavache options builder extensions
  example: []
  syntax:
    content: public static class AkavacheOptionsBuilderExtensions
    content.vb: Public Module AkavacheOptionsBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  id: WithAkavacheCacheHandler``1(``0)
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAkavacheCacheHandler
    path: ../../Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
    startLine: 17
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: Set Akavache as CacheHandler with LocalMachine blob cache and ApizrAkavacheCacheHandler name
  example: []
  syntax:
    content: 'public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder) where TBuilder : IApizrGlobalCommonOptionsBuilderBase'
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  id: WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAkavacheCacheHandler
    path: ../../Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
    startLine: 32
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: Set Akavache as CacheHandler with your blob cache and ApizrAkavacheCacheHandler name
  example: []
  syntax:
    content: 'public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder, Func<IBlobCache> blobCacheFactory) where TBuilder : IApizrGlobalCommonOptionsBuilderBase'
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: blobCacheFactory
      type: System.Func{Akavache.IBlobCache}
      description: The blob cache factory of your choice
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder, blobCacheFactory As Func(Of IBlobCache)) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache))
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  id: WithAkavacheCacheHandler``1(``0,System.String)
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, string)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, string)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, string)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAkavacheCacheHandler
    path: ../../Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
    startLine: 47
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: Set Akavache as CacheHandler with LocalMachine blob cache and your provided name
  example: []
  syntax:
    content: 'public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder, string applicationName) where TBuilder : IApizrGlobalCommonOptionsBuilderBase'
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: applicationName
      type: System.String
      description: The application name used by Akavache
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder, applicationName As String) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  id: WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  isExtensionMethod: true
  parent: Apizr.AkavacheOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, string)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, string)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>, string)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAkavacheCacheHandler
    path: ../../Src/Caching/Apizr.Integrations.Akavache/AkavacheOptionsBuilderExtensions.cs
    startLine: 63
  assemblies:
  - Apizr.Integrations.Akavache
  namespace: Apizr
  summary: Set Akavache as CacheHandler with your blob cache and your provided name
  example: []
  syntax:
    content: 'public static TBuilder WithAkavacheCacheHandler<TBuilder>(this TBuilder builder, Func<IBlobCache> blobCacheFactory, string applicationName) where TBuilder : IApizrGlobalCommonOptionsBuilderBase'
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: blobCacheFactory
      type: System.Func{Akavache.IBlobCache}
      description: The blob cache factory of your choice
    - id: applicationName
      type: System.String
      description: The application name used by Akavache
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: Public Shared Function WithAkavacheCacheHandler(Of TBuilder As IApizrGlobalCommonOptionsBuilderBase)(builder As TBuilder, blobCacheFactory As Func(Of IBlobCache), applicationName As String) As TBuilder
  overload: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache), String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
references:
- uid: Apizr
  commentId: N:Apizr
  href: Apizr.html
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler*
  commentId: Overload:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler
  href: Apizr.AkavacheOptionsBuilderExtensions.html#Apizr_AkavacheOptionsBuilderExtensions_WithAkavacheCacheHandler__1___0_
  name: WithAkavacheCacheHandler
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler
- uid: '{TBuilder}'
  commentId: '!:TBuilder'
  definition: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: System.Func{Akavache.IBlobCache}
  commentId: T:System.Func{Akavache.IBlobCache}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<IBlobCache>
  nameWithType: Func<IBlobCache>
  fullName: System.Func<Akavache.IBlobCache>
  nameWithType.vb: Func(Of IBlobCache)
  fullName.vb: System.Func(Of Akavache.IBlobCache)
  name.vb: Func(Of IBlobCache)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: Akavache.IBlobCache
    name: IBlobCache
    isExternal: true
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
