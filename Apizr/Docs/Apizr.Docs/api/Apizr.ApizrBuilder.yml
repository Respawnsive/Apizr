### YamlMime:ManagedReference
items:
- uid: Apizr.ApizrBuilder
  commentId: T:Apizr.ApizrBuilder
  id: ApizrBuilder
  parent: Apizr
  children:
  - Apizr.ApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.ApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.ApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.ApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.ApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.ApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.ApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.ApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  - Apizr.ApizrBuilder.Current
  langs:
  - csharp
  - vb
  name: ApizrBuilder
  nameWithType: ApizrBuilder
  fullName: Apizr.ApizrBuilder
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrBuilder
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 33
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nThe builder\n"
  example: []
  syntax:
    content: 'public class ApizrBuilder : IApizrBuilder'
    content.vb: >-
      Public Class ApizrBuilder
          Implements IApizrBuilder
  inheritance:
  - System.Object
  implements:
  - Apizr.IApizrBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.ApizrBuilder.Current
  commentId: P:Apizr.ApizrBuilder.Current
  id: Current
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ApizrBuilder.Current
  fullName: Apizr.ApizrBuilder.Current
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Current
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 40
  assemblies:
  - Apizr
  namespace: Apizr
  syntax:
    content: public static IApizrBuilder Current { get; }
    parameters: []
    return:
      type: Apizr.IApizrBuilder
    content.vb: Public Shared ReadOnly Property Current As IApizrBuilder
  overload: Apizr.ApizrBuilder.Current*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Apizr.ApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  id: CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateRegistry(Action<IApizrRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateRegistry(Action<IApizrRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateRegistry(System.Action<Apizr.Configuring.Registry.IApizrRegistryBuilder>, System.Action<Apizr.Configuring.Common.IApizrCommonOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateRegistry
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 45
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a registry with all managers built with both common and proper options\n"
  example: []
  syntax:
    content: public IApizrRegistry CreateRegistry(Action<IApizrRegistryBuilder> registryBuilder, Action<IApizrCommonOptionsBuilder> commonOptionsBuilder = null)
    parameters:
    - id: registryBuilder
      type: System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder}
      description: The registry builder with access to proper options
    - id: commonOptionsBuilder
      type: System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
      description: The common options shared by all managers
    return:
      type: Apizr.Configuring.Registry.IApizrRegistry
      description: ''
    content.vb: Public Function CreateRegistry(registryBuilder As Action(Of IApizrRegistryBuilder), commonOptionsBuilder As Action(Of IApizrCommonOptionsBuilder) = Nothing) As IApizrRegistry
  overload: Apizr.ApizrBuilder.CreateRegistry*
  implements:
  - Apizr.IApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateRegistry(Action(Of IApizrRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateRegistry(System.Action(Of Apizr.Configuring.Registry.IApizrRegistryBuilder), System.Action(Of Apizr.Configuring.Common.IApizrCommonOptionsBuilder))
  name.vb: CreateRegistry(Action(Of IApizrRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
- uid: Apizr.ApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateCrudManagerFor<T>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateCrudManagerFor<T>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateCrudManagerFor<T>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateCrudManagerFor
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 54
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> and &quot;ReadAll&quot; query result of type <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, int, IEnumerable<T>, IDictionary<string, object>>> CreateCrudManagerFor<T>(Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Public Function CreateCrudManagerFor(Of T As Class)(optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrManager(Of ICrudApi(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  overload: Apizr.ApizrBuilder.CreateCrudManagerFor*
  implements:
  - Apizr.IApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateCrudManagerFor(Of T)(Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateCrudManagerFor(Of T)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T)(Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.ApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateCrudManagerFor<T, TKey>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateCrudManagerFor<T, TKey>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateCrudManagerFor<T, TKey>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateCrudManagerFor
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 64
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<string, object>>> CreateCrudManagerFor<T, TKey>(Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    - id: TKey
      description: The object key type (primitive)
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Public Function CreateCrudManagerFor(Of T As Class, TKey)(optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  overload: Apizr.ApizrBuilder.CreateCrudManagerFor*
  implements:
  - Apizr.IApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateCrudManagerFor(Of T, TKey)(Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateCrudManagerFor(Of T, TKey)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey)(Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.ApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateCrudManagerFor<T, TKey, TReadAllResult>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateCrudManagerFor
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 74
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code>\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<string, object>>> CreateCrudManagerFor<T, TKey, TReadAllResult>(Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    - id: TKey
      description: The object key type (primitive)
    - id: TReadAllResult
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Public Function CreateCrudManagerFor(Of T As Class, TKey, TReadAllResult)(optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  overload: Apizr.ApizrBuilder.CreateCrudManagerFor*
  implements:
  - Apizr.IApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult)(Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey, TReadAllResult)(Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.ApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateCrudManagerFor
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 87
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code>\nand ReadAll query parameters type (inheriting from IDictionary{string,object} or be of class type)\n"
  example: []
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>> CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    - id: TKey
      description: The object key type (primitive)
    - id: TReadAllResult
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    - id: TReadAllParams
      description: ReadAll query parameters
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
      description: ''
    content.vb: Public Function CreateCrudManagerFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)(optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  overload: Apizr.ApizrBuilder.CreateCrudManagerFor*
  implements:
  - Apizr.IApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.ApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(System.Func<Apizr.ILazyFactory<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateCrudManagerFor
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 100
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TApizrManager</code> instance for a managed crud api for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object (class), \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code>\nand ReadAll query parameters type (inheriting from IDictionary{string,object} or be of class type)\n"
  example: []
  syntax:
    content: >-
      public TApizrManager CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<string>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager> apizrManagerFactory, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where T : class where TApizrManager : IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
    parameters:
    - id: apizrManagerFactory
      type: System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},{TApizrManager}}
      description: The custom manager implementation instance factory
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    - id: TKey
      description: The object key type (primitive)
    - id: TReadAllResult
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    - id: TReadAllParams
      description: ReadAll query parameters
    - id: TApizrManager
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation
    return:
      type: '{TApizrManager}'
      description: ''
    content.vb: Public Function CreateCrudManagerFor(Of T As Class, TKey, TReadAllResult, TReadAllParams, TApizrManager As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))(apizrManagerFactory As Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As TApizrManager
  overload: Apizr.ApizrBuilder.CreateCrudManagerFor*
  implements:
  - Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},{TApizrManager}},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(System.Func(Of Apizr.ILazyFactory(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.ApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateManagerFor<TWebApi>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateManagerFor<TWebApi>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateManagerFor<TWebApi>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateManagerFor
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 127
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance\n"
  example: []
  syntax:
    content: public IApizrManager<TWebApi> CreateManagerFor<TWebApi>(Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TWebApi
      description: The web api interface to manage
    return:
      type: Apizr.IApizrManager{{TWebApi}}
      description: ''
    content.vb: Public Function CreateManagerFor(Of TWebApi)(optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrManager(Of TWebApi)
  overload: Apizr.ApizrBuilder.CreateManagerFor*
  implements:
  - Apizr.IApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateManagerFor(Of TWebApi)(Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateManagerFor(Of TWebApi)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateManagerFor(Of TWebApi)(Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.ApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.ApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.ApizrBuilder
  langs:
  - csharp
  - vb
  name: CreateManagerFor<TWebApi, TApizrManager>(Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  nameWithType: ApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>(Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.ApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>(System.Func<Apizr.ILazyFactory<TWebApi>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>, TApizrManager>, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/ApizrBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateManagerFor
    path: ../../Src/Apizr/ApizrBuilder.cs
    startLine: 135
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nCreate a <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TApizrManager</code> instance for a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>\n"
  example: []
  syntax:
    content: >-
      public TApizrManager CreateManagerFor<TWebApi, TApizrManager>(Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<string>>, IApizrManagerOptions<TWebApi>, TApizrManager> apizrManagerFactory, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TApizrManager : IApizrManager<TWebApi>
    parameters:
    - id: apizrManagerFactory
      type: System.Func{Apizr.ILazyFactory{{TWebApi}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}},{TApizrManager}}
      description: The custom manager implementation instance factory
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TWebApi
      description: The web api interface to manage
    - id: TApizrManager
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation
    return:
      type: '{TApizrManager}'
      description: ''
    content.vb: Public Function CreateManagerFor(Of TWebApi, TApizrManager As IApizrManager(Of TWebApi))(apizrManagerFactory As Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager), optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As TApizrManager
  overload: Apizr.ApizrBuilder.CreateManagerFor*
  implements:
  - Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{{TWebApi}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}},{TApizrManager}},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  nameWithType.vb: ApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)(Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.ApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)(System.Func(Of Apizr.ILazyFactory(Of TWebApi), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi), TApizrManager), System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateManagerFor(Of TWebApi, TApizrManager)(Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
references:
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.IApizrBuilder
  commentId: T:Apizr.IApizrBuilder
  parent: Apizr
  name: IApizrBuilder
  nameWithType: IApizrBuilder
  fullName: Apizr.IApizrBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateUploadManager(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManager(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManager(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateUploadManagerFor<TUploadApi>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerFor(Of TUploadApi)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateUploadManagerFor<TUploadApi, TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor<TUploadApi, TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateUploadManagerWith<TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerWith(Of TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerWith<TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerWith(Of TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateDownloadManager(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManager(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManager(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateDownloadManagerFor<TDownloadApi>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateDownloadManagerWith<TDownloadParams>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerWith(Of TDownloadParams)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerWith<TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerWith(Of TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateTransferManager(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManager(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManager(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateTransferManagerFor<TTransferApi>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateTransferManagerFor<TTransferApi, TDownloadParams>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateUploadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions
  commentId: T:Apizr.FileTransferOptionsBuilderExtensions
  parent: Apizr
  name: FileTransferOptionsBuilderExtensions
  nameWithType: FileTransferOptionsBuilderExtensions
  fullName: Apizr.FileTransferOptionsBuilderExtensions
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateUploadManagerFor<TUploadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerFor(Of TUploadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor<TUploadApi, TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi, TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi, TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateUploadManagerWith<TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerWith(Of TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerWith<TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith<TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateUploadManagerWith(Of TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerWith(Of TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateDownloadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateDownloadManagerFor<TDownloadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateDownloadManagerWith<TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerWith(Of TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerWith<TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith<TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateDownloadManagerWith(Of TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerWith(Of TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateTransferManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateTransferManagerFor<TTransferApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateTransferManagerFor<TTransferApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``3(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith<TDownloadParams, TUploadApiResultData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
    nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrBuilder
    name: IApizrBuilder
    nameWithType: IApizrBuilder
    fullName: Apizr.IApizrBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.ApizrBuilder.Current*
  commentId: Overload:Apizr.ApizrBuilder.Current
  name: Current
  nameWithType: ApizrBuilder.Current
  fullName: Apizr.ApizrBuilder.Current
- uid: Apizr.ApizrBuilder.CreateRegistry*
  commentId: Overload:Apizr.ApizrBuilder.CreateRegistry
  name: CreateRegistry
  nameWithType: ApizrBuilder.CreateRegistry
  fullName: Apizr.ApizrBuilder.CreateRegistry
- uid: Apizr.IApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  parent: Apizr.IApizrBuilder
  isExternal: true
  name: CreateRegistry(Action<IApizrRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateRegistry(Action<IApizrRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateRegistry(System.Action<Apizr.Configuring.Registry.IApizrRegistryBuilder>, System.Action<Apizr.Configuring.Common.IApizrCommonOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateRegistry(Action(Of IApizrRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateRegistry(System.Action(Of Apizr.Configuring.Registry.IApizrRegistryBuilder), System.Action(Of Apizr.Configuring.Common.IApizrCommonOptionsBuilder))
  name.vb: CreateRegistry(Action(Of IApizrRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
    name: CreateRegistry
    nameWithType: IApizrBuilder.CreateRegistry
    fullName: Apizr.IApizrBuilder.CreateRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilder
    name: IApizrRegistryBuilder
    nameWithType: IApizrRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateRegistry(System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
    name: CreateRegistry
    nameWithType: IApizrBuilder.CreateRegistry
    fullName: Apizr.IApizrBuilder.CreateRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilder
    name: IApizrRegistryBuilder
    nameWithType: IApizrRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder}
  commentId: T:System.Action{Apizr.Configuring.Registry.IApizrRegistryBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRegistryBuilder>
  nameWithType: Action<IApizrRegistryBuilder>
  fullName: System.Action<Apizr.Configuring.Registry.IApizrRegistryBuilder>
  nameWithType.vb: Action(Of IApizrRegistryBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Registry.IApizrRegistryBuilder)
  name.vb: Action(Of IApizrRegistryBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilder
    name: IApizrRegistryBuilder
    nameWithType: IApizrRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilder
    name: IApizrRegistryBuilder
    nameWithType: IApizrRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrCommonOptionsBuilder>
  nameWithType: Action<IApizrCommonOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Common.IApizrCommonOptionsBuilder>
  nameWithType.vb: Action(Of IApizrCommonOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Common.IApizrCommonOptionsBuilder)
  name.vb: Action(Of IApizrCommonOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistry
  commentId: T:Apizr.Configuring.Registry.IApizrRegistry
  parent: Apizr.Configuring.Registry
  name: IApizrRegistry
  nameWithType: IApizrRegistry
  fullName: Apizr.Configuring.Registry.IApizrRegistry
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: Apizr.ApizrBuilder.CreateCrudManagerFor*
  commentId: Overload:Apizr.ApizrBuilder.CreateCrudManagerFor
  name: CreateCrudManagerFor
  nameWithType: ApizrBuilder.CreateCrudManagerFor
  fullName: Apizr.ApizrBuilder.CreateCrudManagerFor
- uid: Apizr.IApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.IApizrBuilder
  isExternal: true
  name: CreateCrudManagerFor<T>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateCrudManagerFor<T>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateCrudManagerFor(Of T)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor<T>
    nameWithType: IApizrBuilder.CreateCrudManagerFor<T>
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor(Of T)
    nameWithType: IApizrBuilder.CreateCrudManagerFor(Of T)
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrManagerOptionsBuilder>
  nameWithType: Action<IApizrManagerOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: Action(Of IApizrManagerOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: Action(Of IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.IApizrBuilder
  isExternal: true
  name: CreateCrudManagerFor<T, TKey>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateCrudManagerFor(Of T, TKey)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor<T, TKey>
    nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey>
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``2(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor(Of T, TKey)
    nameWithType: IApizrBuilder.CreateCrudManagerFor(Of T, TKey)
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.IApizrBuilder
  isExternal: true
  name: CreateCrudManagerFor<T, TKey, TReadAllResult>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey, TReadAllResult)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor<T, TKey, TReadAllResult>
    nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult>
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``3(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.IApizrBuilder
  isExternal: true
  name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``4(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},{TApizrManager}},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.IApizrBuilder
  definition: Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(System.Func<Apizr.ILazyFactory<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(System.Func(Of Apizr.ILazyFactory(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>
    nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)
    nameWithType: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}},{TApizrManager}}
  commentId: T:System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4}
  parent: System
  definition: System.Func`7
  name: Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>
  nameWithType: Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>
  fullName: System.Func<Apizr.ILazyFactory<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>
  nameWithType.vb: Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager)
  fullName.vb: System.Func(Of Apizr.ILazyFactory(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager)
  name.vb: Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager)
  spec.csharp:
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApizrManager}'
  commentId: '!:TApizrManager'
  definition: TApizrManager
  name: TApizrManager
  nameWithType: TApizrManager
  fullName: TApizrManager
- uid: Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Func<ILazyFactory<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(System.Func<Apizr.ILazyFactory<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>, TApizrManager>, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(System.Func(Of Apizr.ILazyFactory(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Func(Of ILazyFactory(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>
    nameWithType: IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateCrudManagerFor``5(System.Func{Apizr.ILazyFactory{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}},``4},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)
    nameWithType: IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)
    fullName: Apizr.IApizrBuilder.CreateCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`7
  commentId: T:System.Func`7
  isExternal: true
  name: Func<T1, T2, T3, T4, T5, T6, TResult>
  nameWithType: Func<T1, T2, T3, T4, T5, T6, TResult>
  fullName: System.Func<T1, T2, T3, T4, T5, T6, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, T5, T6, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, T5, T6, TResult)
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, TResult)
  spec.csharp:
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T6
    nameWithType: T6
    fullName: T6
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TApizrManager
  name: TApizrManager
  nameWithType: TApizrManager
  fullName: TApizrManager
- uid: Apizr.ApizrBuilder.CreateManagerFor*
  commentId: Overload:Apizr.ApizrBuilder.CreateManagerFor
  name: CreateManagerFor
  nameWithType: ApizrBuilder.CreateManagerFor
  fullName: Apizr.ApizrBuilder.CreateManagerFor
- uid: Apizr.IApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.IApizrBuilder
  isExternal: true
  name: CreateManagerFor<TWebApi>(Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateManagerFor<TWebApi>(Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateManagerFor<TWebApi>(System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateManagerFor(Of TWebApi)(Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateManagerFor(Of TWebApi)(System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateManagerFor(Of TWebApi)(Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateManagerFor<TWebApi>
    nameWithType: IApizrBuilder.CreateManagerFor<TWebApi>
    fullName: Apizr.IApizrBuilder.CreateManagerFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateManagerFor``1(System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateManagerFor(Of TWebApi)
    nameWithType: IApizrBuilder.CreateManagerFor(Of TWebApi)
    fullName: Apizr.IApizrBuilder.CreateManagerFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{{TWebApi}}
  commentId: T:Apizr.IApizrManager{``0}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{{TWebApi}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}},{TApizrManager}},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  parent: Apizr.IApizrBuilder
  definition: Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  name: CreateManagerFor<TWebApi, TApizrManager>(Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>(Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>(System.Func<Apizr.ILazyFactory<TWebApi>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>, TApizrManager>, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)(Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)(System.Func(Of Apizr.ILazyFactory(Of TWebApi), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi), TApizrManager), System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateManagerFor(Of TWebApi, TApizrManager)(Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateManagerFor<TWebApi, TApizrManager>
    nameWithType: IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>
    fullName: Apizr.IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateManagerFor(Of TWebApi, TApizrManager)
    nameWithType: IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)
    fullName: Apizr.IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Apizr.ILazyFactory{{TWebApi}},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}},{TApizrManager}}
  commentId: T:System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1}
  parent: System
  definition: System.Func`7
  name: Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>
  nameWithType: Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>
  fullName: System.Func<Apizr.ILazyFactory<TWebApi>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>, TApizrManager>
  nameWithType.vb: Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager)
  fullName.vb: System.Func(Of Apizr.ILazyFactory(Of TWebApi), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi), TApizrManager)
  name.vb: Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager)
  spec.csharp:
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExternal: true
  name: CreateManagerFor<TWebApi, TApizrManager>(Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  nameWithType: IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>(Func<ILazyFactory<TWebApi>, IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory<IReadOnlyPolicyRegistry<String>>, IApizrManagerOptions<TWebApi>, TApizrManager>, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>(System.Func<Apizr.ILazyFactory<TWebApi>, Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>, Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>, TApizrManager>, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  nameWithType.vb: IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)(Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  fullName.vb: Apizr.IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)(System.Func(Of Apizr.ILazyFactory(Of TWebApi), Apizr.Connecting.IConnectivityHandler, Apizr.Caching.ICacheHandler, Apizr.Mapping.IMappingHandler, Apizr.ILazyFactory(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)), Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi), TApizrManager), System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateManagerFor(Of TWebApi, TApizrManager)(Func(Of ILazyFactory(Of TWebApi), IConnectivityHandler, ICacheHandler, IMappingHandler, ILazyFactory(Of IReadOnlyPolicyRegistry(Of String)), IApizrManagerOptions(Of TWebApi), TApizrManager), Action(Of IApizrManagerOptionsBuilder))
  spec.csharp:
  - uid: Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateManagerFor<TWebApi, TApizrManager>
    nameWithType: IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>
    fullName: Apizr.IApizrBuilder.CreateManagerFor<TWebApi, TApizrManager>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.IApizrBuilder.CreateManagerFor``2(System.Func{Apizr.ILazyFactory{``0},Apizr.Connecting.IConnectivityHandler,Apizr.Caching.ICacheHandler,Apizr.Mapping.IMappingHandler,Apizr.ILazyFactory{Polly.Registry.IReadOnlyPolicyRegistry{System.String}},Apizr.Configuring.Manager.IApizrManagerOptions{``0},``1},System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
    name: CreateManagerFor(Of TWebApi, TApizrManager)
    nameWithType: IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)
    fullName: Apizr.IApizrBuilder.CreateManagerFor(Of TWebApi, TApizrManager)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ILazyFactory`1
    name: ILazyFactory
    nameWithType: ILazyFactory
    fullName: Apizr.ILazyFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrManager
    nameWithType: TApizrManager
    fullName: TApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
