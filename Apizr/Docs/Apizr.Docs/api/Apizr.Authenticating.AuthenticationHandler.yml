### YamlMime:ManagedReference
items:
- uid: Apizr.Authenticating.AuthenticationHandler
  commentId: T:Apizr.Authenticating.AuthenticationHandler
  id: AuthenticationHandler
  parent: Apizr.Authenticating
  children:
  - Apizr.Authenticating.AuthenticationHandler.#ctor(Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  - Apizr.Authenticating.AuthenticationHandler.GetToken
  - Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  - Apizr.Authenticating.AuthenticationHandler.SetToken(System.String)
  langs:
  - csharp
  - vb
  name: AuthenticationHandler
  nameWithType: AuthenticationHandler
  fullName: Apizr.Authenticating.AuthenticationHandler
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/Authenticating/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: AuthenticationHandler
    path: ../../Src/Apizr/Authenticating/AuthenticationHandler.cs
    startLine: 13
  assemblies:
  - Apizr
  namespace: Apizr.Authenticating
  summary: "\nThe authentication handler implementation refreshing token\n"
  example: []
  syntax:
    content: 'public class AuthenticationHandler : AuthenticationHandlerBase, IDisposable, IAuthenticationHandler'
    content.vb: >-
      Public Class AuthenticationHandler
          Inherits AuthenticationHandlerBase
          Implements IDisposable, IAuthenticationHandler
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  - System.Net.Http.DelegatingHandler
  - Apizr.Authenticating.AuthenticationHandlerBase
  implements:
  - System.IDisposable
  - Apizr.Authenticating.IAuthenticationHandler
  inheritedMembers:
  - Apizr.Authenticating.AuthenticationHandlerBase.Logger
  - Apizr.Authenticating.AuthenticationHandlerBase.ApizrOptions
  - Apizr.Authenticating.AuthenticationHandlerBase.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync(System.Net.Http.HttpRequestMessage)
  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  - System.Net.Http.DelegatingHandler.InnerHandler
  - System.Net.Http.HttpMessageHandler.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Authenticating.AuthenticationHandler.#ctor(Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Authenticating.AuthenticationHandler.#ctor(Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  id: '#ctor(Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})'
  parent: Apizr.Authenticating.AuthenticationHandler
  langs:
  - csharp
  - vb
  name: AuthenticationHandler(ILogger, IApizrManagerOptionsBase, Func<HttpRequestMessage, Task<String>>)
  nameWithType: AuthenticationHandler.AuthenticationHandler(ILogger, IApizrManagerOptionsBase, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Authenticating.AuthenticationHandler.AuthenticationHandler(Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Apizr/Authenticating/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Apizr/Authenticating/AuthenticationHandler.cs
    startLine: 24
  assemblies:
  - Apizr
  namespace: Apizr.Authenticating
  summary: "\nThe authentication handler constructor\n"
  example: []
  syntax:
    content: public AuthenticationHandler(ILogger logger, IApizrManagerOptionsBase apizrOptions, Func<HttpRequestMessage, Task<string>> refreshTokenFactory)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger
    - id: apizrOptions
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
      description: The Apizr options
    - id: refreshTokenFactory
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
      description: The refresh token factory
    content.vb: Public Sub New(logger As ILogger, apizrOptions As IApizrManagerOptionsBase, refreshTokenFactory As Func(Of HttpRequestMessage, Task(Of String)))
  overload: Apizr.Authenticating.AuthenticationHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  nameWithType.vb: AuthenticationHandler.AuthenticationHandler(ILogger, IApizrManagerOptionsBase, Func(Of HttpRequestMessage, Task(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Authenticating.AuthenticationHandler.AuthenticationHandler(Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: AuthenticationHandler(ILogger, IApizrManagerOptionsBase, Func(Of HttpRequestMessage, Task(Of String)))
- uid: Apizr.Authenticating.AuthenticationHandler.GetToken
  commentId: M:Apizr.Authenticating.AuthenticationHandler.GetToken
  id: GetToken
  parent: Apizr.Authenticating.AuthenticationHandler
  langs:
  - csharp
  - vb
  name: GetToken()
  nameWithType: AuthenticationHandler.GetToken()
  fullName: Apizr.Authenticating.AuthenticationHandler.GetToken()
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Authenticating/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetToken
    path: ../../Src/Apizr/Authenticating/AuthenticationHandler.cs
    startLine: 30
  assemblies:
  - Apizr
  namespace: Apizr.Authenticating
  summary: "\nThe method called to get token from settings\n"
  example: []
  syntax:
    content: public override string GetToken()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function GetToken As String
  overridden: Apizr.Authenticating.AuthenticationHandlerBase.GetToken
  overload: Apizr.Authenticating.AuthenticationHandler.GetToken*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Apizr.Authenticating.AuthenticationHandler.SetToken(System.String)
  commentId: M:Apizr.Authenticating.AuthenticationHandler.SetToken(System.String)
  id: SetToken(System.String)
  parent: Apizr.Authenticating.AuthenticationHandler
  langs:
  - csharp
  - vb
  name: SetToken(String)
  nameWithType: AuthenticationHandler.SetToken(String)
  fullName: Apizr.Authenticating.AuthenticationHandler.SetToken(System.String)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Authenticating/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SetToken
    path: ../../Src/Apizr/Authenticating/AuthenticationHandler.cs
    startLine: 33
  assemblies:
  - Apizr
  namespace: Apizr.Authenticating
  summary: "\nThe method called to save token into settings\n"
  example: []
  syntax:
    content: public override void SetToken(string token)
    parameters:
    - id: token
      type: System.String
      description: The token to save
    content.vb: Public Overrides Sub SetToken(token As String)
  overridden: Apizr.Authenticating.AuthenticationHandlerBase.SetToken(System.String)
  overload: Apizr.Authenticating.AuthenticationHandler.SetToken*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  id: RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  parent: Apizr.Authenticating.AuthenticationHandler
  langs:
  - csharp
  - vb
  name: RefreshTokenAsync(HttpRequestMessage)
  nameWithType: AuthenticationHandler.RefreshTokenAsync(HttpRequestMessage)
  fullName: Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Authenticating/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: RefreshTokenAsync
    path: ../../Src/Apizr/Authenticating/AuthenticationHandler.cs
    startLine: 36
  assemblies:
  - Apizr
  namespace: Apizr.Authenticating
  summary: "\nThe method called to refresh token when rejected or empty\n"
  example: []
  syntax:
    content: public override Task<string> RefreshTokenAsync(HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The request to authenticate
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Overrides Function RefreshTokenAsync(request As HttpRequestMessage) As Task(Of String)
  overridden: Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  overload: Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Apizr.Authenticating
  commentId: N:Apizr.Authenticating
  name: Apizr.Authenticating
  nameWithType: Apizr.Authenticating
  fullName: Apizr.Authenticating
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.DelegatingHandler
  commentId: T:System.Net.Http.DelegatingHandler
  parent: System.Net.Http
  isExternal: true
  name: DelegatingHandler
  nameWithType: DelegatingHandler
  fullName: System.Net.Http.DelegatingHandler
- uid: Apizr.Authenticating.AuthenticationHandlerBase
  commentId: T:Apizr.Authenticating.AuthenticationHandlerBase
  parent: Apizr.Authenticating
  name: AuthenticationHandlerBase
  nameWithType: AuthenticationHandlerBase
  fullName: Apizr.Authenticating.AuthenticationHandlerBase
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Apizr.Authenticating.IAuthenticationHandler
  commentId: T:Apizr.Authenticating.IAuthenticationHandler
  parent: Apizr.Authenticating
  name: IAuthenticationHandler
  nameWithType: IAuthenticationHandler
  fullName: Apizr.Authenticating.IAuthenticationHandler
- uid: Apizr.Authenticating.AuthenticationHandlerBase.Logger
  commentId: F:Apizr.Authenticating.AuthenticationHandlerBase.Logger
  parent: Apizr.Authenticating.AuthenticationHandlerBase
  name: Logger
  nameWithType: AuthenticationHandlerBase.Logger
  fullName: Apizr.Authenticating.AuthenticationHandlerBase.Logger
- uid: Apizr.Authenticating.AuthenticationHandlerBase.ApizrOptions
  commentId: F:Apizr.Authenticating.AuthenticationHandlerBase.ApizrOptions
  parent: Apizr.Authenticating.AuthenticationHandlerBase
  name: ApizrOptions
  nameWithType: AuthenticationHandlerBase.ApizrOptions
  fullName: Apizr.Authenticating.AuthenticationHandlerBase.ApizrOptions
- uid: Apizr.Authenticating.AuthenticationHandlerBase.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Apizr.Authenticating.AuthenticationHandlerBase.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Apizr.Authenticating.AuthenticationHandlerBase
  isExternal: true
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: AuthenticationHandlerBase.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: Apizr.Authenticating.AuthenticationHandlerBase.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AuthenticationHandlerBase.SendAsync
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AuthenticationHandlerBase.SendAsync
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync(System.Net.Http.HttpRequestMessage)
  parent: Apizr.Authenticating.AuthenticationHandlerBase
  isExternal: true
  name: CloneHttpRequestMessageAsync(HttpRequestMessage)
  nameWithType: AuthenticationHandlerBase.CloneHttpRequestMessageAsync(HttpRequestMessage)
  fullName: Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync(System.Net.Http.HttpRequestMessage)
  spec.csharp:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync(System.Net.Http.HttpRequestMessage)
    name: CloneHttpRequestMessageAsync
    nameWithType: AuthenticationHandlerBase.CloneHttpRequestMessageAsync
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync(System.Net.Http.HttpRequestMessage)
    name: CloneHttpRequestMessageAsync
    nameWithType: AuthenticationHandlerBase.CloneHttpRequestMessageAsync
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.CloneHttpRequestMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  commentId: M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DelegatingHandler.Dispose(Boolean)
  fullName: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DelegatingHandler.Dispose
    fullName: System.Net.Http.DelegatingHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DelegatingHandler.Dispose
    fullName: System.Net.Http.DelegatingHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.DelegatingHandler.InnerHandler
  commentId: P:System.Net.Http.DelegatingHandler.InnerHandler
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: InnerHandler
  nameWithType: DelegatingHandler.InnerHandler
  fullName: System.Net.Http.DelegatingHandler.InnerHandler
- uid: System.Net.Http.HttpMessageHandler.Dispose
  commentId: M:System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: Dispose()
  nameWithType: HttpMessageHandler.Dispose()
  fullName: System.Net.Http.HttpMessageHandler.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Apizr.Authenticating.AuthenticationHandler.#ctor*
  commentId: Overload:Apizr.Authenticating.AuthenticationHandler.#ctor
  name: AuthenticationHandler
  nameWithType: AuthenticationHandler.AuthenticationHandler
  fullName: Apizr.Authenticating.AuthenticationHandler.AuthenticationHandler
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBase
  parent: Apizr.Configuring.Manager
  name: IApizrManagerOptionsBase
  nameWithType: IApizrManagerOptionsBase
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
- uid: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
  commentId: T:System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
  parent: System
  definition: System.Func`2
  name: Func<HttpRequestMessage, Task<String>>
  nameWithType: Func<HttpRequestMessage, Task<String>>
  fullName: System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>
  nameWithType.vb: Func(Of HttpRequestMessage, Task(Of String))
  fullName.vb: System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))
  name.vb: Func(Of HttpRequestMessage, Task(Of String))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Apizr.Configuring.Manager
  commentId: N:Apizr.Configuring.Manager
  name: Apizr.Configuring.Manager
  nameWithType: Apizr.Configuring.Manager
  fullName: Apizr.Configuring.Manager
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Authenticating.AuthenticationHandlerBase.GetToken
  commentId: M:Apizr.Authenticating.AuthenticationHandlerBase.GetToken
  parent: Apizr.Authenticating.AuthenticationHandlerBase
  name: GetToken()
  nameWithType: AuthenticationHandlerBase.GetToken()
  fullName: Apizr.Authenticating.AuthenticationHandlerBase.GetToken()
  spec.csharp:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.GetToken
    name: GetToken
    nameWithType: AuthenticationHandlerBase.GetToken
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.GetToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.GetToken
    name: GetToken
    nameWithType: AuthenticationHandlerBase.GetToken
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.GetToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Authenticating.AuthenticationHandler.GetToken*
  commentId: Overload:Apizr.Authenticating.AuthenticationHandler.GetToken
  name: GetToken
  nameWithType: AuthenticationHandler.GetToken
  fullName: Apizr.Authenticating.AuthenticationHandler.GetToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Apizr.Authenticating.AuthenticationHandlerBase.SetToken(System.String)
  commentId: M:Apizr.Authenticating.AuthenticationHandlerBase.SetToken(System.String)
  parent: Apizr.Authenticating.AuthenticationHandlerBase
  isExternal: true
  name: SetToken(String)
  nameWithType: AuthenticationHandlerBase.SetToken(String)
  fullName: Apizr.Authenticating.AuthenticationHandlerBase.SetToken(System.String)
  spec.csharp:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.SetToken(System.String)
    name: SetToken
    nameWithType: AuthenticationHandlerBase.SetToken
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.SetToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.SetToken(System.String)
    name: SetToken
    nameWithType: AuthenticationHandlerBase.SetToken
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.SetToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Authenticating.AuthenticationHandler.SetToken*
  commentId: Overload:Apizr.Authenticating.AuthenticationHandler.SetToken
  name: SetToken
  nameWithType: AuthenticationHandler.SetToken
  fullName: Apizr.Authenticating.AuthenticationHandler.SetToken
- uid: Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  parent: Apizr.Authenticating.AuthenticationHandlerBase
  isExternal: true
  name: RefreshTokenAsync(HttpRequestMessage)
  nameWithType: AuthenticationHandlerBase.RefreshTokenAsync(HttpRequestMessage)
  fullName: Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
  spec.csharp:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
    name: RefreshTokenAsync
    nameWithType: AuthenticationHandlerBase.RefreshTokenAsync
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync(System.Net.Http.HttpRequestMessage)
    name: RefreshTokenAsync
    nameWithType: AuthenticationHandlerBase.RefreshTokenAsync
    fullName: Apizr.Authenticating.AuthenticationHandlerBase.RefreshTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync*
  commentId: Overload:Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync
  name: RefreshTokenAsync
  nameWithType: AuthenticationHandler.RefreshTokenAsync
  fullName: Apizr.Authenticating.AuthenticationHandler.RefreshTokenAsync
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
