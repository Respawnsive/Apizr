### YamlMime:ManagedReference
items:
- uid: Apizr.Caching.CacheMode
  commentId: T:Apizr.Caching.CacheMode
  id: CacheMode
  parent: Apizr.Caching
  children:
  - Apizr.Caching.CacheMode.GetAndFetch
  - Apizr.Caching.CacheMode.GetOrFetch
  - Apizr.Caching.CacheMode.None
  langs:
  - csharp
  - vb
  name: CacheMode
  nameWithType: CacheMode
  fullName: Apizr.Caching.CacheMode
  type: Enum
  source:
    remote:
      path: Apizr/Apizr/Caching/CacheMode.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: CacheMode
    path: ../../Apizr/Caching/CacheMode.cs
    startLine: 2
  assemblies:
  - Apizr
  namespace: Apizr.Caching
  syntax:
    content: public enum CacheMode
    content.vb: Public Enum CacheMode
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Apizr.Caching.CacheMode.None
  commentId: F:Apizr.Caching.CacheMode.None
  id: None
  parent: Apizr.Caching.CacheMode
  langs:
  - csharp
  - vb
  name: None
  nameWithType: CacheMode.None
  fullName: Apizr.Caching.CacheMode.None
  type: Field
  source:
    remote:
      path: Apizr/Apizr/Caching/CacheMode.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: None
    path: ../../Apizr/Caching/CacheMode.cs
    startLine: 7
  assemblies:
  - Apizr
  namespace: Apizr.Caching
  summary: "\nReturns fresh data when request succeed (no cache)\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: Apizr.Caching.CacheMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Apizr.Caching.CacheMode.GetAndFetch
  commentId: F:Apizr.Caching.CacheMode.GetAndFetch
  id: GetAndFetch
  parent: Apizr.Caching.CacheMode
  langs:
  - csharp
  - vb
  name: GetAndFetch
  nameWithType: CacheMode.GetAndFetch
  fullName: Apizr.Caching.CacheMode.GetAndFetch
  type: Field
  source:
    remote:
      path: Apizr/Apizr/Caching/CacheMode.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetAndFetch
    path: ../../Apizr/Caching/CacheMode.cs
    startLine: 12
  assemblies:
  - Apizr
  namespace: Apizr.Caching
  summary: "\nReturns fresh data when request succeed otherwise cached one if exist (dynamic data)\n"
  example: []
  syntax:
    content: GetAndFetch = 1
    return:
      type: Apizr.Caching.CacheMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Apizr.Caching.CacheMode.GetOrFetch
  commentId: F:Apizr.Caching.CacheMode.GetOrFetch
  id: GetOrFetch
  parent: Apizr.Caching.CacheMode
  langs:
  - csharp
  - vb
  name: GetOrFetch
  nameWithType: CacheMode.GetOrFetch
  fullName: Apizr.Caching.CacheMode.GetOrFetch
  type: Field
  source:
    remote:
      path: Apizr/Apizr/Caching/CacheMode.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetOrFetch
    path: ../../Apizr/Caching/CacheMode.cs
    startLine: 17
  assemblies:
  - Apizr
  namespace: Apizr.Caching
  summary: "\nReturns cached data if we get some otherwise fresh one if request succeed (static data)\n"
  example: []
  syntax:
    content: GetOrFetch = 2
    return:
      type: Apizr.Caching.CacheMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Apizr.Caching
  commentId: N:Apizr.Caching
  name: Apizr.Caching
  nameWithType: Apizr.Caching
  fullName: Apizr.Caching
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Caching.CacheMode
  commentId: T:Apizr.Caching.CacheMode
  parent: Apizr.Caching
  name: CacheMode
  nameWithType: CacheMode
  fullName: Apizr.Caching.CacheMode
