### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.ApizrOptions
  commentId: T:Apizr.Configuring.ApizrOptions
  id: ApizrOptions
  parent: Apizr.Configuring
  children:
  - Apizr.Configuring.ApizrOptions.#ctor(Apizr.Configuring.Common.IApizrCommonOptions,Apizr.Configuring.Proper.IApizrProperOptions)
  - Apizr.Configuring.ApizrOptions.BaseAddressFactory
  - Apizr.Configuring.ApizrOptions.CacheHandlerFactory
  - Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory
  - Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories
  - Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory
  - Apizr.Configuring.ApizrOptions.HttpTracerModeFactory
  - Apizr.Configuring.ApizrOptions.LoggerFactory
  - Apizr.Configuring.ApizrOptions.LoggerFactoryFactory
  - Apizr.Configuring.ApizrOptions.LogLevelFactory
  - Apizr.Configuring.ApizrOptions.MappingHandlerFactory
  - Apizr.Configuring.ApizrOptions.PolicyRegistryFactory
  - Apizr.Configuring.ApizrOptions.RefitSettingsFactory
  - Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory
  langs:
  - csharp
  - vb
  name: ApizrOptions
  nameWithType: ApizrOptions
  fullName: Apizr.Configuring.ApizrOptions
  type: Class
  source:
    id: ApizrOptions
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 15
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: 'public class ApizrOptions : ApizrOptionsBase, IApizrOptions, IApizrOptionsBase, IApizrCommonOptions, IApizrCommonOptionsBase, IApizrProperOptions, IApizrProperOptionsBase, IApizrSharedOptions, IApizrSharedOptionsBase'
    content.vb: >-
      Public Class ApizrOptions
          Inherits ApizrOptionsBase
          Implements IApizrOptions, IApizrOptionsBase, IApizrCommonOptions, IApizrCommonOptionsBase, IApizrProperOptions, IApizrProperOptionsBase, IApizrSharedOptions, IApizrSharedOptionsBase
  inheritance:
  - System.Object
  - Apizr.Configuring.Shared.ApizrSharedOptionsBase
  - Apizr.Configuring.ApizrOptionsBase
  implements:
  - Apizr.Configuring.IApizrOptions
  - Apizr.Configuring.IApizrOptionsBase
  - Apizr.Configuring.Common.IApizrCommonOptions
  - Apizr.Configuring.Common.IApizrCommonOptionsBase
  - Apizr.Configuring.Proper.IApizrProperOptions
  - Apizr.Configuring.Proper.IApizrProperOptionsBase
  - Apizr.Configuring.Shared.IApizrSharedOptions
  - Apizr.Configuring.Shared.IApizrSharedOptionsBase
  inheritedMembers:
  - Apizr.Configuring.ApizrOptionsBase.WebApiType
  - Apizr.Configuring.ApizrOptionsBase.BaseAddress
  - Apizr.Configuring.ApizrOptionsBase.PolicyRegistryKeys
  - Apizr.Configuring.ApizrOptionsBase.Logger
  - Apizr.Configuring.ApizrOptionsBase.RefitSettings
  - Apizr.Configuring.Shared.ApizrSharedOptionsBase.HttpTracerMode
  - Apizr.Configuring.Shared.ApizrSharedOptionsBase.TrafficVerbosity
  - Apizr.Configuring.Shared.ApizrSharedOptionsBase.LogLevel
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Configuring.ApizrOptions.#ctor(Apizr.Configuring.Common.IApizrCommonOptions,Apizr.Configuring.Proper.IApizrProperOptions)
  commentId: M:Apizr.Configuring.ApizrOptions.#ctor(Apizr.Configuring.Common.IApizrCommonOptions,Apizr.Configuring.Proper.IApizrProperOptions)
  id: '#ctor(Apizr.Configuring.Common.IApizrCommonOptions,Apizr.Configuring.Proper.IApizrProperOptions)'
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: ApizrOptions(IApizrCommonOptions, IApizrProperOptions)
  nameWithType: ApizrOptions.ApizrOptions(IApizrCommonOptions, IApizrProperOptions)
  fullName: Apizr.Configuring.ApizrOptions.ApizrOptions(Apizr.Configuring.Common.IApizrCommonOptions, Apizr.Configuring.Proper.IApizrProperOptions)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 17
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public ApizrOptions(IApizrCommonOptions commonOptions, IApizrProperOptions properOptions)
    parameters:
    - id: commonOptions
      type: Apizr.Configuring.Common.IApizrCommonOptions
    - id: properOptions
      type: Apizr.Configuring.Proper.IApizrProperOptions
    content.vb: Public Sub New(commonOptions As IApizrCommonOptions, properOptions As IApizrProperOptions)
  overload: Apizr.Configuring.ApizrOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.BaseAddressFactory
  commentId: P:Apizr.Configuring.ApizrOptions.BaseAddressFactory
  id: BaseAddressFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: BaseAddressFactory
  nameWithType: ApizrOptions.BaseAddressFactory
  fullName: Apizr.Configuring.ApizrOptions.BaseAddressFactory
  type: Property
  source:
    id: BaseAddressFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 35
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<Uri> BaseAddressFactory { get; set; }
    parameters: []
    return:
      type: System.Func{System.Uri}
    content.vb: Public Property BaseAddressFactory As Func(Of Uri)
  overload: Apizr.Configuring.ApizrOptions.BaseAddressFactory*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptions.BaseAddressFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.HttpTracerModeFactory
  commentId: P:Apizr.Configuring.ApizrOptions.HttpTracerModeFactory
  id: HttpTracerModeFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: HttpTracerModeFactory
  nameWithType: ApizrOptions.HttpTracerModeFactory
  fullName: Apizr.Configuring.ApizrOptions.HttpTracerModeFactory
  type: Property
  source:
    id: HttpTracerModeFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 42
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<HttpTracerMode> HttpTracerModeFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Apizr.Logging.HttpTracerMode}
    content.vb: Public Property HttpTracerModeFactory As Func(Of HttpTracerMode)
  overload: Apizr.Configuring.ApizrOptions.HttpTracerModeFactory*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedOptions.HttpTracerModeFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory
  commentId: P:Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory
  id: TrafficVerbosityFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: TrafficVerbosityFactory
  nameWithType: ApizrOptions.TrafficVerbosityFactory
  fullName: Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory
  type: Property
  source:
    id: TrafficVerbosityFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 49
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<HttpMessageParts> TrafficVerbosityFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Apizr.Logging.HttpMessageParts}
    content.vb: Public Property TrafficVerbosityFactory As Func(Of HttpMessageParts)
  overload: Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedOptions.TrafficVerbosityFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.LogLevelFactory
  commentId: P:Apizr.Configuring.ApizrOptions.LogLevelFactory
  id: LogLevelFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: LogLevelFactory
  nameWithType: ApizrOptions.LogLevelFactory
  fullName: Apizr.Configuring.ApizrOptions.LogLevelFactory
  type: Property
  source:
    id: LogLevelFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 56
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<LogLevel> LogLevelFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Microsoft.Extensions.Logging.LogLevel}
    content.vb: Public Property LogLevelFactory As Func(Of LogLevel)
  overload: Apizr.Configuring.ApizrOptions.LogLevelFactory*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedOptions.LogLevelFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.LoggerFactoryFactory
  commentId: P:Apizr.Configuring.ApizrOptions.LoggerFactoryFactory
  id: LoggerFactoryFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: LoggerFactoryFactory
  nameWithType: ApizrOptions.LoggerFactoryFactory
  fullName: Apizr.Configuring.ApizrOptions.LoggerFactoryFactory
  type: Property
  source:
    id: LoggerFactoryFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 62
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<ILoggerFactory> LoggerFactoryFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Microsoft.Extensions.Logging.ILoggerFactory}
    content.vb: Public Property LoggerFactoryFactory As Func(Of ILoggerFactory)
  overload: Apizr.Configuring.ApizrOptions.LoggerFactoryFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptions.LoggerFactoryFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.LoggerFactory
  commentId: P:Apizr.Configuring.ApizrOptions.LoggerFactory
  id: LoggerFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: LoggerFactory
  nameWithType: ApizrOptions.LoggerFactory
  fullName: Apizr.Configuring.ApizrOptions.LoggerFactory
  type: Property
  source:
    id: LoggerFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 64
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<ILoggerFactory, string, ILogger> LoggerFactory { get; }
    parameters: []
    return:
      type: System.Func{Microsoft.Extensions.Logging.ILoggerFactory,System.String,Microsoft.Extensions.Logging.ILogger}
    content.vb: Public ReadOnly Property LoggerFactory As Func(Of ILoggerFactory, String, ILogger)
  overload: Apizr.Configuring.ApizrOptions.LoggerFactory*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptions.LoggerFactory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory
  commentId: P:Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory
  id: HttpClientHandlerFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: HttpClientHandlerFactory
  nameWithType: ApizrOptions.HttpClientHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory
  type: Property
  source:
    id: HttpClientHandlerFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 66
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<HttpClientHandler> HttpClientHandlerFactory { get; set; }
    parameters: []
    return:
      type: System.Func{System.Net.Http.HttpClientHandler}
    content.vb: Public Property HttpClientHandlerFactory As Func(Of HttpClientHandler)
  overload: Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedOptions.HttpClientHandlerFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.PolicyRegistryFactory
  commentId: P:Apizr.Configuring.ApizrOptions.PolicyRegistryFactory
  id: PolicyRegistryFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: PolicyRegistryFactory
  nameWithType: ApizrOptions.PolicyRegistryFactory
  fullName: Apizr.Configuring.ApizrOptions.PolicyRegistryFactory
  type: Property
  source:
    id: PolicyRegistryFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 68
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<IReadOnlyPolicyRegistry<string>> PolicyRegistryFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}}
    content.vb: Public Property PolicyRegistryFactory As Func(Of IReadOnlyPolicyRegistry(Of String))
  overload: Apizr.Configuring.ApizrOptions.PolicyRegistryFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptions.PolicyRegistryFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.RefitSettingsFactory
  commentId: P:Apizr.Configuring.ApizrOptions.RefitSettingsFactory
  id: RefitSettingsFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: RefitSettingsFactory
  nameWithType: ApizrOptions.RefitSettingsFactory
  fullName: Apizr.Configuring.ApizrOptions.RefitSettingsFactory
  type: Property
  source:
    id: RefitSettingsFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 71
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<RefitSettings> RefitSettingsFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Refit.RefitSettings}
    content.vb: Public Property RefitSettingsFactory As Func(Of RefitSettings)
  overload: Apizr.Configuring.ApizrOptions.RefitSettingsFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptions.RefitSettingsFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory
  commentId: P:Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory
  id: ConnectivityHandlerFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: ConnectivityHandlerFactory
  nameWithType: ApizrOptions.ConnectivityHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory
  type: Property
  source:
    id: ConnectivityHandlerFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 77
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<IConnectivityHandler> ConnectivityHandlerFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Apizr.Connecting.IConnectivityHandler}
    content.vb: Public Property ConnectivityHandlerFactory As Func(Of IConnectivityHandler)
  overload: Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptions.ConnectivityHandlerFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.CacheHandlerFactory
  commentId: P:Apizr.Configuring.ApizrOptions.CacheHandlerFactory
  id: CacheHandlerFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: CacheHandlerFactory
  nameWithType: ApizrOptions.CacheHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.CacheHandlerFactory
  type: Property
  source:
    id: CacheHandlerFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 78
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<ICacheHandler> CacheHandlerFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Apizr.Caching.ICacheHandler}
    content.vb: Public Property CacheHandlerFactory As Func(Of ICacheHandler)
  overload: Apizr.Configuring.ApizrOptions.CacheHandlerFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptions.CacheHandlerFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.MappingHandlerFactory
  commentId: P:Apizr.Configuring.ApizrOptions.MappingHandlerFactory
  id: MappingHandlerFactory
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: MappingHandlerFactory
  nameWithType: ApizrOptions.MappingHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.MappingHandlerFactory
  type: Property
  source:
    id: MappingHandlerFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 79
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public Func<IMappingHandler> MappingHandlerFactory { get; set; }
    parameters: []
    return:
      type: System.Func{Apizr.Mapping.IMappingHandler}
    content.vb: Public Property MappingHandlerFactory As Func(Of IMappingHandler)
  overload: Apizr.Configuring.ApizrOptions.MappingHandlerFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptions.MappingHandlerFactory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories
  commentId: P:Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories
  id: DelegatingHandlersFactories
  parent: Apizr.Configuring.ApizrOptions
  langs:
  - csharp
  - vb
  name: DelegatingHandlersFactories
  nameWithType: ApizrOptions.DelegatingHandlersFactories
  fullName: Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories
  type: Property
  source:
    id: DelegatingHandlersFactories
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\ApizrOptions.cs
    startLine: 80
  assemblies:
  - Apizr
  namespace: Apizr.Configuring
  syntax:
    content: public IList<Func<ILogger, IApizrOptionsBase, DelegatingHandler>> DelegatingHandlersFactories { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.IApizrOptionsBase,System.Net.Http.DelegatingHandler}}
    content.vb: Public ReadOnly Property DelegatingHandlersFactories As IList(Of Func(Of ILogger, IApizrOptionsBase, DelegatingHandler))
  overload: Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedOptions.DelegatingHandlersFactories
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Apizr.Configuring
  commentId: N:Apizr.Configuring
  name: Apizr.Configuring
  nameWithType: Apizr.Configuring
  fullName: Apizr.Configuring
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Configuring.Shared.ApizrSharedOptionsBase
  commentId: T:Apizr.Configuring.Shared.ApizrSharedOptionsBase
  parent: Apizr.Configuring.Shared
  name: ApizrSharedOptionsBase
  nameWithType: ApizrSharedOptionsBase
  fullName: Apizr.Configuring.Shared.ApizrSharedOptionsBase
- uid: Apizr.Configuring.ApizrOptionsBase
  commentId: T:Apizr.Configuring.ApizrOptionsBase
  parent: Apizr.Configuring
  name: ApizrOptionsBase
  nameWithType: ApizrOptionsBase
  fullName: Apizr.Configuring.ApizrOptionsBase
- uid: Apizr.Configuring.IApizrOptions
  commentId: T:Apizr.Configuring.IApizrOptions
  parent: Apizr.Configuring
  name: IApizrOptions
  nameWithType: IApizrOptions
  fullName: Apizr.Configuring.IApizrOptions
- uid: Apizr.Configuring.IApizrOptionsBase
  commentId: T:Apizr.Configuring.IApizrOptionsBase
  parent: Apizr.Configuring
  name: IApizrOptionsBase
  nameWithType: IApizrOptionsBase
  fullName: Apizr.Configuring.IApizrOptionsBase
- uid: Apizr.Configuring.Common.IApizrCommonOptions
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptions
  parent: Apizr.Configuring.Common
  name: IApizrCommonOptions
  nameWithType: IApizrCommonOptions
  fullName: Apizr.Configuring.Common.IApizrCommonOptions
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBase
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBase
  parent: Apizr.Configuring.Common
  name: IApizrCommonOptionsBase
  nameWithType: IApizrCommonOptionsBase
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBase
- uid: Apizr.Configuring.Proper.IApizrProperOptions
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptions
  parent: Apizr.Configuring.Proper
  name: IApizrProperOptions
  nameWithType: IApizrProperOptions
  fullName: Apizr.Configuring.Proper.IApizrProperOptions
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBase
  parent: Apizr.Configuring.Proper
  name: IApizrProperOptionsBase
  nameWithType: IApizrProperOptionsBase
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase
- uid: Apizr.Configuring.Shared.IApizrSharedOptions
  commentId: T:Apizr.Configuring.Shared.IApizrSharedOptions
  parent: Apizr.Configuring.Shared
  name: IApizrSharedOptions
  nameWithType: IApizrSharedOptions
  fullName: Apizr.Configuring.Shared.IApizrSharedOptions
- uid: Apizr.Configuring.Shared.IApizrSharedOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrSharedOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrSharedOptionsBase
  nameWithType: IApizrSharedOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrSharedOptionsBase
- uid: Apizr.Configuring.ApizrOptionsBase.WebApiType
  commentId: P:Apizr.Configuring.ApizrOptionsBase.WebApiType
  parent: Apizr.Configuring.ApizrOptionsBase
  name: WebApiType
  nameWithType: ApizrOptionsBase.WebApiType
  fullName: Apizr.Configuring.ApizrOptionsBase.WebApiType
- uid: Apizr.Configuring.ApizrOptionsBase.BaseAddress
  commentId: P:Apizr.Configuring.ApizrOptionsBase.BaseAddress
  parent: Apizr.Configuring.ApizrOptionsBase
  name: BaseAddress
  nameWithType: ApizrOptionsBase.BaseAddress
  fullName: Apizr.Configuring.ApizrOptionsBase.BaseAddress
- uid: Apizr.Configuring.ApizrOptionsBase.PolicyRegistryKeys
  commentId: P:Apizr.Configuring.ApizrOptionsBase.PolicyRegistryKeys
  parent: Apizr.Configuring.ApizrOptionsBase
  name: PolicyRegistryKeys
  nameWithType: ApizrOptionsBase.PolicyRegistryKeys
  fullName: Apizr.Configuring.ApizrOptionsBase.PolicyRegistryKeys
- uid: Apizr.Configuring.ApizrOptionsBase.Logger
  commentId: P:Apizr.Configuring.ApizrOptionsBase.Logger
  parent: Apizr.Configuring.ApizrOptionsBase
  name: Logger
  nameWithType: ApizrOptionsBase.Logger
  fullName: Apizr.Configuring.ApizrOptionsBase.Logger
- uid: Apizr.Configuring.ApizrOptionsBase.RefitSettings
  commentId: P:Apizr.Configuring.ApizrOptionsBase.RefitSettings
  parent: Apizr.Configuring.ApizrOptionsBase
  name: RefitSettings
  nameWithType: ApizrOptionsBase.RefitSettings
  fullName: Apizr.Configuring.ApizrOptionsBase.RefitSettings
- uid: Apizr.Configuring.Shared.ApizrSharedOptionsBase.HttpTracerMode
  commentId: P:Apizr.Configuring.Shared.ApizrSharedOptionsBase.HttpTracerMode
  parent: Apizr.Configuring.Shared.ApizrSharedOptionsBase
  name: HttpTracerMode
  nameWithType: ApizrSharedOptionsBase.HttpTracerMode
  fullName: Apizr.Configuring.Shared.ApizrSharedOptionsBase.HttpTracerMode
- uid: Apizr.Configuring.Shared.ApizrSharedOptionsBase.TrafficVerbosity
  commentId: P:Apizr.Configuring.Shared.ApizrSharedOptionsBase.TrafficVerbosity
  parent: Apizr.Configuring.Shared.ApizrSharedOptionsBase
  name: TrafficVerbosity
  nameWithType: ApizrSharedOptionsBase.TrafficVerbosity
  fullName: Apizr.Configuring.Shared.ApizrSharedOptionsBase.TrafficVerbosity
- uid: Apizr.Configuring.Shared.ApizrSharedOptionsBase.LogLevel
  commentId: P:Apizr.Configuring.Shared.ApizrSharedOptionsBase.LogLevel
  parent: Apizr.Configuring.Shared.ApizrSharedOptionsBase
  name: LogLevel
  nameWithType: ApizrSharedOptionsBase.LogLevel
  fullName: Apizr.Configuring.Shared.ApizrSharedOptionsBase.LogLevel
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Shared
  commentId: N:Apizr.Configuring.Shared
  name: Apizr.Configuring.Shared
  nameWithType: Apizr.Configuring.Shared
  fullName: Apizr.Configuring.Shared
- uid: Apizr.Configuring.Common
  commentId: N:Apizr.Configuring.Common
  name: Apizr.Configuring.Common
  nameWithType: Apizr.Configuring.Common
  fullName: Apizr.Configuring.Common
- uid: Apizr.Configuring.Proper
  commentId: N:Apizr.Configuring.Proper
  name: Apizr.Configuring.Proper
  nameWithType: Apizr.Configuring.Proper
  fullName: Apizr.Configuring.Proper
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Configuring.ApizrOptions.#ctor*
  commentId: Overload:Apizr.Configuring.ApizrOptions.#ctor
  name: ApizrOptions
  nameWithType: ApizrOptions.ApizrOptions
  fullName: Apizr.Configuring.ApizrOptions.ApizrOptions
- uid: Apizr.Configuring.ApizrOptions.BaseAddressFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.BaseAddressFactory
  name: BaseAddressFactory
  nameWithType: ApizrOptions.BaseAddressFactory
  fullName: Apizr.Configuring.ApizrOptions.BaseAddressFactory
- uid: Apizr.Configuring.Proper.IApizrProperOptions.BaseAddressFactory
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptions.BaseAddressFactory
  parent: Apizr.Configuring.Proper.IApizrProperOptions
  name: BaseAddressFactory
  nameWithType: IApizrProperOptions.BaseAddressFactory
  fullName: Apizr.Configuring.Proper.IApizrProperOptions.BaseAddressFactory
- uid: System.Func{System.Uri}
  commentId: T:System.Func{System.Uri}
  parent: System
  definition: System.Func`1
  name: Func<Uri>
  nameWithType: Func<Uri>
  fullName: System.Func<System.Uri>
  nameWithType.vb: Func(Of Uri)
  fullName.vb: System.Func(Of System.Uri)
  name.vb: Func(Of Uri)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.HttpTracerModeFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.HttpTracerModeFactory
  name: HttpTracerModeFactory
  nameWithType: ApizrOptions.HttpTracerModeFactory
  fullName: Apizr.Configuring.ApizrOptions.HttpTracerModeFactory
- uid: Apizr.Configuring.Shared.IApizrSharedOptions.HttpTracerModeFactory
  commentId: P:Apizr.Configuring.Shared.IApizrSharedOptions.HttpTracerModeFactory
  parent: Apizr.Configuring.Shared.IApizrSharedOptions
  name: HttpTracerModeFactory
  nameWithType: IApizrSharedOptions.HttpTracerModeFactory
  fullName: Apizr.Configuring.Shared.IApizrSharedOptions.HttpTracerModeFactory
- uid: System.Func{Apizr.Logging.HttpTracerMode}
  commentId: T:System.Func{Apizr.Logging.HttpTracerMode}
  parent: System
  definition: System.Func`1
  name: Func<HttpTracerMode>
  nameWithType: Func<HttpTracerMode>
  fullName: System.Func<Apizr.Logging.HttpTracerMode>
  nameWithType.vb: Func(Of HttpTracerMode)
  fullName.vb: System.Func(Of Apizr.Logging.HttpTracerMode)
  name.vb: Func(Of HttpTracerMode)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory
  name: TrafficVerbosityFactory
  nameWithType: ApizrOptions.TrafficVerbosityFactory
  fullName: Apizr.Configuring.ApizrOptions.TrafficVerbosityFactory
- uid: Apizr.Configuring.Shared.IApizrSharedOptions.TrafficVerbosityFactory
  commentId: P:Apizr.Configuring.Shared.IApizrSharedOptions.TrafficVerbosityFactory
  parent: Apizr.Configuring.Shared.IApizrSharedOptions
  name: TrafficVerbosityFactory
  nameWithType: IApizrSharedOptions.TrafficVerbosityFactory
  fullName: Apizr.Configuring.Shared.IApizrSharedOptions.TrafficVerbosityFactory
- uid: System.Func{Apizr.Logging.HttpMessageParts}
  commentId: T:System.Func{Apizr.Logging.HttpMessageParts}
  parent: System
  definition: System.Func`1
  name: Func<HttpMessageParts>
  nameWithType: Func<HttpMessageParts>
  fullName: System.Func<Apizr.Logging.HttpMessageParts>
  nameWithType.vb: Func(Of HttpMessageParts)
  fullName.vb: System.Func(Of Apizr.Logging.HttpMessageParts)
  name.vb: Func(Of HttpMessageParts)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.LogLevelFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.LogLevelFactory
  name: LogLevelFactory
  nameWithType: ApizrOptions.LogLevelFactory
  fullName: Apizr.Configuring.ApizrOptions.LogLevelFactory
- uid: Apizr.Configuring.Shared.IApizrSharedOptions.LogLevelFactory
  commentId: P:Apizr.Configuring.Shared.IApizrSharedOptions.LogLevelFactory
  parent: Apizr.Configuring.Shared.IApizrSharedOptions
  name: LogLevelFactory
  nameWithType: IApizrSharedOptions.LogLevelFactory
  fullName: Apizr.Configuring.Shared.IApizrSharedOptions.LogLevelFactory
- uid: System.Func{Microsoft.Extensions.Logging.LogLevel}
  commentId: T:System.Func{Microsoft.Extensions.Logging.LogLevel}
  parent: System
  definition: System.Func`1
  name: Func<LogLevel>
  nameWithType: Func<LogLevel>
  fullName: System.Func<Microsoft.Extensions.Logging.LogLevel>
  nameWithType.vb: Func(Of LogLevel)
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.LogLevel)
  name.vb: Func(Of LogLevel)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.LoggerFactoryFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.LoggerFactoryFactory
  name: LoggerFactoryFactory
  nameWithType: ApizrOptions.LoggerFactoryFactory
  fullName: Apizr.Configuring.ApizrOptions.LoggerFactoryFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptions.LoggerFactoryFactory
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptions.LoggerFactoryFactory
  parent: Apizr.Configuring.Common.IApizrCommonOptions
  name: LoggerFactoryFactory
  nameWithType: IApizrCommonOptions.LoggerFactoryFactory
  fullName: Apizr.Configuring.Common.IApizrCommonOptions.LoggerFactoryFactory
- uid: System.Func{Microsoft.Extensions.Logging.ILoggerFactory}
  commentId: T:System.Func{Microsoft.Extensions.Logging.ILoggerFactory}
  parent: System
  definition: System.Func`1
  name: Func<ILoggerFactory>
  nameWithType: Func<ILoggerFactory>
  fullName: System.Func<Microsoft.Extensions.Logging.ILoggerFactory>
  nameWithType.vb: Func(Of ILoggerFactory)
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: Func(Of ILoggerFactory)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.LoggerFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.LoggerFactory
  name: LoggerFactory
  nameWithType: ApizrOptions.LoggerFactory
  fullName: Apizr.Configuring.ApizrOptions.LoggerFactory
- uid: Apizr.Configuring.Proper.IApizrProperOptions.LoggerFactory
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptions.LoggerFactory
  parent: Apizr.Configuring.Proper.IApizrProperOptions
  name: LoggerFactory
  nameWithType: IApizrProperOptions.LoggerFactory
  fullName: Apizr.Configuring.Proper.IApizrProperOptions.LoggerFactory
- uid: System.Func{Microsoft.Extensions.Logging.ILoggerFactory,System.String,Microsoft.Extensions.Logging.ILogger}
  commentId: T:System.Func{Microsoft.Extensions.Logging.ILoggerFactory,System.String,Microsoft.Extensions.Logging.ILogger}
  parent: System
  definition: System.Func`3
  name: Func<ILoggerFactory, String, ILogger>
  nameWithType: Func<ILoggerFactory, String, ILogger>
  fullName: System.Func<Microsoft.Extensions.Logging.ILoggerFactory, System.String, Microsoft.Extensions.Logging.ILogger>
  nameWithType.vb: Func(Of ILoggerFactory, String, ILogger)
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.ILoggerFactory, System.String, Microsoft.Extensions.Logging.ILogger)
  name.vb: Func(Of ILoggerFactory, String, ILogger)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory
  name: HttpClientHandlerFactory
  nameWithType: ApizrOptions.HttpClientHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.HttpClientHandlerFactory
- uid: Apizr.Configuring.Shared.IApizrSharedOptions.HttpClientHandlerFactory
  commentId: P:Apizr.Configuring.Shared.IApizrSharedOptions.HttpClientHandlerFactory
  parent: Apizr.Configuring.Shared.IApizrSharedOptions
  name: HttpClientHandlerFactory
  nameWithType: IApizrSharedOptions.HttpClientHandlerFactory
  fullName: Apizr.Configuring.Shared.IApizrSharedOptions.HttpClientHandlerFactory
- uid: System.Func{System.Net.Http.HttpClientHandler}
  commentId: T:System.Func{System.Net.Http.HttpClientHandler}
  parent: System
  definition: System.Func`1
  name: Func<HttpClientHandler>
  nameWithType: Func<HttpClientHandler>
  fullName: System.Func<System.Net.Http.HttpClientHandler>
  nameWithType.vb: Func(Of HttpClientHandler)
  fullName.vb: System.Func(Of System.Net.Http.HttpClientHandler)
  name.vb: Func(Of HttpClientHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.PolicyRegistryFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.PolicyRegistryFactory
  name: PolicyRegistryFactory
  nameWithType: ApizrOptions.PolicyRegistryFactory
  fullName: Apizr.Configuring.ApizrOptions.PolicyRegistryFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptions.PolicyRegistryFactory
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptions.PolicyRegistryFactory
  parent: Apizr.Configuring.Common.IApizrCommonOptions
  name: PolicyRegistryFactory
  nameWithType: IApizrCommonOptions.PolicyRegistryFactory
  fullName: Apizr.Configuring.Common.IApizrCommonOptions.PolicyRegistryFactory
- uid: System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}}
  commentId: T:System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}}
  parent: System
  definition: System.Func`1
  name: Func<IReadOnlyPolicyRegistry<String>>
  nameWithType: Func<IReadOnlyPolicyRegistry<String>>
  fullName: System.Func<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>
  nameWithType.vb: Func(Of IReadOnlyPolicyRegistry(Of String))
  fullName.vb: System.Func(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String))
  name.vb: Func(Of IReadOnlyPolicyRegistry(Of String))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.RefitSettingsFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.RefitSettingsFactory
  name: RefitSettingsFactory
  nameWithType: ApizrOptions.RefitSettingsFactory
  fullName: Apizr.Configuring.ApizrOptions.RefitSettingsFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptions.RefitSettingsFactory
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptions.RefitSettingsFactory
  parent: Apizr.Configuring.Common.IApizrCommonOptions
  name: RefitSettingsFactory
  nameWithType: IApizrCommonOptions.RefitSettingsFactory
  fullName: Apizr.Configuring.Common.IApizrCommonOptions.RefitSettingsFactory
- uid: System.Func{Refit.RefitSettings}
  commentId: T:System.Func{Refit.RefitSettings}
  parent: System
  definition: System.Func`1
  name: Func<RefitSettings>
  nameWithType: Func<RefitSettings>
  fullName: System.Func<Refit.RefitSettings>
  nameWithType.vb: Func(Of RefitSettings)
  fullName.vb: System.Func(Of Refit.RefitSettings)
  name.vb: Func(Of RefitSettings)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory
  name: ConnectivityHandlerFactory
  nameWithType: ApizrOptions.ConnectivityHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.ConnectivityHandlerFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptions.ConnectivityHandlerFactory
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptions.ConnectivityHandlerFactory
  parent: Apizr.Configuring.Common.IApizrCommonOptions
  name: ConnectivityHandlerFactory
  nameWithType: IApizrCommonOptions.ConnectivityHandlerFactory
  fullName: Apizr.Configuring.Common.IApizrCommonOptions.ConnectivityHandlerFactory
- uid: System.Func{Apizr.Connecting.IConnectivityHandler}
  commentId: T:System.Func{Apizr.Connecting.IConnectivityHandler}
  parent: System
  definition: System.Func`1
  name: Func<IConnectivityHandler>
  nameWithType: Func<IConnectivityHandler>
  fullName: System.Func<Apizr.Connecting.IConnectivityHandler>
  nameWithType.vb: Func(Of IConnectivityHandler)
  fullName.vb: System.Func(Of Apizr.Connecting.IConnectivityHandler)
  name.vb: Func(Of IConnectivityHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.CacheHandlerFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.CacheHandlerFactory
  name: CacheHandlerFactory
  nameWithType: ApizrOptions.CacheHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.CacheHandlerFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptions.CacheHandlerFactory
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptions.CacheHandlerFactory
  parent: Apizr.Configuring.Common.IApizrCommonOptions
  name: CacheHandlerFactory
  nameWithType: IApizrCommonOptions.CacheHandlerFactory
  fullName: Apizr.Configuring.Common.IApizrCommonOptions.CacheHandlerFactory
- uid: System.Func{Apizr.Caching.ICacheHandler}
  commentId: T:System.Func{Apizr.Caching.ICacheHandler}
  parent: System
  definition: System.Func`1
  name: Func<ICacheHandler>
  nameWithType: Func<ICacheHandler>
  fullName: System.Func<Apizr.Caching.ICacheHandler>
  nameWithType.vb: Func(Of ICacheHandler)
  fullName.vb: System.Func(Of Apizr.Caching.ICacheHandler)
  name.vb: Func(Of ICacheHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.MappingHandlerFactory*
  commentId: Overload:Apizr.Configuring.ApizrOptions.MappingHandlerFactory
  name: MappingHandlerFactory
  nameWithType: ApizrOptions.MappingHandlerFactory
  fullName: Apizr.Configuring.ApizrOptions.MappingHandlerFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptions.MappingHandlerFactory
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptions.MappingHandlerFactory
  parent: Apizr.Configuring.Common.IApizrCommonOptions
  name: MappingHandlerFactory
  nameWithType: IApizrCommonOptions.MappingHandlerFactory
  fullName: Apizr.Configuring.Common.IApizrCommonOptions.MappingHandlerFactory
- uid: System.Func{Apizr.Mapping.IMappingHandler}
  commentId: T:System.Func{Apizr.Mapping.IMappingHandler}
  parent: System
  definition: System.Func`1
  name: Func<IMappingHandler>
  nameWithType: Func<IMappingHandler>
  fullName: System.Func<Apizr.Mapping.IMappingHandler>
  nameWithType.vb: Func(Of IMappingHandler)
  fullName.vb: System.Func(Of Apizr.Mapping.IMappingHandler)
  name.vb: Func(Of IMappingHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories*
  commentId: Overload:Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories
  name: DelegatingHandlersFactories
  nameWithType: ApizrOptions.DelegatingHandlersFactories
  fullName: Apizr.Configuring.ApizrOptions.DelegatingHandlersFactories
- uid: Apizr.Configuring.Shared.IApizrSharedOptions.DelegatingHandlersFactories
  commentId: P:Apizr.Configuring.Shared.IApizrSharedOptions.DelegatingHandlersFactories
  parent: Apizr.Configuring.Shared.IApizrSharedOptions
  name: DelegatingHandlersFactories
  nameWithType: IApizrSharedOptions.DelegatingHandlersFactories
  fullName: Apizr.Configuring.Shared.IApizrSharedOptions.DelegatingHandlersFactories
- uid: System.Collections.Generic.IList{System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.IApizrOptionsBase,System.Net.Http.DelegatingHandler}}
  commentId: T:System.Collections.Generic.IList{System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.IApizrOptionsBase,System.Net.Http.DelegatingHandler}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Func<ILogger, IApizrOptionsBase, DelegatingHandler>>
  nameWithType: IList<Func<ILogger, IApizrOptionsBase, DelegatingHandler>>
  fullName: System.Collections.Generic.IList<System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.IApizrOptionsBase, System.Net.Http.DelegatingHandler>>
  nameWithType.vb: IList(Of Func(Of ILogger, IApizrOptionsBase, DelegatingHandler))
  fullName.vb: System.Collections.Generic.IList(Of System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.IApizrOptionsBase, System.Net.Http.DelegatingHandler))
  name.vb: IList(Of Func(Of ILogger, IApizrOptionsBase, DelegatingHandler))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.IApizrOptionsBase
    name: IApizrOptionsBase
    nameWithType: IApizrOptionsBase
    fullName: Apizr.Configuring.IApizrOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.IApizrOptionsBase
    name: IApizrOptionsBase
    nameWithType: IApizrOptionsBase
    fullName: Apizr.Configuring.IApizrOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
