### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1
  commentId: T:Apizr.Configuring.Manager.ApizrManagerOptions`1
  id: ApizrManagerOptions`1
  parent: Apizr.Configuring.Manager
  children:
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.ContextFactory
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.Options
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.PolicyRegistryKeys
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  langs:
  - csharp
  - vb
  name: ApizrManagerOptions<TWebApi>
  nameWithType: ApizrManagerOptions<TWebApi>
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>
  type: Class
  source:
    id: ApizrManagerOptions
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 133
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nOptions available for static registrations\n"
  example: []
  syntax:
    content: 'public class ApizrManagerOptions<TWebApi> : IApizrManagerOptions<TWebApi>, IApizrManagerOptionsBase, IApizrCommonOptionsBase, IApizrProperOptionsBase, IApizrSharedRegistrationOptionsBase, IApizrGlobalSharedRegistrationOptionsBase, IApizrGlobalSharedOptionsBase'
    typeParameters:
    - id: TWebApi
      description: ''
    content.vb: >-
      Public Class ApizrManagerOptions(Of TWebApi)
          Implements IApizrManagerOptions(Of TWebApi), IApizrManagerOptionsBase, IApizrCommonOptionsBase, IApizrProperOptionsBase, IApizrSharedRegistrationOptionsBase, IApizrGlobalSharedRegistrationOptionsBase, IApizrGlobalSharedOptionsBase
  inheritance:
  - System.Object
  derivedClasses:
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions`1
  implements:
  - Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}}
  - Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - Apizr.Configuring.Common.IApizrCommonOptionsBase
  - Apizr.Configuring.Proper.IApizrProperOptionsBase
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ApizrManagerOptions(Of TWebApi)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi)
  name.vb: ApizrManagerOptions(Of TWebApi)
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Options
  commentId: F:Apizr.Configuring.Manager.ApizrManagerOptions`1.Options
  id: Options
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ApizrManagerOptions<TWebApi>.Options
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Options
  type: Field
  source:
    id: Options
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 138
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe options\n"
  example: []
  syntax:
    content: protected readonly IApizrManagerOptionsBase Options
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    content.vb: Protected ReadOnly Options As IApizrManagerOptionsBase
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Options
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Options
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  id: '#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)'
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: ApizrManagerOptions(IApizrManagerOptionsBase)
  nameWithType: ApizrManagerOptions<TWebApi>.ApizrManagerOptions(IApizrManagerOptionsBase)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ApizrManagerOptions(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 144
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe options constructor\n"
  example: []
  syntax:
    content: public ApizrManagerOptions(IApizrManagerOptionsBase apizrOptions)
    parameters:
    - id: apizrOptions
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
      description: The base options
    content.vb: Public Sub New(apizrOptions As IApizrManagerOptionsBase)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor*
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ApizrManagerOptions(IApizrManagerOptionsBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ApizrManagerOptions(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  id: WebApiType
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: WebApiType
  nameWithType: ApizrManagerOptions<TWebApi>.WebApiType
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.WebApiType
  type: Property
  source:
    id: WebApiType
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 150
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nWeb api interface type\n"
  example: []
  syntax:
    content: public Type WebApiType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property WebApiType As Type
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).WebApiType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).WebApiType
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  id: BaseUri
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: ApizrManagerOptions<TWebApi>.BaseUri
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseUri
  type: Property
  source:
    id: BaseUri
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 153
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nBase address\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property BaseUri As Uri
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseUri
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  id: BaseAddress
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: BaseAddress
  nameWithType: ApizrManagerOptions<TWebApi>.BaseAddress
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseAddress
  type: Property
  source:
    id: BaseAddress
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 156
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nBase address\n"
  example: []
  syntax:
    content: public string BaseAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BaseAddress As String
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseAddress
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  id: BasePath
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: BasePath
  nameWithType: ApizrManagerOptions<TWebApi>.BasePath
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BasePath
  type: Property
  source:
    id: BasePath
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 159
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nBase path\n"
  example: []
  syntax:
    content: public string BasePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BasePath As String
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BasePath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BasePath
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.ContextFactory
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.ContextFactory
  id: ContextFactory
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: ContextFactory
  nameWithType: ApizrManagerOptions<TWebApi>.ContextFactory
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ContextFactory
  type: Property
  source:
    id: ContextFactory
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 162
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe Polly Context to pass through it all\n"
  example: []
  syntax:
    content: public Func<Context> ContextFactory { get; }
    parameters: []
    return:
      type: System.Func{Polly.Context}
    content.vb: Public ReadOnly Property ContextFactory As Func(Of Context)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.ContextFactory*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ContextFactory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ContextFactory
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  id: HttpTracerMode
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: HttpTracerMode
  nameWithType: ApizrManagerOptions<TWebApi>.HttpTracerMode
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HttpTracerMode
  type: Property
  source:
    id: HttpTracerMode
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 165
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nHttp traffic tracing mode\n"
  example: []
  syntax:
    content: public HttpTracerMode HttpTracerMode { get; }
    parameters: []
    return:
      type: Apizr.Logging.HttpTracerMode
    content.vb: Public ReadOnly Property HttpTracerMode As HttpTracerMode
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HttpTracerMode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HttpTracerMode
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  id: TrafficVerbosity
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: TrafficVerbosity
  nameWithType: ApizrManagerOptions<TWebApi>.TrafficVerbosity
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.TrafficVerbosity
  type: Property
  source:
    id: TrafficVerbosity
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 168
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nHttp traffic tracing verbosity\n"
  example: []
  syntax:
    content: public HttpMessageParts TrafficVerbosity { get; }
    parameters: []
    return:
      type: Apizr.Logging.HttpMessageParts
    content.vb: Public ReadOnly Property TrafficVerbosity As HttpMessageParts
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).TrafficVerbosity
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).TrafficVerbosity
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  id: LogLevels
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: LogLevels
  nameWithType: ApizrManagerOptions<TWebApi>.LogLevels
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LogLevels
  type: Property
  source:
    id: LogLevels
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 171
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nLog levels while writing\n"
  example: []
  syntax:
    content: public LogLevel[] LogLevels { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.LogLevel[]
    content.vb: Public ReadOnly Property LogLevels As LogLevel()
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LogLevels
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LogLevels
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  id: OnException
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: OnException
  nameWithType: ApizrManagerOptions<TWebApi>.OnException
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.OnException
  type: Property
  source:
    id: OnException
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 174
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nCatching potential exception if defined\n"
  example: []
  syntax:
    content: public Action<ApizrException> OnException { get; }
    parameters: []
    return:
      type: System.Action{Apizr.ApizrException}
    content.vb: Public ReadOnly Property OnException As Action(Of ApizrException)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).OnException
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).OnException
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  id: LetThrowOnExceptionWithEmptyCache
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  type: Property
  source:
    id: LetThrowOnExceptionWithEmptyCache
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 177
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nLet throw potential exception if there&apos;s no cached data to return\n"
  example: []
  syntax:
    content: public bool LetThrowOnExceptionWithEmptyCache { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LetThrowOnExceptionWithEmptyCache As Boolean
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  id: HandlersParameters
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: HandlersParameters
  nameWithType: ApizrManagerOptions<TWebApi>.HandlersParameters
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HandlersParameters
  type: Property
  source:
    id: HandlersParameters
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 180
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nParameters passed through delegating handlers\n"
  example: []
  syntax:
    content: public IDictionary<string, object> HandlersParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property HandlersParameters As IDictionary(Of String, Object)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HandlersParameters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HandlersParameters
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  id: Logger
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ApizrManagerOptions<TWebApi>.Logger
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Logger
  type: Property
  source:
    id: Logger
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 183
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe logger instance\n"
  example: []
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Logger
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Logger
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.PolicyRegistryKeys
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.PolicyRegistryKeys
  id: PolicyRegistryKeys
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: PolicyRegistryKeys
  nameWithType: ApizrManagerOptions<TWebApi>.PolicyRegistryKeys
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.PolicyRegistryKeys
  type: Property
  source:
    id: PolicyRegistryKeys
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 186
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nPolicy keys from the registry\n"
  example: []
  syntax:
    content: public string[] PolicyRegistryKeys { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property PolicyRegistryKeys As String()
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.PolicyRegistryKeys*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptionsBase.PolicyRegistryKeys
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).PolicyRegistryKeys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).PolicyRegistryKeys
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  id: RefitSettings
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: RefitSettings
  nameWithType: ApizrManagerOptions<TWebApi>.RefitSettings
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.RefitSettings
  type: Property
  source:
    id: RefitSettings
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Manager\ApizrManagerOptions.cs
    startLine: 189
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nRefit settings\n"
  example: []
  syntax:
    content: public RefitSettings RefitSettings { get; }
    parameters: []
    return:
      type: Refit.RefitSettings
    content.vb: Public ReadOnly Property RefitSettings As RefitSettings
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).RefitSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).RefitSettings
references:
- uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptions`1
  name: IApizrManagerOptions<TWebApi>
  nameWithType: IApizrManagerOptions<TWebApi>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>
  nameWithType.vb: IApizrManagerOptions(Of TWebApi)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi)
  name.vb: IApizrManagerOptions(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager
  commentId: N:Apizr.Configuring.Manager
  name: Apizr.Configuring.Manager
  nameWithType: Apizr.Configuring.Manager
  fullName: Apizr.Configuring.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}}
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptions{`0}
  parent: Apizr.Configuring.Manager
  definition: Apizr.Configuring.Manager.IApizrManagerOptions`1
  name: IApizrManagerOptions<TWebApi>
  nameWithType: IApizrManagerOptions<TWebApi>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>
  nameWithType.vb: IApizrManagerOptions(Of TWebApi)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi)
  name.vb: IApizrManagerOptions(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBase
  parent: Apizr.Configuring.Manager
  name: IApizrManagerOptionsBase
  nameWithType: IApizrManagerOptionsBase
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBase
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBase
  parent: Apizr.Configuring.Common
  name: IApizrCommonOptionsBase
  nameWithType: IApizrCommonOptionsBase
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBase
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBase
  parent: Apizr.Configuring.Proper
  name: IApizrProperOptionsBase
  nameWithType: IApizrProperOptionsBase
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrSharedRegistrationOptionsBase
  nameWithType: IApizrSharedRegistrationOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedRegistrationOptionsBase
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedOptionsBase
  nameWithType: IApizrGlobalSharedOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Common
  commentId: N:Apizr.Configuring.Common
  name: Apizr.Configuring.Common
  nameWithType: Apizr.Configuring.Common
  fullName: Apizr.Configuring.Common
- uid: Apizr.Configuring.Proper
  commentId: N:Apizr.Configuring.Proper
  name: Apizr.Configuring.Proper
  nameWithType: Apizr.Configuring.Proper
  fullName: Apizr.Configuring.Proper
- uid: Apizr.Configuring.Shared
  commentId: N:Apizr.Configuring.Shared
  name: Apizr.Configuring.Shared
  nameWithType: Apizr.Configuring.Shared
  fullName: Apizr.Configuring.Shared
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor
  name: ApizrManagerOptions
  nameWithType: ApizrManagerOptions<TWebApi>.ApizrManagerOptions
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ApizrManagerOptions
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ApizrManagerOptions
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ApizrManagerOptions
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  name: WebApiType
  nameWithType: ApizrManagerOptions<TWebApi>.WebApiType
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.WebApiType
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).WebApiType
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).WebApiType
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
  parent: Apizr.Configuring.Proper.IApizrProperOptionsBase
  name: WebApiType
  nameWithType: IApizrProperOptionsBase.WebApiType
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  name: BaseUri
  nameWithType: ApizrManagerOptions<TWebApi>.BaseUri
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseUri
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseUri
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseUri
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BaseUri
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  name: BaseAddress
  nameWithType: ApizrManagerOptions<TWebApi>.BaseAddress
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseAddress
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseAddress
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseAddress
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BaseAddress
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  name: BasePath
  nameWithType: ApizrManagerOptions<TWebApi>.BasePath
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BasePath
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BasePath
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BasePath
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BasePath
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BasePath
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.ContextFactory*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.ContextFactory
  name: ContextFactory
  nameWithType: ApizrManagerOptions<TWebApi>.ContextFactory
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ContextFactory
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ContextFactory
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ContextFactory
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: ContextFactory
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
- uid: System.Func{Polly.Context}
  commentId: T:System.Func{Polly.Context}
  parent: System
  definition: System.Func`1
  name: Func<Context>
  nameWithType: Func<Context>
  fullName: System.Func<Polly.Context>
  nameWithType.vb: Func(Of Context)
  fullName.vb: System.Func(Of Polly.Context)
  name.vb: Func(Of Context)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  name: HttpTracerMode
  nameWithType: ApizrManagerOptions<TWebApi>.HttpTracerMode
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HttpTracerMode
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HttpTracerMode
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HttpTracerMode
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: HttpTracerMode
  nameWithType: IApizrGlobalSharedOptionsBase.HttpTracerMode
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
- uid: Apizr.Logging.HttpTracerMode
  commentId: T:Apizr.Logging.HttpTracerMode
  parent: Apizr.Logging
  name: HttpTracerMode
  nameWithType: HttpTracerMode
  fullName: Apizr.Logging.HttpTracerMode
- uid: Apizr.Logging
  commentId: N:Apizr.Logging
  name: Apizr.Logging
  nameWithType: Apizr.Logging
  fullName: Apizr.Logging
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  name: TrafficVerbosity
  nameWithType: ApizrManagerOptions<TWebApi>.TrafficVerbosity
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.TrafficVerbosity
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).TrafficVerbosity
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).TrafficVerbosity
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: TrafficVerbosity
  nameWithType: IApizrGlobalSharedOptionsBase.TrafficVerbosity
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
- uid: Apizr.Logging.HttpMessageParts
  commentId: T:Apizr.Logging.HttpMessageParts
  parent: Apizr.Logging
  name: HttpMessageParts
  nameWithType: HttpMessageParts
  fullName: Apizr.Logging.HttpMessageParts
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  name: LogLevels
  nameWithType: ApizrManagerOptions<TWebApi>.LogLevels
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LogLevels
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LogLevels
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LogLevels
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: LogLevels
  nameWithType: IApizrGlobalSharedOptionsBase.LogLevels
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
- uid: Microsoft.Extensions.Logging.LogLevel[]
  isExternal: true
  name: LogLevel[]
  nameWithType: LogLevel[]
  fullName: Microsoft.Extensions.Logging.LogLevel[]
  nameWithType.vb: LogLevel()
  fullName.vb: Microsoft.Extensions.Logging.LogLevel()
  name.vb: LogLevel()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  name: OnException
  nameWithType: ApizrManagerOptions<TWebApi>.OnException
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.OnException
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).OnException
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).OnException
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: OnException
  nameWithType: IApizrGlobalSharedOptionsBase.OnException
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
- uid: System.Action{Apizr.ApizrException}
  commentId: T:System.Action{Apizr.ApizrException}
  parent: System
  definition: System.Action`1
  name: Action<ApizrException>
  nameWithType: Action<ApizrException>
  fullName: System.Action<Apizr.ApizrException>
  nameWithType.vb: Action(Of ApizrException)
  fullName.vb: System.Action(Of Apizr.ApizrException)
  name.vb: Action(Of ApizrException)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  name: HandlersParameters
  nameWithType: ApizrManagerOptions<TWebApi>.HandlersParameters
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HandlersParameters
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HandlersParameters
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HandlersParameters
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: HandlersParameters
  nameWithType: IApizrGlobalSharedOptionsBase.HandlersParameters
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  name: Logger
  nameWithType: ApizrManagerOptions<TWebApi>.Logger
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Logger
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Logger
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Logger
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
  parent: Apizr.Configuring.Proper.IApizrProperOptionsBase
  name: Logger
  nameWithType: IApizrProperOptionsBase.Logger
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.PolicyRegistryKeys*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.PolicyRegistryKeys
  name: PolicyRegistryKeys
  nameWithType: ApizrManagerOptions<TWebApi>.PolicyRegistryKeys
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.PolicyRegistryKeys
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).PolicyRegistryKeys
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).PolicyRegistryKeys
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase.PolicyRegistryKeys
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptionsBase.PolicyRegistryKeys
  parent: Apizr.Configuring.Proper.IApizrProperOptionsBase
  name: PolicyRegistryKeys
  nameWithType: IApizrProperOptionsBase.PolicyRegistryKeys
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase.PolicyRegistryKeys
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  name: RefitSettings
  nameWithType: ApizrManagerOptions<TWebApi>.RefitSettings
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.RefitSettings
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).RefitSettings
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).RefitSettings
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBase
  name: RefitSettings
  nameWithType: IApizrCommonOptionsBase.RefitSettings
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
- uid: Refit.RefitSettings
  commentId: T:Refit.RefitSettings
  parent: Refit
  isExternal: true
  name: RefitSettings
  nameWithType: RefitSettings
  fullName: Refit.RefitSettings
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
