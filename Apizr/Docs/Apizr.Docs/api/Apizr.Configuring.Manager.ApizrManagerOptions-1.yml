### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1
  commentId: T:Apizr.Configuring.Manager.ApizrManagerOptions`1
  id: ApizrManagerOptions`1
  parent: Apizr.Configuring.Manager
  children:
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.Headers
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.OperationTimeout
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.Options
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.PrimaryHandlerFactory
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.RequestTimeout
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.ResiliencePipelineRegistryKeys
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  - Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  langs:
  - csharp
  - vb
  name: ApizrManagerOptions<TWebApi>
  nameWithType: ApizrManagerOptions<TWebApi>
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrManagerOptions
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 161
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nOptions available for static registrations\n"
  example: []
  syntax:
    content: 'public class ApizrManagerOptions<TWebApi> : IApizrManagerOptions<TWebApi>, IApizrManagerOptionsBase, IApizrCommonOptionsBase, IApizrProperOptionsBase, IApizrSharedRegistrationOptionsBase, IApizrGlobalSharedRegistrationOptionsBase, IApizrGlobalSharedOptionsBase'
    typeParameters:
    - id: TWebApi
      description: ''
    content.vb: >-
      Public Class ApizrManagerOptions(Of TWebApi)
          Implements IApizrManagerOptions(Of TWebApi), IApizrManagerOptionsBase, IApizrCommonOptionsBase, IApizrProperOptionsBase, IApizrSharedRegistrationOptionsBase, IApizrGlobalSharedRegistrationOptionsBase, IApizrGlobalSharedOptionsBase
  inheritance:
  - System.Object
  derivedClasses:
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions`1
  implements:
  - Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}}
  - Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - Apizr.Configuring.Common.IApizrCommonOptionsBase
  - Apizr.Configuring.Proper.IApizrProperOptionsBase
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ApizrManagerOptions(Of TWebApi)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi)
  name.vb: ApizrManagerOptions(Of TWebApi)
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Options
  commentId: F:Apizr.Configuring.Manager.ApizrManagerOptions`1.Options
  id: Options
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ApizrManagerOptions<TWebApi>.Options
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Options
  type: Field
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: Options
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 166
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe options\n"
  example: []
  syntax:
    content: protected readonly IApizrManagerOptionsBase Options
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    content.vb: Protected ReadOnly Options As IApizrManagerOptionsBase
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Options
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Options
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  id: '#ctor(Apizr.Configuring.Manager.IApizrManagerOptionsBase)'
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: ApizrManagerOptions(IApizrManagerOptionsBase)
  nameWithType: ApizrManagerOptions<TWebApi>.ApizrManagerOptions(IApizrManagerOptionsBase)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ApizrManagerOptions(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 172
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe options constructor\n"
  example: []
  syntax:
    content: public ApizrManagerOptions(IApizrManagerOptionsBase apizrOptions)
    parameters:
    - id: apizrOptions
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
      description: The base options
    content.vb: Public Sub New(apizrOptions As IApizrManagerOptionsBase)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor*
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ApizrManagerOptions(IApizrManagerOptionsBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ApizrManagerOptions(Apizr.Configuring.Manager.IApizrManagerOptionsBase)
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  id: WebApiType
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: WebApiType
  nameWithType: ApizrManagerOptions<TWebApi>.WebApiType
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.WebApiType
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: WebApiType
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 178
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nWeb api interface type\n"
  example: []
  syntax:
    content: public Type WebApiType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property WebApiType As Type
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).WebApiType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).WebApiType
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  id: BaseUri
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: ApizrManagerOptions<TWebApi>.BaseUri
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseUri
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: BaseUri
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 181
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nBase address\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property BaseUri As Uri
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseUri
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  id: BaseAddress
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: BaseAddress
  nameWithType: ApizrManagerOptions<TWebApi>.BaseAddress
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseAddress
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: BaseAddress
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 184
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nBase address\n"
  example: []
  syntax:
    content: public string BaseAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BaseAddress As String
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseAddress
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  id: BasePath
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: BasePath
  nameWithType: ApizrManagerOptions<TWebApi>.BasePath
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BasePath
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: BasePath
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 187
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nBase path\n"
  example: []
  syntax:
    content: public string BasePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BasePath As String
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BasePath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BasePath
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.PrimaryHandlerFactory
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.PrimaryHandlerFactory
  id: PrimaryHandlerFactory
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: PrimaryHandlerFactory
  nameWithType: ApizrManagerOptions<TWebApi>.PrimaryHandlerFactory
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.PrimaryHandlerFactory
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: PrimaryHandlerFactory
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 190
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe primary Http message handler factory (set internally)\n"
  example: []
  syntax:
    content: public Func<DelegatingHandler, ILogger, IApizrManagerOptionsBase, HttpMessageHandler> PrimaryHandlerFactory { get; }
    parameters: []
    return:
      type: System.Func{System.Net.Http.DelegatingHandler,Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,System.Net.Http.HttpMessageHandler}
    content.vb: Public ReadOnly Property PrimaryHandlerFactory As Func(Of DelegatingHandler, ILogger, IApizrManagerOptionsBase, HttpMessageHandler)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.PrimaryHandlerFactory*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).PrimaryHandlerFactory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).PrimaryHandlerFactory
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  id: HttpTracerMode
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: HttpTracerMode
  nameWithType: ApizrManagerOptions<TWebApi>.HttpTracerMode
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HttpTracerMode
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: HttpTracerMode
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 194
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nHttp traffic tracing mode\n"
  example: []
  syntax:
    content: public HttpTracerMode HttpTracerMode { get; }
    parameters: []
    return:
      type: Apizr.Logging.HttpTracerMode
    content.vb: Public ReadOnly Property HttpTracerMode As HttpTracerMode
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HttpTracerMode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HttpTracerMode
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  id: TrafficVerbosity
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: TrafficVerbosity
  nameWithType: ApizrManagerOptions<TWebApi>.TrafficVerbosity
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.TrafficVerbosity
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: TrafficVerbosity
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 197
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nHttp traffic tracing verbosity\n"
  example: []
  syntax:
    content: public HttpMessageParts TrafficVerbosity { get; }
    parameters: []
    return:
      type: Apizr.Logging.HttpMessageParts
    content.vb: Public ReadOnly Property TrafficVerbosity As HttpMessageParts
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).TrafficVerbosity
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).TrafficVerbosity
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  id: LogLevels
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: LogLevels
  nameWithType: ApizrManagerOptions<TWebApi>.LogLevels
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LogLevels
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: LogLevels
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 200
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nLog levels while writing\n"
  example: []
  syntax:
    content: public LogLevel[] LogLevels { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.LogLevel[]
    content.vb: Public ReadOnly Property LogLevels As LogLevel()
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LogLevels
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LogLevels
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  id: OnException
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: OnException
  nameWithType: ApizrManagerOptions<TWebApi>.OnException
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.OnException
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: OnException
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 203
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nCatching potential exception if defined\n"
  example: []
  syntax:
    content: public Action<ApizrException> OnException { get; }
    parameters: []
    return:
      type: System.Action{Apizr.ApizrException}
    content.vb: Public ReadOnly Property OnException As Action(Of ApizrException)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).OnException
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).OnException
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  id: LetThrowOnExceptionWithEmptyCache
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: LetThrowOnExceptionWithEmptyCache
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 206
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nLet throw potential exception if there&apos;s no cached data to return\n"
  example: []
  syntax:
    content: public bool LetThrowOnExceptionWithEmptyCache { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LetThrowOnExceptionWithEmptyCache As Boolean
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  id: HandlersParameters
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: HandlersParameters
  nameWithType: ApizrManagerOptions<TWebApi>.HandlersParameters
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HandlersParameters
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: HandlersParameters
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 209
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nParameters passed through delegating handlers\n"
  example: []
  syntax:
    content: public IDictionary<string, object> HandlersParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property HandlersParameters As IDictionary(Of String, Object)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HandlersParameters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HandlersParameters
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Headers
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.Headers
  id: Headers
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: ApizrManagerOptions<TWebApi>.Headers
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Headers
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: Headers
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 212
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nHeaders to add to the request\n"
  example: []
  syntax:
    content: public IList<string> Headers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property Headers As IList(Of String)
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.Headers*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Headers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Headers
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.OperationTimeout
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.OperationTimeout
  id: OperationTimeout
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: OperationTimeout
  nameWithType: ApizrManagerOptions<TWebApi>.OperationTimeout
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.OperationTimeout
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: OperationTimeout
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 215
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe operation timeout (overall request tries)\n"
  example: []
  syntax:
    content: public TimeSpan? OperationTimeout { get; }
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Public ReadOnly Property OperationTimeout As TimeSpan?
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.OperationTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OperationTimeout
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).OperationTimeout
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).OperationTimeout
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.RequestTimeout
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.RequestTimeout
  id: RequestTimeout
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: RequestTimeout
  nameWithType: ApizrManagerOptions<TWebApi>.RequestTimeout
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.RequestTimeout
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: RequestTimeout
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 218
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe request timeout (each request try)\n"
  example: []
  syntax:
    content: public TimeSpan? RequestTimeout { get; }
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Public ReadOnly Property RequestTimeout As TimeSpan?
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.RequestTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.RequestTimeout
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).RequestTimeout
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).RequestTimeout
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  id: Logger
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ApizrManagerOptions<TWebApi>.Logger
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Logger
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: Logger
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 231
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe logger instance\n"
  example: []
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Logger
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Logger
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.ResiliencePipelineRegistryKeys
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.ResiliencePipelineRegistryKeys
  id: ResiliencePipelineRegistryKeys
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: ResiliencePipelineRegistryKeys
  nameWithType: ApizrManagerOptions<TWebApi>.ResiliencePipelineRegistryKeys
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ResiliencePipelineRegistryKeys
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ResiliencePipelineRegistryKeys
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 234
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nResilience pipeline keys from the registry\n"
  example: []
  syntax:
    content: public string[] ResiliencePipelineRegistryKeys { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property ResiliencePipelineRegistryKeys As String()
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.ResiliencePipelineRegistryKeys*
  implements:
  - Apizr.Configuring.Proper.IApizrProperOptionsBase.ResiliencePipelineRegistryKeys
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ResiliencePipelineRegistryKeys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ResiliencePipelineRegistryKeys
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  commentId: P:Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  id: RefitSettings
  parent: Apizr.Configuring.Manager.ApizrManagerOptions`1
  langs:
  - csharp
  - vb
  name: RefitSettings
  nameWithType: ApizrManagerOptions<TWebApi>.RefitSettings
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.RefitSettings
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: RefitSettings
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptions.cs
    startLine: 237
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nRefit settings\n"
  example: []
  syntax:
    content: public RefitSettings RefitSettings { get; }
    parameters: []
    return:
      type: Refit.RefitSettings
    content.vb: Public ReadOnly Property RefitSettings As RefitSettings
  overload: Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).RefitSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).RefitSettings
references:
- uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptions`1
  name: IApizrManagerOptions<TWebApi>
  nameWithType: IApizrManagerOptions<TWebApi>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>
  nameWithType.vb: IApizrManagerOptions(Of TWebApi)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi)
  name.vb: IApizrManagerOptions(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager
  commentId: N:Apizr.Configuring.Manager
  name: Apizr.Configuring.Manager
  nameWithType: Apizr.Configuring.Manager
  fullName: Apizr.Configuring.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Configuring.Manager.IApizrManagerOptions{{TWebApi}}
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptions{`0}
  parent: Apizr.Configuring.Manager
  definition: Apizr.Configuring.Manager.IApizrManagerOptions`1
  name: IApizrManagerOptions<TWebApi>
  nameWithType: IApizrManagerOptions<TWebApi>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptions<TWebApi>
  nameWithType.vb: IApizrManagerOptions(Of TWebApi)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptions(Of TWebApi)
  name.vb: IApizrManagerOptions(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions`1
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBase
  parent: Apizr.Configuring.Manager
  name: IApizrManagerOptionsBase
  nameWithType: IApizrManagerOptionsBase
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBase
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBase
  parent: Apizr.Configuring.Common
  name: IApizrCommonOptionsBase
  nameWithType: IApizrCommonOptionsBase
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBase
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBase
  parent: Apizr.Configuring.Proper
  name: IApizrProperOptionsBase
  nameWithType: IApizrProperOptionsBase
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrSharedRegistrationOptionsBase
  nameWithType: IApizrSharedRegistrationOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedRegistrationOptionsBase
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedOptionsBase
  nameWithType: IApizrGlobalSharedOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Common
  commentId: N:Apizr.Configuring.Common
  name: Apizr.Configuring.Common
  nameWithType: Apizr.Configuring.Common
  fullName: Apizr.Configuring.Common
- uid: Apizr.Configuring.Proper
  commentId: N:Apizr.Configuring.Proper
  name: Apizr.Configuring.Proper
  nameWithType: Apizr.Configuring.Proper
  fullName: Apizr.Configuring.Proper
- uid: Apizr.Configuring.Shared
  commentId: N:Apizr.Configuring.Shared
  name: Apizr.Configuring.Shared
  nameWithType: Apizr.Configuring.Shared
  fullName: Apizr.Configuring.Shared
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.#ctor
  name: ApizrManagerOptions
  nameWithType: ApizrManagerOptions<TWebApi>.ApizrManagerOptions
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ApizrManagerOptions
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ApizrManagerOptions
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ApizrManagerOptions
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.WebApiType
  name: WebApiType
  nameWithType: ApizrManagerOptions<TWebApi>.WebApiType
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.WebApiType
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).WebApiType
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).WebApiType
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
  parent: Apizr.Configuring.Proper.IApizrProperOptionsBase
  name: WebApiType
  nameWithType: IApizrProperOptionsBase.WebApiType
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase.WebApiType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseUri
  name: BaseUri
  nameWithType: ApizrManagerOptions<TWebApi>.BaseUri
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseUri
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseUri
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseUri
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BaseUri
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.BaseAddress
  name: BaseAddress
  nameWithType: ApizrManagerOptions<TWebApi>.BaseAddress
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BaseAddress
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BaseAddress
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BaseAddress
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BaseAddress
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.BasePath
  name: BasePath
  nameWithType: ApizrManagerOptions<TWebApi>.BasePath
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.BasePath
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).BasePath
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).BasePath
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BasePath
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BasePath
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.PrimaryHandlerFactory*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.PrimaryHandlerFactory
  name: PrimaryHandlerFactory
  nameWithType: ApizrManagerOptions<TWebApi>.PrimaryHandlerFactory
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.PrimaryHandlerFactory
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).PrimaryHandlerFactory
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).PrimaryHandlerFactory
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: PrimaryHandlerFactory
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
- uid: System.Func{System.Net.Http.DelegatingHandler,Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,System.Net.Http.HttpMessageHandler}
  commentId: T:System.Func{System.Net.Http.DelegatingHandler,Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,System.Net.Http.HttpMessageHandler}
  parent: System
  definition: System.Func`4
  name: Func<DelegatingHandler, ILogger, IApizrManagerOptionsBase, HttpMessageHandler>
  nameWithType: Func<DelegatingHandler, ILogger, IApizrManagerOptionsBase, HttpMessageHandler>
  fullName: System.Func<System.Net.Http.DelegatingHandler, Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, System.Net.Http.HttpMessageHandler>
  nameWithType.vb: Func(Of DelegatingHandler, ILogger, IApizrManagerOptionsBase, HttpMessageHandler)
  fullName.vb: System.Func(Of System.Net.Http.DelegatingHandler, Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, System.Net.Http.HttpMessageHandler)
  name.vb: Func(Of DelegatingHandler, ILogger, IApizrManagerOptionsBase, HttpMessageHandler)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.DelegatingHandler
    name: DelegatingHandler
    nameWithType: DelegatingHandler
    fullName: System.Net.Http.DelegatingHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.HttpTracerMode
  name: HttpTracerMode
  nameWithType: ApizrManagerOptions<TWebApi>.HttpTracerMode
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HttpTracerMode
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HttpTracerMode
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HttpTracerMode
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: HttpTracerMode
  nameWithType: IApizrGlobalSharedOptionsBase.HttpTracerMode
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
- uid: Apizr.Logging.HttpTracerMode
  commentId: T:Apizr.Logging.HttpTracerMode
  parent: Apizr.Logging
  name: HttpTracerMode
  nameWithType: HttpTracerMode
  fullName: Apizr.Logging.HttpTracerMode
- uid: Apizr.Logging
  commentId: N:Apizr.Logging
  name: Apizr.Logging
  nameWithType: Apizr.Logging
  fullName: Apizr.Logging
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.TrafficVerbosity
  name: TrafficVerbosity
  nameWithType: ApizrManagerOptions<TWebApi>.TrafficVerbosity
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.TrafficVerbosity
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).TrafficVerbosity
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).TrafficVerbosity
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: TrafficVerbosity
  nameWithType: IApizrGlobalSharedOptionsBase.TrafficVerbosity
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
- uid: Apizr.Logging.HttpMessageParts
  commentId: T:Apizr.Logging.HttpMessageParts
  parent: Apizr.Logging
  name: HttpMessageParts
  nameWithType: HttpMessageParts
  fullName: Apizr.Logging.HttpMessageParts
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.LogLevels
  name: LogLevels
  nameWithType: ApizrManagerOptions<TWebApi>.LogLevels
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LogLevels
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LogLevels
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LogLevels
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: LogLevels
  nameWithType: IApizrGlobalSharedOptionsBase.LogLevels
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
- uid: Microsoft.Extensions.Logging.LogLevel[]
  isExternal: true
  name: LogLevel[]
  nameWithType: LogLevel[]
  fullName: Microsoft.Extensions.Logging.LogLevel[]
  nameWithType.vb: LogLevel()
  fullName.vb: Microsoft.Extensions.Logging.LogLevel()
  name.vb: LogLevel()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.OnException
  name: OnException
  nameWithType: ApizrManagerOptions<TWebApi>.OnException
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.OnException
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).OnException
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).OnException
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: OnException
  nameWithType: IApizrGlobalSharedOptionsBase.OnException
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
- uid: System.Action{Apizr.ApizrException}
  commentId: T:System.Action{Apizr.ApizrException}
  parent: System
  definition: System.Action`1
  name: Action<ApizrException>
  nameWithType: Action<ApizrException>
  fullName: System.Action<Apizr.ApizrException>
  nameWithType.vb: Action(Of ApizrException)
  fullName.vb: System.Action(Of Apizr.ApizrException)
  name.vb: Action(Of ApizrException)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.LetThrowOnExceptionWithEmptyCache
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.LetThrowOnExceptionWithEmptyCache
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).LetThrowOnExceptionWithEmptyCache
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.HandlersParameters
  name: HandlersParameters
  nameWithType: ApizrManagerOptions<TWebApi>.HandlersParameters
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.HandlersParameters
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).HandlersParameters
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).HandlersParameters
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: HandlersParameters
  nameWithType: IApizrGlobalSharedOptionsBase.HandlersParameters
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Headers*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.Headers
  name: Headers
  nameWithType: ApizrManagerOptions<TWebApi>.Headers
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Headers
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Headers
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Headers
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: Headers
  nameWithType: IApizrGlobalSharedOptionsBase.Headers
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.OperationTimeout*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.OperationTimeout
  name: OperationTimeout
  nameWithType: ApizrManagerOptions<TWebApi>.OperationTimeout
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.OperationTimeout
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).OperationTimeout
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).OperationTimeout
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OperationTimeout
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OperationTimeout
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: OperationTimeout
  nameWithType: IApizrGlobalSharedOptionsBase.OperationTimeout
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OperationTimeout
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.RequestTimeout*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.RequestTimeout
  name: RequestTimeout
  nameWithType: ApizrManagerOptions<TWebApi>.RequestTimeout
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.RequestTimeout
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).RequestTimeout
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).RequestTimeout
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.RequestTimeout
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.RequestTimeout
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: RequestTimeout
  nameWithType: IApizrGlobalSharedOptionsBase.RequestTimeout
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.RequestTimeout
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.Logger
  name: Logger
  nameWithType: ApizrManagerOptions<TWebApi>.Logger
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.Logger
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).Logger
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).Logger
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
  parent: Apizr.Configuring.Proper.IApizrProperOptionsBase
  name: Logger
  nameWithType: IApizrProperOptionsBase.Logger
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.ResiliencePipelineRegistryKeys*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.ResiliencePipelineRegistryKeys
  name: ResiliencePipelineRegistryKeys
  nameWithType: ApizrManagerOptions<TWebApi>.ResiliencePipelineRegistryKeys
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.ResiliencePipelineRegistryKeys
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).ResiliencePipelineRegistryKeys
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).ResiliencePipelineRegistryKeys
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBase.ResiliencePipelineRegistryKeys
  commentId: P:Apizr.Configuring.Proper.IApizrProperOptionsBase.ResiliencePipelineRegistryKeys
  parent: Apizr.Configuring.Proper.IApizrProperOptionsBase
  name: ResiliencePipelineRegistryKeys
  nameWithType: IApizrProperOptionsBase.ResiliencePipelineRegistryKeys
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBase.ResiliencePipelineRegistryKeys
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptions`1.RefitSettings
  name: RefitSettings
  nameWithType: ApizrManagerOptions<TWebApi>.RefitSettings
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions<TWebApi>.RefitSettings
  nameWithType.vb: ApizrManagerOptions(Of TWebApi).RefitSettings
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptions(Of TWebApi).RefitSettings
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBase
  name: RefitSettings
  nameWithType: IApizrCommonOptionsBase.RefitSettings
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
- uid: Refit.RefitSettings
  commentId: T:Refit.RefitSettings
  parent: Refit
  isExternal: true
  name: RefitSettings
  nameWithType: RefitSettings
  fullName: Refit.RefitSettings
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
