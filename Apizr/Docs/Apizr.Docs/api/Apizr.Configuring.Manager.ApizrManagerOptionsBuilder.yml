### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  commentId: T:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  id: ApizrManagerOptionsBuilder
  parent: Apizr.Configuring.Manager
  children:
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(``0)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Options
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func{System.String})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func{System.Uri})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.String)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Uri)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.Func{System.String})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.String)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.Boolean})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter(System.String,System.Object)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.String[])
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.Func{System.TimeSpan})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(System.Func{Refit.RefitSettings})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.Func{System.TimeSpan})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: ApizrManagerOptionsBuilder
  nameWithType: ApizrManagerOptionsBuilder
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrManagerOptionsBuilder
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 23
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nBuilder options available for static registrations\n"
  example: []
  syntax:
    content: 'public class ApizrManagerOptionsBuilder : IApizrManagerOptionsBuilder, IApizrManagerOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrManagerOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrGlobalManagerOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrManagerOptionsBuilderBase, IApizrGlobalManagerOptionsBuilderBase, IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrCommonOptionsBuilderBase, IApizrGlobalCommonOptionsBuilderBase, IApizrProperOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrProperOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrGlobalProperOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrProperOptionsBuilderBase, IApizrGlobalProperOptionsBuilderBase, IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>, IApizrSharedRegistrationOptionsBuilder, IApizrSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedOptionsBuilderBase'
    content.vb: >-
      Public Class ApizrManagerOptionsBuilder
          Implements IApizrManagerOptionsBuilder, IApizrManagerOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrManagerOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrGlobalManagerOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrManagerOptionsBuilderBase, IApizrGlobalManagerOptionsBuilderBase, IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrCommonOptionsBuilderBase, IApizrGlobalCommonOptionsBuilderBase, IApizrProperOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrProperOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrGlobalProperOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrProperOptionsBuilderBase, IApizrGlobalProperOptionsBuilderBase, IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder), IApizrSharedRegistrationOptionsBuilder, IApizrSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedOptionsBuilderBase
  inheritance:
  - System.Object
  implements:
  - Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - Apizr.Configuring.Manager.IApizrManagerOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
  - Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - Apizr.Configuring.Proper.IApizrProperOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
  - Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IMapper)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IConfigurationProvider)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
  - Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(MapsterMapper.IMapper)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Options
  commentId: F:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Options
  id: Options
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ApizrManagerOptionsBuilder.Options
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Options
  type: Field
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Options
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 28
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nThe options\n"
  example: []
  syntax:
    content: protected readonly ApizrManagerOptions Options
    return:
      type: Apizr.Configuring.Manager.ApizrManagerOptions
    content.vb: Protected ReadOnly Options As ApizrManagerOptions
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.String)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.String)
  id: WithBaseAddress(System.String)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(String)
  nameWithType: ApizrManagerOptionsBuilder.WithBaseAddress(String)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.String)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 39
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithBaseAddress(string baseAddress)
    parameters:
    - id: baseAddress
      type: System.String
      description: Your web api base address
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddress As String) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func{System.String})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func{System.String})
  id: WithBaseAddress(System.Func{System.String})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(Func<String>)
  nameWithType: ApizrManagerOptionsBuilder.WithBaseAddress(Func<String>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func<System.String>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 61
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithBaseAddress(Func<string> baseAddressFactory)
    parameters:
    - id: baseAddressFactory
      type: System.Func{System.String}
      description: Your web api base address factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddressFactory As Func(Of String)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Func{System.String})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithBaseAddress(Func(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func(Of System.String))
  name.vb: WithBaseAddress(Func(Of String))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Uri)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Uri)
  id: WithBaseAddress(System.Uri)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(Uri)
  nameWithType: ApizrManagerOptionsBuilder.WithBaseAddress(Uri)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Uri)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 69
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithBaseAddress(Uri baseAddress)
    parameters:
    - id: baseAddress
      type: System.Uri
      description: Your web api base address
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddress As Uri) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func{System.Uri})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func{System.Uri})
  id: WithBaseAddress(System.Func{System.Uri})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(Func<Uri>)
  nameWithType: ApizrManagerOptionsBuilder.WithBaseAddress(Func<Uri>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func<System.Uri>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 73
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithBaseAddress(Func<Uri> baseAddressFactory)
    parameters:
    - id: baseAddressFactory
      type: System.Func{System.Uri}
      description: Your web api base address factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddressFactory As Func(Of Uri)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Func{System.Uri})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithBaseAddress(Func(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress(System.Func(Of System.Uri))
  name.vb: WithBaseAddress(Func(Of Uri))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.String)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.String)
  id: WithBasePath(System.String)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBasePath(String)
  nameWithType: ApizrManagerOptionsBuilder.WithBasePath(String)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.String)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBasePath
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 81
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine your web api base path (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithBasePath(string basePath)
    parameters:
    - id: basePath
      type: System.String
      description: Your web api base path
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBasePath(basePath As String) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBasePath(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.Func{System.String})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.Func{System.String})
  id: WithBasePath(System.Func{System.String})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBasePath(Func<String>)
  nameWithType: ApizrManagerOptionsBuilder.WithBasePath(Func<String>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.Func<System.String>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBasePath
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 85
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine your web api base path (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithBasePath(Func<string> basePathFactory)
    parameters:
    - id: basePathFactory
      type: System.Func{System.String}
      description: Your web api base path factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBasePath(basePathFactory As Func(Of String)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBasePath(System.Func{System.String})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithBasePath(Func(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath(System.Func(Of System.String))
  name.vb: WithBasePath(Func(Of String))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  id: WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHttpClientHandler(HttpClientHandler)
  nameWithType: ApizrManagerOptionsBuilder.WithHttpClientHandler(HttpClientHandler)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHttpClientHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 93
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a custom HttpClientHandler\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithHttpClientHandler(HttpClientHandler httpClientHandler)
    parameters:
    - id: httpClientHandler
      type: System.Net.Http.HttpClientHandler
      description: An <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> instance
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHttpClientHandler(httpClientHandler As HttpClientHandler) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  id: WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHttpClientHandler(Func<HttpClientHandler>)
  nameWithType: ApizrManagerOptionsBuilder.WithHttpClientHandler(Func<HttpClientHandler>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Func<System.Net.Http.HttpClientHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHttpClientHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 97
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a custom HttpClientHandler\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithHttpClientHandler(Func<HttpClientHandler> httpClientHandlerFactory)
    parameters:
    - id: httpClientHandlerFactory
      type: System.Func{System.Net.Http.HttpClientHandler}
      description: An <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> instance factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHttpClientHandler(httpClientHandlerFactory As Func(Of HttpClientHandler)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithHttpClientHandler(Func(Of HttpClientHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler(System.Func(Of System.Net.Http.HttpClientHandler))
  name.vb: WithHttpClientHandler(Func(Of HttpClientHandler))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  id: ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: ConfigureHttpClient(Action<HttpClient>, ApizrDuplicateStrategy)
  nameWithType: ApizrManagerOptionsBuilder.ConfigureHttpClient(Action<HttpClient>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient(System.Action<System.Net.Http.HttpClient>, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ConfigureHttpClient
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 105
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nConfigure HttpClient\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder ConfigureHttpClient(Action<HttpClient> configureHttpClient, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Merge)
    parameters:
    - id: configureHttpClient
      type: System.Action{System.Net.Http.HttpClient}
      description: The configuration builder
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another one already (default: Merge)'
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function ConfigureHttpClient(configureHttpClient As Action(Of HttpClient), strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Merge) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrManagerOptionsBuilder.ConfigureHttpClient(Action(Of HttpClient), ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient(System.Action(Of System.Net.Http.HttpClient), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: ConfigureHttpClient(Action(Of HttpClient), ApizrDuplicateStrategy)
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  id: WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHttpClient(Func<HttpMessageHandler, Uri, HttpClient>)
  nameWithType: ApizrManagerOptionsBuilder.WithHttpClient(Func<HttpMessageHandler, Uri, HttpClient>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient(System.Func<System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHttpClient
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 135
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a custom HttpClient\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithHttpClient(Func<HttpMessageHandler, Uri, HttpClient> httpClientFactory)
    parameters:
    - id: httpClientFactory
      type: System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient}
      description: An <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref> instance factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHttpClient(httpClientFactory As Func(Of HttpMessageHandler, Uri, HttpClient)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithHttpClient(Func(Of HttpMessageHandler, Uri, HttpClient))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient(System.Func(Of System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient))
  name.vb: WithHttpClient(Func(Of HttpMessageHandler, Uri, HttpClient))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  id: WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TAuthenticationHandler>(Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler<TAuthenticationHandler>(Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler<TAuthenticationHandler>(System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 143
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide your own <xref href=\"Apizr.Authenticating.AuthenticationHandlerBase\" data-throw-if-not-resolved=\"false\"></xref> implementation factory\n"
  example: []
  syntax:
    content: >-
      public IApizrManagerOptionsBuilder WithAuthenticationHandler<TAuthenticationHandler>(Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler> authenticationHandlerFactory)
          where TAuthenticationHandler : AuthenticationHandlerBase
    parameters:
    - id: authenticationHandlerFactory
      type: System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}}
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TAuthenticationHandler</code> instance factory
    typeParameters:
    - id: TAuthenticationHandler
      description: Your <xref href="Apizr.Authenticating.AuthenticationHandlerBase" data-throw-if-not-resolved="false"></xref> implementation
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TAuthenticationHandler As AuthenticationHandlerBase)(authenticationHandlerFactory As Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TAuthenticationHandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler))
  name.vb: WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  id: WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 149
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a method to refresh the authorization token when needed\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithAuthenticationHandler(Func<HttpRequestMessage, Task<string>> refreshTokenFactory)
    parameters:
    - id: refreshTokenFactory
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
      description: Refresh token method called when expired or empty
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(refreshTokenFactory As Func(Of HttpRequestMessage, Task(Of String))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  id: WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 155
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide your own settings management service with its token source\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithAuthenticationHandler<TSettingsService>(TSettingsService settingsService, Expression<Func<TSettingsService, string>> tokenProperty)
    parameters:
    - id: settingsService
      type: '{TSettingsService}'
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TSettingsService</code> instance
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property to get from
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (getting token)
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService)(settingsService As TSettingsService, tokenProperty As Expression(Of Func(Of TSettingsService, String))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1({TSettingsService},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  id: WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 161
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide your own settings management service and a method to refresh the token\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithAuthenticationHandler<TSettingsService>(TSettingsService settingsService, Expression<Func<TSettingsService, string>> tokenProperty, Func<HttpRequestMessage, Task<string>> refreshTokenFactory)
    parameters:
    - id: settingsService
      type: '{TSettingsService}'
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TSettingsService</code> instance
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property used for saving
    - id: refreshTokenFactory
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
      description: The method factory called to refresh the token
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (saving/getting token)
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService)(settingsService As TSettingsService, tokenProperty As Expression(Of Func(Of TSettingsService, String)), refreshTokenFactory As Func(Of HttpRequestMessage, Task(Of String))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1({TSettingsService},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  id: WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 167
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide your own settings management service with its token property\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithAuthenticationHandler<TSettingsService>(Func<TSettingsService> settingsServiceFactory, Expression<Func<TSettingsService, string>> tokenProperty)
    parameters:
    - id: settingsServiceFactory
      type: System.Func{{TSettingsService}}
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TSettingsService</code> instance factory
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property to get from
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (getting token)
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService)(settingsServiceFactory As Func(Of TSettingsService), tokenProperty As Expression(Of Func(Of TSettingsService, String))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{{TSettingsService}},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  id: WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 173
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide your own settings management service and a method to refresh the token\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithAuthenticationHandler<TSettingsService>(Func<TSettingsService> settingsServiceFactory, Expression<Func<TSettingsService, string>> tokenProperty, Func<HttpRequestMessage, Task<string>> refreshTokenFactory)
    parameters:
    - id: settingsServiceFactory
      type: System.Func{{TSettingsService}}
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TSettingsService</code> instance factory
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property used for saving
    - id: refreshTokenFactory
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
      description: The method factory called to refresh the token
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (saving/getting token)
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService)(settingsServiceFactory As Func(Of TSettingsService), tokenProperty As Expression(Of Func(Of TSettingsService, String)), refreshTokenFactory As Func(Of HttpRequestMessage, Task(Of String))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{{TSettingsService}},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  id: WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, Expression<Func<TSettingsService, String>>, TTokenService, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, Expression<Func<TSettingsService, String>>, TTokenService, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, TTokenService, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 181
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide your own settings management and token management services\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService settingsService, Expression<Func<TSettingsService, string>> tokenProperty, TTokenService tokenService, Expression<Func<TTokenService, HttpRequestMessage, Task<string>>> refreshTokenMethod)
    parameters:
    - id: settingsService
      type: '{TSettingsService}'
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TSettingsService</code> instance
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property used for saving
    - id: tokenService
      type: '{TTokenService}'
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TTokenService</code> instance
    - id: refreshTokenMethod
      type: System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}}
      description: The method called to refresh the token
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (saving/getting token)
    - id: TTokenService
      description: Your token management service (refreshing token)
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService, TTokenService)(settingsService As TSettingsService, tokenProperty As Expression(Of Func(Of TSettingsService, String)), tokenService As TTokenService, refreshTokenMethod As Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String)))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``2({TSettingsService},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},{TTokenService},System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), TTokenService, Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), TTokenService, System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), TTokenService, Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  id: WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<TTokenService>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService, TTokenService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<TTokenService>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService, TTokenService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<TTokenService>, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 188
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide your own settings management and token management services\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithAuthenticationHandler<TSettingsService, TTokenService>(Func<TSettingsService> settingsServiceFactory, Expression<Func<TSettingsService, string>> tokenProperty, Func<TTokenService> tokenServiceFactory, Expression<Func<TTokenService, HttpRequestMessage, Task<string>>> refreshTokenMethod)
    parameters:
    - id: settingsServiceFactory
      type: System.Func{{TSettingsService}}
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TSettingsService</code> instance factory
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property used for saving
    - id: tokenServiceFactory
      type: System.Func{{TTokenService}}
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TTokenService</code> instance factory
    - id: refreshTokenMethod
      type: System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}}
      description: The method called to refresh the token
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (saving/getting token)
    - id: TTokenService
      description: Your token management service (refreshing token)
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService, TTokenService)(settingsServiceFactory As Func(Of TSettingsService), tokenProperty As Expression(Of Func(Of TSettingsService, String)), tokenServiceFactory As Func(Of TTokenService), refreshTokenMethod As Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String)))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``2(System.Func{{TSettingsService}},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{{TTokenService}},System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService, TTokenService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of TTokenService), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService, TTokenService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of TTokenService), System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of TTokenService), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(``0)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(``0)
  id: AddDelegatingHandler``1(``0)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: AddDelegatingHandler<THandler>(THandler)
  nameWithType: ApizrManagerOptionsBuilder.AddDelegatingHandler<THandler>(THandler)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler<THandler>(THandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDelegatingHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 199
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nAdd a custom delegating handler\n"
  example: []
  syntax:
    content: >-
      public IApizrManagerOptionsBuilder AddDelegatingHandler<THandler>(THandler delegatingHandler)
          where THandler : DelegatingHandler
    parameters:
    - id: delegatingHandler
      type: '{THandler}'
      description: A delegating handler
    typeParameters:
    - id: THandler
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function AddDelegatingHandler(Of THandler As DelegatingHandler)(delegatingHandler As THandler) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1({THandler})
  nameWithType.vb: ApizrManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(THandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(THandler)
  name.vb: AddDelegatingHandler(Of THandler)(THandler)
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  id: AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: AddDelegatingHandler<THandler>(Func<ILogger, THandler>)
  nameWithType: ApizrManagerOptionsBuilder.AddDelegatingHandler<THandler>(Func<ILogger, THandler>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler<THandler>(System.Func<Microsoft.Extensions.Logging.ILogger, THandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDelegatingHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 203
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nAdd a custom delegating handler\n"
  example: []
  syntax:
    content: >-
      public IApizrManagerOptionsBuilder AddDelegatingHandler<THandler>(Func<ILogger, THandler> delegatingHandlerFactory)
          where THandler : DelegatingHandler
    parameters:
    - id: delegatingHandlerFactory
      type: System.Func{Microsoft.Extensions.Logging.ILogger,{THandler}}
      description: A delegating handler factory
    typeParameters:
    - id: THandler
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function AddDelegatingHandler(Of THandler As DelegatingHandler)(delegatingHandlerFactory As Func(Of ILogger, THandler)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,{THandler}})
  nameWithType.vb: ApizrManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(Func(Of ILogger, THandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of ILogger, THandler))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  id: AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: AddDelegatingHandler<THandler>(Func<ILogger, IApizrManagerOptionsBase, THandler>)
  nameWithType: ApizrManagerOptionsBuilder.AddDelegatingHandler<THandler>(Func<ILogger, IApizrManagerOptionsBase, THandler>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler<THandler>(System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDelegatingHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 207
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nAdd a custom delegating handler\n"
  example: []
  syntax:
    content: >-
      public IApizrManagerOptionsBuilder AddDelegatingHandler<THandler>(Func<ILogger, IApizrManagerOptionsBase, THandler> delegatingHandlerFactory)
          where THandler : DelegatingHandler
    parameters:
    - id: delegatingHandlerFactory
      type: System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}}
      description: A delegating handler factory
    typeParameters:
    - id: THandler
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function AddDelegatingHandler(Of THandler As DelegatingHandler)(delegatingHandlerFactory As Func(Of ILogger, IApizrManagerOptionsBase, THandler)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}})
  nameWithType.vb: ApizrManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(Func(Of ILogger, IApizrManagerOptionsBase, THandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of ILogger, IApizrManagerOptionsBase, THandler))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  id: WithRefitSettings(Refit.RefitSettings)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRefitSettings(RefitSettings)
  nameWithType: ApizrManagerOptionsBuilder.WithRefitSettings(RefitSettings)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRefitSettings
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 215
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide some Refit specific settings\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithRefitSettings(RefitSettings refitSettings)
    parameters:
    - id: refitSettings
      type: Refit.RefitSettings
      description: A <xref href="Refit.RefitSettings" data-throw-if-not-resolved="false"></xref> instance
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRefitSettings(refitSettings As RefitSettings) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRefitSettings(Refit.RefitSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(System.Func{Refit.RefitSettings})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(System.Func{Refit.RefitSettings})
  id: WithRefitSettings(System.Func{Refit.RefitSettings})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRefitSettings(Func<RefitSettings>)
  nameWithType: ApizrManagerOptionsBuilder.WithRefitSettings(Func<RefitSettings>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(System.Func<Refit.RefitSettings>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRefitSettings
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 219
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide some Refit specific settings\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithRefitSettings(Func<RefitSettings> refitSettingsFactory)
    parameters:
    - id: refitSettingsFactory
      type: System.Func{Refit.RefitSettings}
      description: A <xref href="Refit.RefitSettings" data-throw-if-not-resolved="false"></xref> instance factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRefitSettings(refitSettingsFactory As Func(Of RefitSettings)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRefitSettings(System.Func{Refit.RefitSettings})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithRefitSettings(Func(Of RefitSettings))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings(System.Func(Of Refit.RefitSettings))
  name.vb: WithRefitSettings(Func(Of RefitSettings))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  id: WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithPolicyRegistry(IReadOnlyPolicyRegistry<String>)
  nameWithType: ApizrManagerOptionsBuilder.WithPolicyRegistry(IReadOnlyPolicyRegistry<String>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry<System.String>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithPolicyRegistry
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 227
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a policy registry\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithPolicyRegistry(IReadOnlyPolicyRegistry<string> policyRegistry)
    parameters:
    - id: policyRegistry
      type: Polly.Registry.IReadOnlyPolicyRegistry{System.String}
      description: A policy registry instance
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithPolicyRegistry(policyRegistry As IReadOnlyPolicyRegistry(Of String)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithPolicyRegistry(IReadOnlyPolicyRegistry(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry(Of System.String))
  name.vb: WithPolicyRegistry(IReadOnlyPolicyRegistry(Of String))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  id: WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithPolicyRegistry(Func<IReadOnlyPolicyRegistry<String>>)
  nameWithType: ApizrManagerOptionsBuilder.WithPolicyRegistry(Func<IReadOnlyPolicyRegistry<String>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(System.Func<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithPolicyRegistry
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 231
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a policy registry\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithPolicyRegistry(Func<IReadOnlyPolicyRegistry<string>> policyRegistryFactory)
    parameters:
    - id: policyRegistryFactory
      type: System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}}
      description: A policy registry instance factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithPolicyRegistry(policyRegistryFactory As Func(Of IReadOnlyPolicyRegistry(Of String))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithPolicyRegistry(Func(Of IReadOnlyPolicyRegistry(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry(System.Func(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)))
  name.vb: WithPolicyRegistry(Func(Of IReadOnlyPolicyRegistry(Of String)))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.Boolean})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.Boolean})
  id: WithConnectivityHandler(System.Func{System.Boolean})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler(Func<Boolean>)
  nameWithType: ApizrManagerOptionsBuilder.WithConnectivityHandler(Func<Boolean>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func<System.Boolean>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 239
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a function to invoke while checking connectivity\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithConnectivityHandler(Func<bool> connectivityCheckingFunction)
    parameters:
    - id: connectivityCheckingFunction
      type: System.Func{System.Boolean}
      description: A function to invoke while checking connectivity
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(connectivityCheckingFunction As Func(Of Boolean)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.Boolean})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithConnectivityHandler(Func(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func(Of System.Boolean))
  name.vb: WithConnectivityHandler(Func(Of Boolean))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  id: WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler(IConnectivityHandler)
  nameWithType: ApizrManagerOptionsBuilder.WithConnectivityHandler(IConnectivityHandler)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 243
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a connectivity handler to check connectivity before sending a request\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithConnectivityHandler(IConnectivityHandler connectivityHandler)
    parameters:
    - id: connectivityHandler
      type: Apizr.Connecting.IConnectivityHandler
      description: An <xref href="Apizr.Connecting.IConnectivityHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(connectivityHandler As IConnectivityHandler) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  id: WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler(Func<IConnectivityHandler>)
  nameWithType: ApizrManagerOptionsBuilder.WithConnectivityHandler(Func<IConnectivityHandler>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func<Apizr.Connecting.IConnectivityHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 247
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a connectivity handler\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithConnectivityHandler(Func<IConnectivityHandler> connectivityHandlerFactory)
    parameters:
    - id: connectivityHandlerFactory
      type: System.Func{Apizr.Connecting.IConnectivityHandler}
      description: An <xref href="Apizr.Connecting.IConnectivityHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(connectivityHandlerFactory As Func(Of IConnectivityHandler)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithConnectivityHandler(Func(Of IConnectivityHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler(System.Func(Of Apizr.Connecting.IConnectivityHandler))
  name.vb: WithConnectivityHandler(Func(Of IConnectivityHandler))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  id: WithCacheHandler(Apizr.Caching.ICacheHandler)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithCacheHandler(ICacheHandler)
  nameWithType: ApizrManagerOptionsBuilder.WithCacheHandler(ICacheHandler)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithCacheHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 255
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a cache handler to cache data\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithCacheHandler(ICacheHandler cacheHandler)
    parameters:
    - id: cacheHandler
      type: Apizr.Caching.ICacheHandler
      description: An <xref href="Apizr.Caching.ICacheHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithCacheHandler(cacheHandler As ICacheHandler) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithCacheHandler(Apizr.Caching.ICacheHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  id: WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithCacheHandler(Func<ICacheHandler>)
  nameWithType: ApizrManagerOptionsBuilder.WithCacheHandler(Func<ICacheHandler>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(System.Func<Apizr.Caching.ICacheHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithCacheHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 259
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a cache handler to cache data\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithCacheHandler(Func<ICacheHandler> cacheHandlerFactory)
    parameters:
    - id: cacheHandlerFactory
      type: System.Func{Apizr.Caching.ICacheHandler}
      description: An <xref href="Apizr.Caching.ICacheHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithCacheHandler(cacheHandlerFactory As Func(Of ICacheHandler)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithCacheHandler(Func(Of ICacheHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler(System.Func(Of Apizr.Caching.ICacheHandler))
  name.vb: WithCacheHandler(Func(Of ICacheHandler))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  id: WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithContext(Func<Context>, ApizrDuplicateStrategy)
  nameWithType: ApizrManagerOptionsBuilder.WithContext(Func<Context>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext(System.Func<Polly.Context>, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithContext
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 267
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nSet the Polly Context\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithContext(Func<Context> contextFactory, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Merge)
    parameters:
    - id: contextFactory
      type: System.Func{Polly.Context}
      description: The Polly Context to pass through it all
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another one already (default: Merge)'
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithContext(contextFactory As Func(Of Context), strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Merge) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrManagerOptionsBuilder.WithContext(Func(Of Context), ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext(System.Func(Of Polly.Context), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithContext(Func(Of Context), ApizrDuplicateStrategy)
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  id: WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  nameWithType: ApizrManagerOptionsBuilder.WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching(System.Action<Apizr.ApizrException>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithExCatching
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 299
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nCatch potential exceptions\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithExCatching(Action<ApizrException> onException, bool letThrowOnExceptionWithEmptyCache = true, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Replace)
    parameters:
    - id: onException
      type: System.Action{Apizr.ApizrException}
      description: The exception callback
    - id: letThrowOnExceptionWithEmptyCache
      type: System.Boolean
      description: 'Let throw potential exception if there&apos;s no cached data to return (default: true)'
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another callback already (default: Replace)'
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithExCatching(onException As Action(Of ApizrException), letThrowOnExceptionWithEmptyCache As Boolean = True, strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Replace) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrManagerOptionsBuilder.WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching(System.Action(Of Apizr.ApizrException), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  id: WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  nameWithType: ApizrManagerOptionsBuilder.WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching<TResult>(System.Action<Apizr.ApizrException<TResult>>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithExCatching
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 332
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nCatch potential exceptions\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithExCatching<TResult>(Action<ApizrException<TResult>> onException, bool letThrowOnExceptionWithEmptyCache = true, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Replace)
    parameters:
    - id: onException
      type: System.Action{Apizr.ApizrException{{TResult}}}
      description: The exception callback
    - id: letThrowOnExceptionWithEmptyCache
      type: System.Boolean
      description: 'Let throw potential exception if there&apos;s no cached data to return (default: true)'
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another callback already (default: Replace)'
    typeParameters:
    - id: TResult
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithExCatching(Of TResult)(onException As Action(Of ApizrException(Of TResult)), letThrowOnExceptionWithEmptyCache As Boolean = True, strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Replace) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithExCatching``1(System.Action{Apizr.ApizrException{{TResult}}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrManagerOptionsBuilder.WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching(Of TResult)(System.Action(Of Apizr.ApizrException(Of TResult)), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter(System.String,System.Object)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter(System.String,System.Object)
  id: WithHandlerParameter(System.String,System.Object)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHandlerParameter(String, Object)
  nameWithType: ApizrManagerOptionsBuilder.WithHandlerParameter(String, Object)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHandlerParameter
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 339
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nSet some parameters passed through all delegating handlers\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithHandlerParameter(string key, object value)
    parameters:
    - id: key
      type: System.String
      description: The parameter&apos;s key
    - id: value
      type: System.Object
      description: The parameter&apos;s value
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHandlerParameter(key As String, value As Object) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHandlerParameter(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  id: WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  nameWithType: ApizrManagerOptionsBuilder.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[])
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLogging
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 347
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine tracer mode, http traffic tracing verbosity and log levels (could be defined with LogAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithLogging(HttpTracerMode httpTracerMode = HttpTracerMode.Everything, HttpMessageParts trafficVerbosity = HttpMessageParts.All, params LogLevel[] logLevels)
    parameters:
    - id: httpTracerMode
      type: Apizr.Logging.HttpTracerMode
      description: ''
    - id: trafficVerbosity
      type: Apizr.Logging.HttpMessageParts
      description: 'Http traffic tracing verbosity (default: All)'
    - id: logLevels
      type: Microsoft.Extensions.Logging.LogLevel[]
      description: 'Log levels to apply while writing (default: Information)'
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLogging(httpTracerMode As HttpTracerMode = HttpTracerMode.Everything, trafficVerbosity As HttpMessageParts = HttpMessageParts.All, ParamArray logLevels As LogLevel()) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  nameWithType.vb: ApizrManagerOptionsBuilder.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())
  name.vb: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  id: WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLogging(Func<HttpTracerMode>, Func<HttpMessageParts>, Func<LogLevel[]>)
  nameWithType: ApizrManagerOptionsBuilder.WithLogging(Func<HttpTracerMode>, Func<HttpMessageParts>, Func<LogLevel[]>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func<Apizr.Logging.HttpTracerMode>, System.Func<Apizr.Logging.HttpMessageParts>, System.Func<Microsoft.Extensions.Logging.LogLevel[]>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLogging
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 353
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine tracer mode, http traffic tracing verbosity and log levels (could be defined with LogAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithLogging(Func<HttpTracerMode> httpTracerModeFactory, Func<HttpMessageParts> trafficVerbosityFactory, Func<LogLevel[]> logLevelsFactory)
    parameters:
    - id: httpTracerModeFactory
      type: System.Func{Apizr.Logging.HttpTracerMode}
      description: Http traffic tracing mode
    - id: trafficVerbosityFactory
      type: System.Func{Apizr.Logging.HttpMessageParts}
      description: Http traffic tracing verbosity factory
    - id: logLevelsFactory
      type: System.Func{Microsoft.Extensions.Logging.LogLevel[]}
      description: Log levels factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLogging(httpTracerModeFactory As Func(Of HttpTracerMode), trafficVerbosityFactory As Func(Of HttpMessageParts), logLevelsFactory As Func(Of LogLevel())) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithLogging(Func(Of HttpTracerMode), Func(Of HttpMessageParts), Func(Of LogLevel()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func(Of Apizr.Logging.HttpTracerMode), System.Func(Of Apizr.Logging.HttpMessageParts), System.Func(Of Microsoft.Extensions.Logging.LogLevel()))
  name.vb: WithLogging(Func(Of HttpTracerMode), Func(Of HttpMessageParts), Func(Of LogLevel()))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  id: WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLogging(Func<(HttpTracerMode, HttpMessageParts, LogLevel[])>)
  nameWithType: ApizrManagerOptionsBuilder.WithLogging(Func<(HttpTracerMode, HttpMessageParts, LogLevel[])>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func<System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLogging
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 364
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nDefine tracer mode, http traffic tracing verbosity and log levels (could be defined with LogAttribute)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithLogging(Func<(HttpTracerMode, HttpMessageParts, LogLevel[])> loggingConfigurationFactory)
    parameters:
    - id: loggingConfigurationFactory
      type: System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}}
      description: Logging configuration factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLogging(loggingConfigurationFactory As Func(Of(HttpTracerMode, HttpMessageParts, LogLevel())(Of HttpTracerMode , HttpMessageParts, LogLevel()))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithLogging(Func(Of (HttpTracerMode, HttpMessageParts, LogLevel())(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging(System.Func(Of System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())))
  name.vb: WithLogging(Func(Of (HttpTracerMode, HttpMessageParts, LogLevel())(Of HttpTracerMode, HttpMessageParts, LogLevel())))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.String[])
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.String[])
  id: WithHeaders(System.String[])
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHeaders(String[])
  nameWithType: ApizrManagerOptionsBuilder.WithHeaders(String[])
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.String[])
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHeaders
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 371
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nAdd some headers to the request\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithHeaders(params string[] headers)
    parameters:
    - id: headers
      type: System.String[]
      description: Headers to add to the request
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHeaders(ParamArray headers As String()) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHeaders(System.String[])
  nameWithType.vb: ApizrManagerOptionsBuilder.WithHeaders(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.String())
  name.vb: WithHeaders(String())
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  id: WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHeaders(Func<IList<String>>)
  nameWithType: ApizrManagerOptionsBuilder.WithHeaders(Func<IList<String>>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.Func<System.Collections.Generic.IList<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHeaders
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 375
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nAdd some headers to the request\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithHeaders(Func<IList<string>> headersFactory)
    parameters:
    - id: headersFactory
      type: System.Func{System.Collections.Generic.IList{System.String}}
      description: Headers factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHeaders(headersFactory As Func(Of IList(Of String))) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithHeaders(Func(Of IList(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders(System.Func(Of System.Collections.Generic.IList(Of System.String)))
  name.vb: WithHeaders(Func(Of IList(Of String)))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  id: WithOperationTimeout(System.TimeSpan)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithOperationTimeout(TimeSpan)
  nameWithType: ApizrManagerOptionsBuilder.WithOperationTimeout(TimeSpan)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithOperationTimeout
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 383
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nSet a timeout to the operation (overall request tries)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithOperationTimeout(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The operation timeout
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithOperationTimeout(timeout As TimeSpan) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithOperationTimeout(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.Func{System.TimeSpan})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.Func{System.TimeSpan})
  id: WithOperationTimeout(System.Func{System.TimeSpan})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithOperationTimeout(Func<TimeSpan>)
  nameWithType: ApizrManagerOptionsBuilder.WithOperationTimeout(Func<TimeSpan>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.Func<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithOperationTimeout
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 387
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nSet a timeout to the operation (overall request tries)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithOperationTimeout(Func<TimeSpan> timeoutFactory)
    parameters:
    - id: timeoutFactory
      type: System.Func{System.TimeSpan}
      description: The operation timeout factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithOperationTimeout(timeoutFactory As Func(Of TimeSpan)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithOperationTimeout(System.Func{System.TimeSpan})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithOperationTimeout(Func(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout(System.Func(Of System.TimeSpan))
  name.vb: WithOperationTimeout(Func(Of TimeSpan))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  id: WithRequestTimeout(System.TimeSpan)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRequestTimeout(TimeSpan)
  nameWithType: ApizrManagerOptionsBuilder.WithRequestTimeout(TimeSpan)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRequestTimeout
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 395
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nSet a timeout to the request (each request try)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithRequestTimeout(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The request timeout
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRequestTimeout(timeout As TimeSpan) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRequestTimeout(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.Func{System.TimeSpan})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.Func{System.TimeSpan})
  id: WithRequestTimeout(System.Func{System.TimeSpan})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRequestTimeout(Func<TimeSpan>)
  nameWithType: ApizrManagerOptionsBuilder.WithRequestTimeout(Func<TimeSpan>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.Func<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRequestTimeout
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 399
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nSet a timeout to the request (each request try)\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithRequestTimeout(Func<TimeSpan> timeoutFactory)
    parameters:
    - id: timeoutFactory
      type: System.Func{System.TimeSpan}
      description: The request timeout factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRequestTimeout(timeoutFactory As Func(Of TimeSpan)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRequestTimeout(System.Func{System.TimeSpan})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithRequestTimeout(Func(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout(System.Func(Of System.TimeSpan))
  name.vb: WithRequestTimeout(Func(Of TimeSpan))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  id: WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLoggerFactory(ILoggerFactory)
  nameWithType: ApizrManagerOptionsBuilder.WithLoggerFactory(ILoggerFactory)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLoggerFactory
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 407
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a logger factory\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithLoggerFactory(ILoggerFactory loggerFactory)
    parameters:
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The logger factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLoggerFactory(loggerFactory As ILoggerFactory) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  id: WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLoggerFactory(Func<ILoggerFactory>)
  nameWithType: ApizrManagerOptionsBuilder.WithLoggerFactory(Func<ILoggerFactory>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(System.Func<Microsoft.Extensions.Logging.ILoggerFactory>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLoggerFactory
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 411
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a logger factory\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithLoggerFactory(Func<ILoggerFactory> loggerFactory)
    parameters:
    - id: loggerFactory
      type: System.Func{Microsoft.Extensions.Logging.ILoggerFactory}
      description: The logger factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLoggerFactory(loggerFactory As Func(Of ILoggerFactory)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithLoggerFactory(Func(Of ILoggerFactory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory(System.Func(Of Microsoft.Extensions.Logging.ILoggerFactory))
  name.vb: WithLoggerFactory(Func(Of ILoggerFactory))
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  id: WithMappingHandler(Apizr.Mapping.IMappingHandler)
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithMappingHandler(IMappingHandler)
  nameWithType: ApizrManagerOptionsBuilder.WithMappingHandler(IMappingHandler)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithMappingHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 419
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a mapping handler to map entities\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithMappingHandler(IMappingHandler mappingHandler)
    parameters:
    - id: mappingHandler
      type: Apizr.Mapping.IMappingHandler
      description: An <xref href="Apizr.Mapping.IMappingHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithMappingHandler(mappingHandler As IMappingHandler) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  commentId: M:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  id: WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  parent: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithMappingHandler(Func<IMappingHandler>)
  nameWithType: ApizrManagerOptionsBuilder.WithMappingHandler(Func<IMappingHandler>)
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(System.Func<Apizr.Mapping.IMappingHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithMappingHandler
    path: ../../Src/Apizr/Configuring/Manager/ApizrManagerOptionsBuilder.cs
    startLine: 423
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Manager
  summary: "\nProvide a mapping handler to map entities\n"
  example: []
  syntax:
    content: public IApizrManagerOptionsBuilder WithMappingHandler(Func<IMappingHandler> mappingHandlerFactory)
    parameters:
    - id: mappingHandlerFactory
      type: System.Func{Apizr.Mapping.IMappingHandler}
      description: An <xref href="Apizr.Mapping.IMappingHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance factory
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithMappingHandler(mappingHandlerFactory As Func(Of IMappingHandler)) As IApizrManagerOptionsBuilder
  overload: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler*
  implements:
  - Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  nameWithType.vb: ApizrManagerOptionsBuilder.WithMappingHandler(Func(Of IMappingHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler(System.Func(Of Apizr.Mapping.IMappingHandler))
  name.vb: WithMappingHandler(Func(Of IMappingHandler))
references:
- uid: Apizr.Configuring.Manager
  commentId: N:Apizr.Configuring.Manager
  name: Apizr.Configuring.Manager
  nameWithType: Apizr.Configuring.Manager
  fullName: Apizr.Configuring.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  parent: Apizr.Configuring.Manager
  name: IApizrManagerOptionsBuilder
  nameWithType: IApizrManagerOptionsBuilder
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Manager
  definition: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder`2
  name: IApizrManagerOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrManagerOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrManagerOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrManagerOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder`2
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder`2
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Manager
  definition: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase`2
  name: IApizrManagerOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrManagerOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrManagerOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrManagerOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase`2
    name: IApizrManagerOptionsBuilderBase
    nameWithType: IApizrManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase`2
    name: IApizrManagerOptionsBuilderBase
    nameWithType: IApizrManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Manager
  definition: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
  name: IApizrGlobalManagerOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrGlobalManagerOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalManagerOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrGlobalManagerOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
  parent: Apizr.Configuring.Manager
  name: IApizrManagerOptionsBuilderBase
  nameWithType: IApizrManagerOptionsBuilderBase
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
- uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  commentId: T:Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  parent: Apizr.Configuring.Manager
  name: IApizrGlobalManagerOptionsBuilderBase
  nameWithType: IApizrGlobalManagerOptionsBuilderBase
  fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Common
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2
  name: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Common
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase`2
  name: IApizrCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase`2
    name: IApizrCommonOptionsBuilderBase
    nameWithType: IApizrCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase`2
    name: IApizrCommonOptionsBuilderBase
    nameWithType: IApizrCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Common
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
  name: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
  parent: Apizr.Configuring.Common
  name: IApizrCommonOptionsBuilderBase
  nameWithType: IApizrCommonOptionsBuilderBase
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  commentId: T:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  parent: Apizr.Configuring.Common
  name: IApizrGlobalCommonOptionsBuilderBase
  nameWithType: IApizrGlobalCommonOptionsBuilderBase
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Proper
  definition: Apizr.Configuring.Proper.IApizrProperOptionsBuilder`2
  name: IApizrProperOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrProperOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrProperOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrProperOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrProperOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder`2
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder`2
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Proper
  definition: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase`2
  name: IApizrProperOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrProperOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrProperOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrProperOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase`2
    name: IApizrProperOptionsBuilderBase
    nameWithType: IApizrProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase`2
    name: IApizrProperOptionsBuilderBase
    nameWithType: IApizrProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Proper
  definition: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
  name: IApizrGlobalProperOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrGlobalProperOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalProperOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrGlobalProperOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
  parent: Apizr.Configuring.Proper
  name: IApizrProperOptionsBuilderBase
  nameWithType: IApizrProperOptionsBuilderBase
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
- uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  commentId: T:Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  parent: Apizr.Configuring.Proper
  name: IApizrGlobalProperOptionsBuilderBase
  nameWithType: IApizrGlobalProperOptionsBuilderBase
  fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Shared
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2
  name: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2
    name: IApizrSharedRegistrationOptionsBuilder
    nameWithType: IApizrSharedRegistrationOptionsBuilder
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2
    name: IApizrSharedRegistrationOptionsBuilder
    nameWithType: IApizrSharedRegistrationOptionsBuilder
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Shared
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase`2
  name: IApizrSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase`2
    name: IApizrSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase`2
    name: IApizrSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Shared
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
  name: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: Apizr.Configuring.Shared
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
  name: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptions
    name: IApizrManagerOptions
    nameWithType: IApizrManagerOptions
    fullName: Apizr.Configuring.Manager.IApizrManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
  parent: Apizr.Configuring.Shared
  name: IApizrSharedRegistrationOptionsBuilder
  nameWithType: IApizrSharedRegistrationOptionsBuilder
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
  parent: Apizr.Configuring.Shared
  name: IApizrSharedRegistrationOptionsBuilderBase
  nameWithType: IApizrSharedRegistrationOptionsBuilderBase
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedRegistrationOptionsBuilderBase
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedOptionsBuilderBase
  nameWithType: IApizrGlobalSharedOptionsBuilderBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  name: WithPriorityManagement<ApizrManagerOptionsBuilder>()
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<ApizrManagerOptionsBuilder>()
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>()
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of ApizrManagerOptionsBuilder)()
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)()
  name.vb: WithPriorityManagement(Of ApizrManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
    name: WithPriorityManagement<ApizrManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<ApizrManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
    name: WithPriorityManagement(Of ApizrManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  name: WithPriority<ApizrManagerOptionsBuilder>()
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrManagerOptionsBuilder>()
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>()
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrManagerOptionsBuilder)()
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)()
  name.vb: WithPriority(Of ApizrManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
    name: WithPriority<ApizrManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
    name: WithPriority(Of ApizrManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  name: WithPriority<ApizrManagerOptionsBuilder>(Priority)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrManagerOptionsBuilder>(Priority)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(Fusillade.Priority)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrManagerOptionsBuilder)(Priority)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(Fusillade.Priority)
  name.vb: WithPriority(Of ApizrManagerOptionsBuilder)(Priority)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
    name: WithPriority<ApizrManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
    name: WithPriority(Of ApizrManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  name: WithPriority<ApizrManagerOptionsBuilder>(Int32)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrManagerOptionsBuilder>(Int32)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(System.Int32)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrManagerOptionsBuilder)(Int32)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(System.Int32)
  name.vb: WithPriority(Of ApizrManagerOptionsBuilder)(Int32)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
    name: WithPriority<ApizrManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
    name: WithPriority(Of ApizrManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IMapper)
  commentId: M:Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IMapper)
  parent: Apizr.AutoMapperOptionsBuilderExtensions
  definition: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IMapper)
  name: WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>(IMapper)
  nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>(IMapper)
  fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(AutoMapper.IMapper)
  nameWithType.vb: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)(IMapper)
  fullName.vb: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(AutoMapper.IMapper)
  name.vb: WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)(IMapper)
  spec.csharp:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IMapper)
    name: WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: AutoMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IMapper)
    name: WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: AutoMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IConfigurationProvider)
  commentId: M:Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IConfigurationProvider)
  parent: Apizr.AutoMapperOptionsBuilderExtensions
  definition: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IConfigurationProvider)
  name: WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>(IConfigurationProvider)
  nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>(IConfigurationProvider)
  fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(AutoMapper.IConfigurationProvider)
  nameWithType.vb: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)(IConfigurationProvider)
  fullName.vb: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(AutoMapper.IConfigurationProvider)
  name.vb: WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)(IConfigurationProvider)
  spec.csharp:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IConfigurationProvider)
    name: WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<ApizrManagerOptionsBuilder>
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: AutoMapper.IConfigurationProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(AutoMapper.IConfigurationProvider)
    name: WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: AutoMapper.IConfigurationProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>()
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>()
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>()
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)()
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)()
  name.vb: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
    name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
    name: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>(Func<IBlobCache>)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>(Func<IBlobCache>)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(System.Func<Akavache.IBlobCache>)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)(Func(Of IBlobCache))
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(System.Func(Of Akavache.IBlobCache))
  name.vb: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)(Func(Of IBlobCache))
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>(String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>(String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)(String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(System.String)
  name.vb: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)(String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
    name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
    name: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>(Func<IBlobCache>, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>(Func<IBlobCache>, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(System.Func<Akavache.IBlobCache>, System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)(Func(Of IBlobCache), String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(System.Func(Of Akavache.IBlobCache), System.String)
  name.vb: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)(Func(Of IBlobCache), String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  name: WithProgress<ApizrManagerOptionsBuilder>()
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrManagerOptionsBuilder>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrManagerOptionsBuilder)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)()
  name.vb: WithProgress(Of ApizrManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
    name: WithProgress<ApizrManagerOptionsBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrManagerOptionsBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
    name: WithProgress(Of ApizrManagerOptionsBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  name: WithProgress<ApizrManagerOptionsBuilder>(Action<ApizrProgressEventArgs>)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrManagerOptionsBuilder>(Action<ApizrProgressEventArgs>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(System.Action<Apizr.Progressing.ApizrProgressEventArgs>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrManagerOptionsBuilder)(Action(Of ApizrProgressEventArgs))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(System.Action(Of Apizr.Progressing.ApizrProgressEventArgs))
  name.vb: WithProgress(Of ApizrManagerOptionsBuilder)(Action(Of ApizrProgressEventArgs))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress<ApizrManagerOptionsBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrManagerOptionsBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress(Of ApizrManagerOptionsBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  name: WithProgress<ApizrManagerOptionsBuilder>(IApizrProgress)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrManagerOptionsBuilder>(IApizrProgress)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(Apizr.Progressing.IApizrProgress)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrManagerOptionsBuilder)(IApizrProgress)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(Apizr.Progressing.IApizrProgress)
  name.vb: WithProgress(Of ApizrManagerOptionsBuilder)(IApizrProgress)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
    name: WithProgress<ApizrManagerOptionsBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrManagerOptionsBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
    name: WithProgress(Of ApizrManagerOptionsBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(MapsterMapper.IMapper)
  commentId: M:Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0,MapsterMapper.IMapper)
  parent: Apizr.MapsterOptionsBuilderExtensions
  definition: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0,MapsterMapper.IMapper)
  name: WithMapsterMappingHandler<ApizrManagerOptionsBuilder>(IMapper)
  nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<ApizrManagerOptionsBuilder>(IMapper)
  fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>(MapsterMapper.IMapper)
  nameWithType.vb: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of ApizrManagerOptionsBuilder)(IMapper)
  fullName.vb: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)(MapsterMapper.IMapper)
  name.vb: WithMapsterMappingHandler(Of ApizrManagerOptionsBuilder)(IMapper)
  spec.csharp:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(MapsterMapper.IMapper)
    name: WithMapsterMappingHandler<ApizrManagerOptionsBuilder>
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<ApizrManagerOptionsBuilder>
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<Apizr.Configuring.Manager.ApizrManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MapsterMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: MapsterMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(MapsterMapper.IMapper)
    name: WithMapsterMappingHandler(Of ApizrManagerOptionsBuilder)
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of ApizrManagerOptionsBuilder)
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of Apizr.Configuring.Manager.ApizrManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: MapsterMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: MapsterMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder`2
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBuilder`2
  name: IApizrManagerOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrManagerOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrManagerOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrManagerOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder`2
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder`2
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase`2
  name: IApizrManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase`2
    name: IApizrManagerOptionsBuilderBase
    nameWithType: IApizrManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase`2
    name: IApizrManagerOptionsBuilderBase
    nameWithType: IApizrManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
  name: IApizrGlobalManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrGlobalManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrGlobalManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrGlobalManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2
  name: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  name.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common
  commentId: N:Apizr.Configuring.Common
  name: Apizr.Configuring.Common
  nameWithType: Apizr.Configuring.Common
  fullName: Apizr.Configuring.Common
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase`2
  name: IApizrCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType: IApizrCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType.vb: IApizrCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  name.vb: IApizrCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase`2
    name: IApizrCommonOptionsBuilderBase
    nameWithType: IApizrCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase`2
    name: IApizrCommonOptionsBuilderBase
    nameWithType: IApizrCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
  name: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  name.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder`2
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBuilder`2
  name: IApizrProperOptionsBuilder<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType: IApizrProperOptionsBuilder<TApizrProperOptions, TApizrProperOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType.vb: IApizrProperOptionsBuilder(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrProperOptionsBuilder(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  name.vb: IApizrProperOptionsBuilder(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder`2
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder`2
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper
  commentId: N:Apizr.Configuring.Proper
  name: Apizr.Configuring.Proper
  nameWithType: Apizr.Configuring.Proper
  fullName: Apizr.Configuring.Proper
- uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase`2
  name: IApizrProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType: IApizrProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType.vb: IApizrProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  name.vb: IApizrProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase`2
    name: IApizrProperOptionsBuilderBase
    nameWithType: IApizrProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase`2
    name: IApizrProperOptionsBuilderBase
    nameWithType: IApizrProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
  name: IApizrGlobalProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType: IApizrGlobalProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType.vb: IApizrGlobalProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  name.vb: IApizrGlobalProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2
  name: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2
    name: IApizrSharedRegistrationOptionsBuilder
    nameWithType: IApizrSharedRegistrationOptionsBuilder
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2
    name: IApizrSharedRegistrationOptionsBuilder
    nameWithType: IApizrSharedRegistrationOptionsBuilder
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared
  commentId: N:Apizr.Configuring.Shared
  name: Apizr.Configuring.Shared
  nameWithType: Apizr.Configuring.Shared
  fullName: Apizr.Configuring.Shared
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase`2
  name: IApizrSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase`2
    name: IApizrSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase`2
    name: IApizrSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
  name: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
  name: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  name: WithPriorityManagement<T>(T)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>(T)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>(T)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)(T)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)(T)
  name.vb: WithPriorityManagement(Of T)(T)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
    name: WithPriorityManagement<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
    name: WithPriorityManagement(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FusilladeOptionsBuilderExtensions
  commentId: T:Apizr.FusilladeOptionsBuilderExtensions
  parent: Apizr
  name: FusilladeOptionsBuilderExtensions
  nameWithType: FusilladeOptionsBuilderExtensions
  fullName: Apizr.FusilladeOptionsBuilderExtensions
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  name: WithPriority<T>(T)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>(T)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>(T)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T)
  name.vb: WithPriority(Of T)(T)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
    name: WithPriority<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
    name: WithPriority(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  isExternal: true
  name: WithPriority<T>(T, Priority)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>(T, Priority)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>(T, Fusillade.Priority)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, Priority)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, Fusillade.Priority)
  name.vb: WithPriority(Of T)(T, Priority)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
    name: WithPriority<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
    name: WithPriority(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  isExternal: true
  name: WithPriority<T>(T, Int32)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>(T, Int32)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>(T, System.Int32)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, Int32)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, System.Int32)
  name.vb: WithPriority(Of T)(T, Int32)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
    name: WithPriority<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
    name: WithPriority(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IMapper)
  commentId: M:Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IMapper)
  isExternal: true
  name: WithAutoMapperMappingHandler<TBuilder>(TBuilder, IMapper)
  nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>(TBuilder, IMapper)
  fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>(TBuilder, AutoMapper.IMapper)
  nameWithType.vb: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)(TBuilder, IMapper)
  fullName.vb: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)(TBuilder, AutoMapper.IMapper)
  name.vb: WithAutoMapperMappingHandler(Of TBuilder)(TBuilder, IMapper)
  spec.csharp:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IMapper)
    name: WithAutoMapperMappingHandler<TBuilder>
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: AutoMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IMapper)
    name: WithAutoMapperMappingHandler(Of TBuilder)
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: AutoMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AutoMapperOptionsBuilderExtensions
  commentId: T:Apizr.AutoMapperOptionsBuilderExtensions
  parent: Apizr
  name: AutoMapperOptionsBuilderExtensions
  nameWithType: AutoMapperOptionsBuilderExtensions
  fullName: Apizr.AutoMapperOptionsBuilderExtensions
- uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IConfigurationProvider)
  commentId: M:Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IConfigurationProvider)
  isExternal: true
  name: WithAutoMapperMappingHandler<TBuilder>(TBuilder, IConfigurationProvider)
  nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>(TBuilder, IConfigurationProvider)
  fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>(TBuilder, AutoMapper.IConfigurationProvider)
  nameWithType.vb: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)(TBuilder, IConfigurationProvider)
  fullName.vb: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)(TBuilder, AutoMapper.IConfigurationProvider)
  name.vb: WithAutoMapperMappingHandler(Of TBuilder)(TBuilder, IConfigurationProvider)
  spec.csharp:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IConfigurationProvider)
    name: WithAutoMapperMappingHandler<TBuilder>
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: AutoMapper.IConfigurationProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0,AutoMapper.IConfigurationProvider)
    name: WithAutoMapperMappingHandler(Of TBuilder)
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: AutoMapper.IConfigurationProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AkavacheOptionsBuilderExtensions
  commentId: T:Apizr.AkavacheOptionsBuilderExtensions
  parent: Apizr
  name: AkavacheOptionsBuilderExtensions
  nameWithType: AkavacheOptionsBuilderExtensions
  fullName: Apizr.AkavacheOptionsBuilderExtensions
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  isExternal: true
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache))
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  isExternal: true
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  isExternal: true
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>, System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache), System.String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  name: WithProgress<TBuilder>(TBuilder)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder)
  name.vb: WithProgress(Of TBuilder)(TBuilder)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
    name: WithProgress<TBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
    name: WithProgress(Of TBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions
  commentId: T:Apizr.FileTransferOptionsBuilderExtensions
  parent: Apizr
  name: FileTransferOptionsBuilderExtensions
  nameWithType: FileTransferOptionsBuilderExtensions
  fullName: Apizr.FileTransferOptionsBuilderExtensions
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  isExternal: true
  name: WithProgress<TBuilder>(TBuilder, Action<ApizrProgressEventArgs>)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, Action<ApizrProgressEventArgs>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, System.Action<Apizr.Progressing.ApizrProgressEventArgs>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, Action(Of ApizrProgressEventArgs))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, System.Action(Of Apizr.Progressing.ApizrProgressEventArgs))
  name.vb: WithProgress(Of TBuilder)(TBuilder, Action(Of ApizrProgressEventArgs))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress<TBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress(Of TBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  name: WithProgress<TBuilder>(TBuilder, IApizrProgress)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, IApizrProgress)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, Apizr.Progressing.IApizrProgress)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, IApizrProgress)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, Apizr.Progressing.IApizrProgress)
  name.vb: WithProgress(Of TBuilder)(TBuilder, IApizrProgress)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
    name: WithProgress<TBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
    name: WithProgress(Of TBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0,MapsterMapper.IMapper)
  commentId: M:Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0,MapsterMapper.IMapper)
  isExternal: true
  name: WithMapsterMappingHandler<TBuilder>(TBuilder, IMapper)
  nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>(TBuilder, IMapper)
  fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>(TBuilder, MapsterMapper.IMapper)
  nameWithType.vb: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)(TBuilder, IMapper)
  fullName.vb: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)(TBuilder, MapsterMapper.IMapper)
  name.vb: WithMapsterMappingHandler(Of TBuilder)(TBuilder, IMapper)
  spec.csharp:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0,MapsterMapper.IMapper)
    name: WithMapsterMappingHandler<TBuilder>
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MapsterMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: MapsterMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0,MapsterMapper.IMapper)
    name: WithMapsterMappingHandler(Of TBuilder)
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MapsterMapper.IMapper
    name: IMapper
    nameWithType: IMapper
    fullName: MapsterMapper.IMapper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.MapsterOptionsBuilderExtensions
  commentId: T:Apizr.MapsterOptionsBuilderExtensions
  parent: Apizr
  name: MapsterOptionsBuilderExtensions
  nameWithType: MapsterOptionsBuilderExtensions
  fullName: Apizr.MapsterOptionsBuilderExtensions
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Configuring.Manager.ApizrManagerOptions
  commentId: T:Apizr.Configuring.Manager.ApizrManagerOptions
  parent: Apizr.Configuring.Manager
  name: ApizrManagerOptions
  nameWithType: ApizrManagerOptions
  fullName: Apizr.Configuring.Manager.ApizrManagerOptions
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress
  name: WithBaseAddress
  nameWithType: ApizrManagerOptionsBuilder.WithBaseAddress
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBaseAddress
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.String)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
  name: WithBaseAddress(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
  isExternal: true
  name: WithBaseAddress(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Func{System.String})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Func{System.String})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.String})
  name: WithBaseAddress(Func<String>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress(Func<String>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress(System.Func<System.String>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress(Func(Of String))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress(System.Func(Of System.String))
  name.vb: WithBaseAddress(Func(Of String))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.String})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.String})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.String})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.String})
  isExternal: true
  name: WithBaseAddress(Func<String>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(Func<String>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(System.Func<System.String>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(Func(Of String))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(System.Func(Of System.String))
  name.vb: WithBaseAddress(Func(Of String))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.String})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.String})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Uri)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Uri)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
  name: WithBaseAddress(Uri)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress(Uri)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress(System.Uri)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress(Uri)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress(System.Uri)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
  isExternal: true
  name: WithBaseAddress(Uri)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(Uri)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(System.Uri)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(Uri)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(System.Uri)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Func{System.Uri})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBaseAddress(System.Func{System.Uri})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.Uri})
  name: WithBaseAddress(Func<Uri>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress(Func<Uri>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress(System.Func<System.Uri>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress(Func(Of Uri))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress(System.Func(Of System.Uri))
  name.vb: WithBaseAddress(Func(Of Uri))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Uri}
  commentId: T:System.Func{System.Uri}
  parent: System
  definition: System.Func`1
  name: Func<Uri>
  nameWithType: Func<Uri>
  fullName: System.Func<System.Uri>
  nameWithType.vb: Func(Of Uri)
  fullName.vb: System.Func(Of System.Uri)
  name.vb: Func(Of Uri)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.Uri})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.Uri})
  isExternal: true
  name: WithBaseAddress(Func<Uri>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(Func<Uri>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(System.Func<System.Uri>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(Func(Of Uri))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(System.Func(Of System.Uri))
  name.vb: WithBaseAddress(Func(Of Uri))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBaseAddress(System.Func{System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath
  name: WithBasePath
  nameWithType: ApizrManagerOptionsBuilder.WithBasePath
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithBasePath
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBasePath(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBasePath(System.String)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
  name: WithBasePath(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBasePath(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBasePath(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBasePath(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBasePath(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
  isExternal: true
  name: WithBasePath(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBasePath(System.Func{System.String})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithBasePath(System.Func{System.String})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBasePath(System.Func{System.String})
  name: WithBasePath(Func<String>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBasePath(Func<String>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBasePath(System.Func<System.String>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBasePath(Func(Of String))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBasePath(System.Func(Of System.String))
  name.vb: WithBasePath(Func(Of String))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBasePath(System.Func{System.String})
    name: WithBasePath
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBasePath(System.Func{System.String})
    name: WithBasePath
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBasePath(System.Func{System.String})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBasePath(System.Func{System.String})
  isExternal: true
  name: WithBasePath(Func<String>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBasePath(Func<String>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBasePath(System.Func<System.String>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath(Func(Of String))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath(System.Func(Of System.String))
  name.vb: WithBasePath(Func(Of String))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBasePath(System.Func{System.String})
    name: WithBasePath
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithBasePath(System.Func{System.String})
    name: WithBasePath
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler
  name: WithHttpClientHandler
  nameWithType: ApizrManagerOptionsBuilder.WithHttpClientHandler
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClientHandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  name: WithHttpClientHandler(HttpClientHandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHttpClientHandler(HttpClientHandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHttpClientHandler(HttpClientHandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClientHandler
  commentId: T:System.Net.Http.HttpClientHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  isExternal: true
  name: WithHttpClientHandler(HttpClientHandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler(HttpClientHandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler(HttpClientHandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  name: WithHttpClientHandler(Func<HttpClientHandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHttpClientHandler(Func<HttpClientHandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHttpClientHandler(System.Func<System.Net.Http.HttpClientHandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHttpClientHandler(Func(Of HttpClientHandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHttpClientHandler(System.Func(Of System.Net.Http.HttpClientHandler))
  name.vb: WithHttpClientHandler(Func(Of HttpClientHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Net.Http.HttpClientHandler}
  commentId: T:System.Func{System.Net.Http.HttpClientHandler}
  parent: System
  definition: System.Func`1
  name: Func<HttpClientHandler>
  nameWithType: Func<HttpClientHandler>
  fullName: System.Func<System.Net.Http.HttpClientHandler>
  nameWithType.vb: Func(Of HttpClientHandler)
  fullName.vb: System.Func(Of System.Net.Http.HttpClientHandler)
  name.vb: Func(Of HttpClientHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
  isExternal: true
  name: WithHttpClientHandler(Func<HttpClientHandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler(Func<HttpClientHandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler(System.Func<System.Net.Http.HttpClientHandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler(Func(Of HttpClientHandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler(System.Func(Of System.Net.Http.HttpClientHandler))
  name.vb: WithHttpClientHandler(Func(Of HttpClientHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClientHandler(System.Func{System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient
  name: ConfigureHttpClient
  nameWithType: ApizrManagerOptionsBuilder.ConfigureHttpClient
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.ConfigureHttpClient
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  name: ConfigureHttpClient(Action<HttpClient>, ApizrDuplicateStrategy)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.ConfigureHttpClient(Action<HttpClient>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.ConfigureHttpClient(System.Action<System.Net.Http.HttpClient>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).ConfigureHttpClient(Action(Of HttpClient), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).ConfigureHttpClient(System.Action(Of System.Net.Http.HttpClient), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: ConfigureHttpClient(Action(Of HttpClient), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.ConfigureHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.ConfigureHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).ConfigureHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).ConfigureHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Net.Http.HttpClient}
  commentId: T:System.Action{System.Net.Http.HttpClient}
  parent: System
  definition: System.Action`1
  name: Action<HttpClient>
  nameWithType: Action<HttpClient>
  fullName: System.Action<System.Net.Http.HttpClient>
  nameWithType.vb: Action(Of HttpClient)
  fullName.vb: System.Action(Of System.Net.Http.HttpClient)
  name.vb: Action(Of HttpClient)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrDuplicateStrategy
  commentId: T:Apizr.Configuring.ApizrDuplicateStrategy
  parent: Apizr.Configuring
  name: ApizrDuplicateStrategy
  nameWithType: ApizrDuplicateStrategy
  fullName: Apizr.Configuring.ApizrDuplicateStrategy
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: ConfigureHttpClient(Action<HttpClient>, ApizrDuplicateStrategy)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.ConfigureHttpClient(Action<HttpClient>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.ConfigureHttpClient(System.Action<System.Net.Http.HttpClient>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).ConfigureHttpClient(Action(Of HttpClient), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).ConfigureHttpClient(System.Action(Of System.Net.Http.HttpClient), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: ConfigureHttpClient(Action(Of HttpClient), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.ConfigureHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.ConfigureHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.ConfigureHttpClient(System.Action{System.Net.Http.HttpClient},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).ConfigureHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).ConfigureHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring
  commentId: N:Apizr.Configuring
  name: Apizr.Configuring
  nameWithType: Apizr.Configuring
  fullName: Apizr.Configuring
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient
  name: WithHttpClient
  nameWithType: ApizrManagerOptionsBuilder.WithHttpClient
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHttpClient
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  name: WithHttpClient(Func<HttpMessageHandler, Uri, HttpClient>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHttpClient(Func<HttpMessageHandler, Uri, HttpClient>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHttpClient(System.Func<System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHttpClient(Func(Of HttpMessageHandler, Uri, HttpClient))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHttpClient(System.Func(Of System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient))
  name.vb: WithHttpClient(Func(Of HttpMessageHandler, Uri, HttpClient))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
    name: WithHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
    name: WithHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient}
  commentId: T:System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient}
  parent: System
  definition: System.Func`3
  name: Func<HttpMessageHandler, Uri, HttpClient>
  nameWithType: Func<HttpMessageHandler, Uri, HttpClient>
  fullName: System.Func<System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient>
  nameWithType.vb: Func(Of HttpMessageHandler, Uri, HttpClient)
  fullName.vb: System.Func(Of System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient)
  name.vb: Func(Of HttpMessageHandler, Uri, HttpClient)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
  isExternal: true
  name: WithHttpClient(Func<HttpMessageHandler, Uri, HttpClient>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClient(Func<HttpMessageHandler, Uri, HttpClient>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClient(System.Func<System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClient(Func(Of HttpMessageHandler, Uri, HttpClient))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClient(System.Func(Of System.Net.Http.HttpMessageHandler, System.Uri, System.Net.Http.HttpClient))
  name.vb: WithHttpClient(Func(Of HttpMessageHandler, Uri, HttpClient))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
    name: WithHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHttpClient(System.Func{System.Net.Http.HttpMessageHandler,System.Uri,System.Net.Http.HttpClient})
    name: WithHttpClient
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClient
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpMessageHandler
    name: HttpMessageHandler
    nameWithType: HttpMessageHandler
    fullName: System.Net.Http.HttpMessageHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler
  name: WithAuthenticationHandler
  nameWithType: ApizrManagerOptionsBuilder.WithAuthenticationHandler
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithAuthenticationHandler
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  name: WithAuthenticationHandler<TAuthenticationHandler>(Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler))
  name.vb: WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler<TAuthenticationHandler>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler(Of TAuthenticationHandler)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}}
  commentId: T:System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0}
  parent: System
  definition: System.Func`3
  name: Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>
  nameWithType: Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>
  fullName: System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>
  nameWithType.vb: Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler)
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler)
  name.vb: Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  isExternal: true
  name: WithAuthenticationHandler<TAuthenticationHandler>(Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(Func<ILogger, IApizrManagerOptionsBase, TAuthenticationHandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler))
  name.vb: WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of ILogger, IApizrManagerOptionsBase, TAuthenticationHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler<TAuthenticationHandler>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler(Of TAuthenticationHandler)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  name: WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler(System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
  commentId: T:System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
  parent: System
  definition: System.Func`2
  name: Func<HttpRequestMessage, Task<String>>
  nameWithType: Func<HttpRequestMessage, Task<String>>
  fullName: System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>
  nameWithType.vb: Func(Of HttpRequestMessage, Task(Of String))
  fullName.vb: System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))
  name.vb: Func(Of HttpRequestMessage, Task(Of String))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  isExternal: true
  name: WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler(System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1({TSettingsService},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  name: WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TSettingsService}'
  commentId: '!:TSettingsService'
  definition: TSettingsService
  name: TSettingsService
  nameWithType: TSettingsService
  fullName: TSettingsService
- uid: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.String}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TSettingsService, String>>
  nameWithType: Expression<Func<TSettingsService, String>>
  fullName: System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>
  nameWithType.vb: Expression(Of Func(Of TSettingsService, String))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String))
  name.vb: Expression(Of Func(Of TSettingsService, String))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TSettingsService
  name: TSettingsService
  nameWithType: TSettingsService
  fullName: TSettingsService
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1({TSettingsService},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  name: WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{{TSettingsService}},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  name: WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TSettingsService}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  name: Func<TSettingsService>
  nameWithType: Func<TSettingsService>
  fullName: System.Func<TSettingsService>
  nameWithType.vb: Func(Of TSettingsService)
  fullName.vb: System.Func(Of TSettingsService)
  name.vb: Func(Of TSettingsService)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{{TSettingsService}},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  name: WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``2({TSettingsService},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},{TTokenService},System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, Expression<Func<TSettingsService, String>>, TTokenService, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, Expression<Func<TSettingsService, String>>, TTokenService, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, TTokenService, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), TTokenService, Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), TTokenService, System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), TTokenService, Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler<TSettingsService, TTokenService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler(Of TSettingsService, TTokenService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TTokenService}'
  commentId: '!:TTokenService'
  definition: TTokenService
  name: TTokenService
  nameWithType: TTokenService
  fullName: TTokenService
- uid: System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>
  nameWithType: Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>
  nameWithType.vb: Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, Expression<Func<TSettingsService, String>>, TTokenService, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, Expression<Func<TSettingsService, String>>, TTokenService, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(TSettingsService, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, TTokenService, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), TTokenService, Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), TTokenService, System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(TSettingsService, Expression(Of Func(Of TSettingsService, String)), TTokenService, Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler<TSettingsService, TTokenService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},``1,System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler(Of TSettingsService, TTokenService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TTokenService
  name: TTokenService
  nameWithType: TTokenService
  fullName: TTokenService
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``2(System.Func{{TSettingsService}},System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{{TTokenService}},System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<TTokenService>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<TTokenService>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<TTokenService>, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of TTokenService), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of TTokenService), System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of TTokenService), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler<TSettingsService, TTokenService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler(Of TSettingsService, TTokenService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TTokenService}}
  commentId: T:System.Func{`1}
  parent: System
  definition: System.Func`1
  name: Func<TTokenService>
  nameWithType: Func<TTokenService>
  fullName: System.Func<TTokenService>
  nameWithType.vb: Func(Of TTokenService)
  fullName.vb: System.Func(Of TTokenService)
  name.vb: Func(Of TTokenService)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<TTokenService>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(Func<TSettingsService>, Expression<Func<TSettingsService, String>>, Func<TTokenService>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(System.Func<TSettingsService>, System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<TTokenService>, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of TTokenService), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(System.Func(Of TSettingsService), System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of TTokenService), System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(Func(Of TSettingsService), Expression(Of Func(Of TSettingsService, String)), Func(Of TTokenService), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler<TSettingsService, TTokenService>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithAuthenticationHandler``2(System.Func{``0},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{``1},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler(Of TSettingsService, TTokenService)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler
  name: AddDelegatingHandler
  nameWithType: ApizrManagerOptionsBuilder.AddDelegatingHandler
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.AddDelegatingHandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1({THandler})
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1(``0)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
  name: AddDelegatingHandler<THandler>(THandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  name.vb: AddDelegatingHandler(Of THandler)(THandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: '{THandler}'
  commentId: '!:THandler'
  definition: THandler
  name: THandler
  nameWithType: THandler
  fullName: THandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
  name: AddDelegatingHandler<THandler>(THandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  name.vb: AddDelegatingHandler(Of THandler)(THandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: THandler
  name: THandler
  nameWithType: THandler
  fullName: THandler
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,{THandler}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  name: AddDelegatingHandler<THandler>(Func<ILogger, THandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>(Func<ILogger, THandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<Microsoft.Extensions.Logging.ILogger, THandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of ILogger, THandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of ILogger, THandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.Extensions.Logging.ILogger,{THandler}}
  commentId: T:System.Func{Microsoft.Extensions.Logging.ILogger,``0}
  parent: System
  definition: System.Func`2
  name: Func<ILogger, THandler>
  nameWithType: Func<ILogger, THandler>
  fullName: System.Func<Microsoft.Extensions.Logging.ILogger, THandler>
  nameWithType.vb: Func(Of ILogger, THandler)
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.ILogger, THandler)
  name.vb: Func(Of ILogger, THandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
  isExternal: true
  name: AddDelegatingHandler<THandler>(Func<ILogger, THandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(Func<ILogger, THandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<Microsoft.Extensions.Logging.ILogger, THandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of ILogger, THandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of ILogger, THandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  name: AddDelegatingHandler<THandler>(Func<ILogger, IApizrManagerOptionsBase, THandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>(Func<ILogger, IApizrManagerOptionsBase, THandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of ILogger, IApizrManagerOptionsBase, THandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of ILogger, IApizrManagerOptionsBase, THandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}}
  commentId: T:System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0}
  parent: System
  definition: System.Func`3
  name: Func<ILogger, IApizrManagerOptionsBase, THandler>
  nameWithType: Func<ILogger, IApizrManagerOptionsBase, THandler>
  fullName: System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>
  nameWithType.vb: Func(Of ILogger, IApizrManagerOptionsBase, THandler)
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler)
  name.vb: Func(Of ILogger, IApizrManagerOptionsBase, THandler)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  isExternal: true
  name: AddDelegatingHandler<THandler>(Func<ILogger, IApizrManagerOptionsBase, THandler>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(Func<ILogger, IApizrManagerOptionsBase, THandler>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of ILogger, IApizrManagerOptionsBase, THandler))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of Microsoft.Extensions.Logging.ILogger, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of ILogger, IApizrManagerOptionsBase, THandler))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.AddDelegatingHandler``1(System.Func{Microsoft.Extensions.Logging.ILogger,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings
  name: WithRefitSettings
  nameWithType: ApizrManagerOptionsBuilder.WithRefitSettings
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRefitSettings
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRefitSettings(Refit.RefitSettings)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRefitSettings(Refit.RefitSettings)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
  name: WithRefitSettings(RefitSettings)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRefitSettings(RefitSettings)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRefitSettings(Refit.RefitSettings)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRefitSettings(RefitSettings)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRefitSettings(Refit.RefitSettings)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit.RefitSettings
  commentId: T:Refit.RefitSettings
  parent: Refit
  isExternal: true
  name: RefitSettings
  nameWithType: RefitSettings
  fullName: Refit.RefitSettings
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
  isExternal: true
  name: WithRefitSettings(RefitSettings)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings(RefitSettings)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings(Refit.RefitSettings)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings(RefitSettings)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings(Refit.RefitSettings)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRefitSettings(System.Func{Refit.RefitSettings})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRefitSettings(System.Func{Refit.RefitSettings})
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithRefitSettings(System.Func{Refit.RefitSettings})
  name: WithRefitSettings(Func<RefitSettings>)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRefitSettings(Func<RefitSettings>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRefitSettings(System.Func<Refit.RefitSettings>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRefitSettings(Func(Of RefitSettings))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRefitSettings(System.Func(Of Refit.RefitSettings))
  name.vb: WithRefitSettings(Func(Of RefitSettings))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithRefitSettings(System.Func{Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithRefitSettings(System.Func{Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Refit.RefitSettings}
  commentId: T:System.Func{Refit.RefitSettings}
  parent: System
  definition: System.Func`1
  name: Func<RefitSettings>
  nameWithType: Func<RefitSettings>
  fullName: System.Func<Refit.RefitSettings>
  nameWithType.vb: Func(Of RefitSettings)
  fullName.vb: System.Func(Of Refit.RefitSettings)
  name.vb: Func(Of RefitSettings)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithRefitSettings(System.Func{Refit.RefitSettings})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithRefitSettings(System.Func{Refit.RefitSettings})
  isExternal: true
  name: WithRefitSettings(Func<RefitSettings>)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings(Func<RefitSettings>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings(System.Func<Refit.RefitSettings>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings(Func(Of RefitSettings))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings(System.Func(Of Refit.RefitSettings))
  name.vb: WithRefitSettings(Func(Of RefitSettings))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithRefitSettings(System.Func{Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithRefitSettings(System.Func{Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry
  name: WithPolicyRegistry
  nameWithType: ApizrManagerOptionsBuilder.WithPolicyRegistry
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithPolicyRegistry
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  name: WithPolicyRegistry(IReadOnlyPolicyRegistry<String>)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithPolicyRegistry(IReadOnlyPolicyRegistry<String>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry<System.String>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithPolicyRegistry(IReadOnlyPolicyRegistry(Of String))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry(Of System.String))
  name.vb: WithPolicyRegistry(IReadOnlyPolicyRegistry(Of String))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly.Registry.IReadOnlyPolicyRegistry{System.String}
  commentId: T:Polly.Registry.IReadOnlyPolicyRegistry{System.String}
  parent: Polly.Registry
  definition: Polly.Registry.IReadOnlyPolicyRegistry`1
  name: IReadOnlyPolicyRegistry<String>
  nameWithType: IReadOnlyPolicyRegistry<String>
  fullName: Polly.Registry.IReadOnlyPolicyRegistry<System.String>
  nameWithType.vb: IReadOnlyPolicyRegistry(Of String)
  fullName.vb: Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)
  name.vb: IReadOnlyPolicyRegistry(Of String)
  spec.csharp:
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
  isExternal: true
  name: WithPolicyRegistry(IReadOnlyPolicyRegistry<String>)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry(IReadOnlyPolicyRegistry<String>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry<System.String>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry(IReadOnlyPolicyRegistry(Of String))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry(Of System.String))
  name.vb: WithPolicyRegistry(IReadOnlyPolicyRegistry(Of String))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(Polly.Registry.IReadOnlyPolicyRegistry{System.String})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly.Registry.IReadOnlyPolicyRegistry`1
  commentId: T:Polly.Registry.IReadOnlyPolicyRegistry`1
  isExternal: true
  name: IReadOnlyPolicyRegistry<TKey>
  nameWithType: IReadOnlyPolicyRegistry<TKey>
  fullName: Polly.Registry.IReadOnlyPolicyRegistry<TKey>
  nameWithType.vb: IReadOnlyPolicyRegistry(Of TKey)
  fullName.vb: Polly.Registry.IReadOnlyPolicyRegistry(Of TKey)
  name.vb: IReadOnlyPolicyRegistry(Of TKey)
  spec.csharp:
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly.Registry
  commentId: N:Polly.Registry
  isExternal: true
  name: Polly.Registry
  nameWithType: Polly.Registry
  fullName: Polly.Registry
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  name: WithPolicyRegistry(Func<IReadOnlyPolicyRegistry<String>>)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithPolicyRegistry(Func<IReadOnlyPolicyRegistry<String>>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithPolicyRegistry(System.Func<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithPolicyRegistry(Func(Of IReadOnlyPolicyRegistry(Of String)))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithPolicyRegistry(System.Func(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)))
  name.vb: WithPolicyRegistry(Func(Of IReadOnlyPolicyRegistry(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}}
  commentId: T:System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}}
  parent: System
  definition: System.Func`1
  name: Func<IReadOnlyPolicyRegistry<String>>
  nameWithType: Func<IReadOnlyPolicyRegistry<String>>
  fullName: System.Func<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>
  nameWithType.vb: Func(Of IReadOnlyPolicyRegistry(Of String))
  fullName.vb: System.Func(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String))
  name.vb: Func(Of IReadOnlyPolicyRegistry(Of String))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
  isExternal: true
  name: WithPolicyRegistry(Func<IReadOnlyPolicyRegistry<String>>)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry(Func<IReadOnlyPolicyRegistry<String>>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry(System.Func<Polly.Registry.IReadOnlyPolicyRegistry<System.String>>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry(Func(Of IReadOnlyPolicyRegistry(Of String)))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry(System.Func(Of Polly.Registry.IReadOnlyPolicyRegistry(Of System.String)))
  name.vb: WithPolicyRegistry(Func(Of IReadOnlyPolicyRegistry(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithPolicyRegistry(System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String}})
    name: WithPolicyRegistry
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithPolicyRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Registry.IReadOnlyPolicyRegistry`1
    name: IReadOnlyPolicyRegistry
    nameWithType: IReadOnlyPolicyRegistry
    fullName: Polly.Registry.IReadOnlyPolicyRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler
  name: WithConnectivityHandler
  nameWithType: ApizrManagerOptionsBuilder.WithConnectivityHandler
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithConnectivityHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.Boolean})
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.Boolean})
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
  name: WithConnectivityHandler(Func<Boolean>)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithConnectivityHandler(Func<Boolean>)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithConnectivityHandler(System.Func<System.Boolean>)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithConnectivityHandler(Func(Of Boolean))
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithConnectivityHandler(System.Func(Of System.Boolean))
  name.vb: WithConnectivityHandler(Func(Of Boolean))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
  isExternal: true
  name: WithConnectivityHandler(Func<Boolean>)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(Func<Boolean>)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(System.Func<System.Boolean>)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(Func(Of Boolean))
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(System.Func(Of System.Boolean))
  name.vb: WithConnectivityHandler(Func(Of Boolean))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  name: WithConnectivityHandler(IConnectivityHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithConnectivityHandler(IConnectivityHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithConnectivityHandler(IConnectivityHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Connecting.IConnectivityHandler
  commentId: T:Apizr.Connecting.IConnectivityHandler
  parent: Apizr.Connecting
  name: IConnectivityHandler
  nameWithType: IConnectivityHandler
  fullName: Apizr.Connecting.IConnectivityHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  name: WithConnectivityHandler(IConnectivityHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(IConnectivityHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(IConnectivityHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Connecting
  commentId: N:Apizr.Connecting
  name: Apizr.Connecting
  nameWithType: Apizr.Connecting
  fullName: Apizr.Connecting
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  name: WithConnectivityHandler(Func<IConnectivityHandler>)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithConnectivityHandler(Func<IConnectivityHandler>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithConnectivityHandler(System.Func<Apizr.Connecting.IConnectivityHandler>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithConnectivityHandler(Func(Of IConnectivityHandler))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithConnectivityHandler(System.Func(Of Apizr.Connecting.IConnectivityHandler))
  name.vb: WithConnectivityHandler(Func(Of IConnectivityHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Apizr.Connecting.IConnectivityHandler}
  commentId: T:System.Func{Apizr.Connecting.IConnectivityHandler}
  parent: System
  definition: System.Func`1
  name: Func<IConnectivityHandler>
  nameWithType: Func<IConnectivityHandler>
  fullName: System.Func<Apizr.Connecting.IConnectivityHandler>
  nameWithType.vb: Func(Of IConnectivityHandler)
  fullName.vb: System.Func(Of Apizr.Connecting.IConnectivityHandler)
  name.vb: Func(Of IConnectivityHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
  isExternal: true
  name: WithConnectivityHandler(Func<IConnectivityHandler>)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(Func<IConnectivityHandler>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(System.Func<Apizr.Connecting.IConnectivityHandler>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(Func(Of IConnectivityHandler))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(System.Func(Of Apizr.Connecting.IConnectivityHandler))
  name.vb: WithConnectivityHandler(Func(Of IConnectivityHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler
  name: WithCacheHandler
  nameWithType: ApizrManagerOptionsBuilder.WithCacheHandler
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithCacheHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithCacheHandler(Apizr.Caching.ICacheHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithCacheHandler(Apizr.Caching.ICacheHandler)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
  name: WithCacheHandler(ICacheHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithCacheHandler(ICacheHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithCacheHandler(Apizr.Caching.ICacheHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithCacheHandler(ICacheHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithCacheHandler(Apizr.Caching.ICacheHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Caching.ICacheHandler
  commentId: T:Apizr.Caching.ICacheHandler
  parent: Apizr.Caching
  name: ICacheHandler
  nameWithType: ICacheHandler
  fullName: Apizr.Caching.ICacheHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
  name: WithCacheHandler(ICacheHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler(ICacheHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler(Apizr.Caching.ICacheHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler(ICacheHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler(Apizr.Caching.ICacheHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Caching
  commentId: N:Apizr.Caching
  name: Apizr.Caching
  nameWithType: Apizr.Caching
  fullName: Apizr.Caching
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  name: WithCacheHandler(Func<ICacheHandler>)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithCacheHandler(Func<ICacheHandler>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithCacheHandler(System.Func<Apizr.Caching.ICacheHandler>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithCacheHandler(Func(Of ICacheHandler))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithCacheHandler(System.Func(Of Apizr.Caching.ICacheHandler))
  name.vb: WithCacheHandler(Func(Of ICacheHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Apizr.Caching.ICacheHandler}
  commentId: T:System.Func{Apizr.Caching.ICacheHandler}
  parent: System
  definition: System.Func`1
  name: Func<ICacheHandler>
  nameWithType: Func<ICacheHandler>
  fullName: System.Func<Apizr.Caching.ICacheHandler>
  nameWithType.vb: Func(Of ICacheHandler)
  fullName.vb: System.Func(Of Apizr.Caching.ICacheHandler)
  name.vb: Func(Of ICacheHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
  isExternal: true
  name: WithCacheHandler(Func<ICacheHandler>)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler(Func<ICacheHandler>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler(System.Func<Apizr.Caching.ICacheHandler>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler(Func(Of ICacheHandler))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler(System.Func(Of Apizr.Caching.ICacheHandler))
  name.vb: WithCacheHandler(Func(Of ICacheHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithCacheHandler(System.Func{Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext
  name: WithContext
  nameWithType: ApizrManagerOptionsBuilder.WithContext
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithContext
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  name: WithContext(Func<Context>, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithContext(Func<Context>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithContext(System.Func<Polly.Context>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithContext(Func(Of Context), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithContext(System.Func(Of Polly.Context), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithContext(Func(Of Context), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Polly.Context}
  commentId: T:System.Func{Polly.Context}
  parent: System
  definition: System.Func`1
  name: Func<Context>
  nameWithType: Func<Context>
  fullName: System.Func<Polly.Context>
  nameWithType.vb: Func(Of Context)
  fullName.vb: System.Func(Of Polly.Context)
  name.vb: Func(Of Context)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: WithContext(Func<Context>, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext(Func<Context>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext(System.Func<Polly.Context>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext(Func(Of Context), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext(System.Func(Of Polly.Context), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithContext(Func(Of Context), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching
  name: WithExCatching
  nameWithType: ApizrManagerOptionsBuilder.WithExCatching
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithExCatching
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  name: WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithExCatching(System.Action<Apizr.ApizrException>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithExCatching(System.Action(Of Apizr.ApizrException), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.ApizrException}
  commentId: T:System.Action{Apizr.ApizrException}
  parent: System
  definition: System.Action`1
  name: Action<ApizrException>
  nameWithType: Action<ApizrException>
  fullName: System.Action<Apizr.ApizrException>
  nameWithType.vb: Action(Of ApizrException)
  fullName.vb: System.Action(Of Apizr.ApizrException)
  name.vb: Action(Of ApizrException)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching(System.Action<Apizr.ApizrException>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(System.Action(Of Apizr.ApizrException), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithExCatching``1(System.Action{Apizr.ApizrException{{TResult}}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  name: WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithExCatching<TResult>(System.Action<Apizr.ApizrException<TResult>>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithExCatching(Of TResult)(System.Action(Of Apizr.ApizrException(Of TResult)), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching<TResult>
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithExCatching<TResult>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithExCatching<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching(Of TResult)
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithExCatching(Of TResult)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithExCatching(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.ApizrException{{TResult}}}
  commentId: T:System.Action{Apizr.ApizrException{``0}}
  parent: System
  definition: System.Action`1
  name: Action<ApizrException<TResult>>
  nameWithType: Action<ApizrException<TResult>>
  fullName: System.Action<Apizr.ApizrException<TResult>>
  nameWithType.vb: Action(Of ApizrException(Of TResult))
  fullName.vb: System.Action(Of Apizr.ApizrException(Of TResult))
  name.vb: Action(Of ApizrException(Of TResult))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>(System.Action<Apizr.ApizrException<TResult>>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)(System.Action(Of Apizr.ApizrException(Of TResult)), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching<TResult>
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching(Of TResult)
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter
  name: WithHandlerParameter
  nameWithType: ApizrManagerOptionsBuilder.WithHandlerParameter
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHandlerParameter
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHandlerParameter(System.String,System.Object)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHandlerParameter(System.String,System.Object)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
  name: WithHandlerParameter(String, Object)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHandlerParameter(String, Object)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHandlerParameter(System.String, System.Object)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHandlerParameter(String, Object)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHandlerParameter(System.String, System.Object)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
  isExternal: true
  name: WithHandlerParameter(String, Object)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter(String, Object)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter(System.String, System.Object)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter(String, Object)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter(System.String, System.Object)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging
  name: WithLogging
  nameWithType: ApizrManagerOptionsBuilder.WithLogging
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLogging
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  name: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())
  name.vb: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Logging.HttpTracerMode
  commentId: T:Apizr.Logging.HttpTracerMode
  parent: Apizr.Logging
  name: HttpTracerMode
  nameWithType: HttpTracerMode
  fullName: Apizr.Logging.HttpTracerMode
- uid: Apizr.Logging.HttpMessageParts
  commentId: T:Apizr.Logging.HttpMessageParts
  parent: Apizr.Logging
  name: HttpMessageParts
  nameWithType: HttpMessageParts
  fullName: Apizr.Logging.HttpMessageParts
- uid: Microsoft.Extensions.Logging.LogLevel[]
  isExternal: true
  name: LogLevel[]
  nameWithType: LogLevel[]
  fullName: Microsoft.Extensions.Logging.LogLevel[]
  nameWithType.vb: LogLevel()
  fullName.vb: Microsoft.Extensions.Logging.LogLevel()
  name.vb: LogLevel()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  isExternal: true
  name: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())
  name.vb: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Logging
  commentId: N:Apizr.Logging
  name: Apizr.Logging
  nameWithType: Apizr.Logging
  fullName: Apizr.Logging
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  name: WithLogging(Func<HttpTracerMode>, Func<HttpMessageParts>, Func<LogLevel[]>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLogging(Func<HttpTracerMode>, Func<HttpMessageParts>, Func<LogLevel[]>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLogging(System.Func<Apizr.Logging.HttpTracerMode>, System.Func<Apizr.Logging.HttpMessageParts>, System.Func<Microsoft.Extensions.Logging.LogLevel[]>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLogging(Func(Of HttpTracerMode), Func(Of HttpMessageParts), Func(Of LogLevel()))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLogging(System.Func(Of Apizr.Logging.HttpTracerMode), System.Func(Of Apizr.Logging.HttpMessageParts), System.Func(Of Microsoft.Extensions.Logging.LogLevel()))
  name.vb: WithLogging(Func(Of HttpTracerMode), Func(Of HttpMessageParts), Func(Of LogLevel()))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Apizr.Logging.HttpTracerMode}
  commentId: T:System.Func{Apizr.Logging.HttpTracerMode}
  parent: System
  definition: System.Func`1
  name: Func<HttpTracerMode>
  nameWithType: Func<HttpTracerMode>
  fullName: System.Func<Apizr.Logging.HttpTracerMode>
  nameWithType.vb: Func(Of HttpTracerMode)
  fullName.vb: System.Func(Of Apizr.Logging.HttpTracerMode)
  name.vb: Func(Of HttpTracerMode)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Apizr.Logging.HttpMessageParts}
  commentId: T:System.Func{Apizr.Logging.HttpMessageParts}
  parent: System
  definition: System.Func`1
  name: Func<HttpMessageParts>
  nameWithType: Func<HttpMessageParts>
  fullName: System.Func<Apizr.Logging.HttpMessageParts>
  nameWithType.vb: Func(Of HttpMessageParts)
  fullName.vb: System.Func(Of Apizr.Logging.HttpMessageParts)
  name.vb: Func(Of HttpMessageParts)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.Extensions.Logging.LogLevel[]}
  commentId: T:System.Func{Microsoft.Extensions.Logging.LogLevel[]}
  parent: System
  definition: System.Func`1
  name: Func<LogLevel[]>
  nameWithType: Func<LogLevel[]>
  fullName: System.Func<Microsoft.Extensions.Logging.LogLevel[]>
  nameWithType.vb: Func(Of LogLevel())
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.LogLevel())
  name.vb: Func(Of LogLevel())
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
  isExternal: true
  name: WithLogging(Func<HttpTracerMode>, Func<HttpMessageParts>, Func<LogLevel[]>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging(Func<HttpTracerMode>, Func<HttpMessageParts>, Func<LogLevel[]>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging(System.Func<Apizr.Logging.HttpTracerMode>, System.Func<Apizr.Logging.HttpMessageParts>, System.Func<Microsoft.Extensions.Logging.LogLevel[]>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(Func(Of HttpTracerMode), Func(Of HttpMessageParts), Func(Of LogLevel()))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(System.Func(Of Apizr.Logging.HttpTracerMode), System.Func(Of Apizr.Logging.HttpMessageParts), System.Func(Of Microsoft.Extensions.Logging.LogLevel()))
  name.vb: WithLogging(Func(Of HttpTracerMode), Func(Of HttpMessageParts), Func(Of LogLevel()))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{Apizr.Logging.HttpTracerMode},System.Func{Apizr.Logging.HttpMessageParts},System.Func{Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  name: WithLogging(Func<(T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLogging(Func<(T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLogging(System.Func<System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLogging(Func(Of (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLogging(System.Func(Of System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())))
  name.vb: WithLogging(Func(Of (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}}
  commentId: T:System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}}
  parent: System
  definition: System.Func`1
  name: Func<(T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>
  nameWithType: Func<(T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>
  fullName: System.Func<System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>
  nameWithType.vb: Func(Of (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel()))
  fullName.vb: System.Func(Of System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel()))
  name.vb: Func(Of (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel()))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  isExternal: true
  name: WithLogging(Func<(T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging(Func<(T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging(System.Func<System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(Func(Of (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(System.Func(Of System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())))
  name.vb: WithLogging(Func(Of (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithLogging(System.Func{System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders
  name: WithHeaders
  nameWithType: ApizrManagerOptionsBuilder.WithHeaders
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithHeaders
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHeaders(System.String[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHeaders(System.String[])
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
  name: WithHeaders(String[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHeaders(String[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHeaders(System.String[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHeaders(String())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHeaders(System.String())
  name.vb: WithHeaders(String())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
  isExternal: true
  name: WithHeaders(String[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders(String[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders(System.String[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders(String())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders(System.String())
  name.vb: WithHeaders(String())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  name: WithHeaders(Func<IList<String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHeaders(Func<IList<String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHeaders(System.Func<System.Collections.Generic.IList<System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHeaders(Func(Of IList(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHeaders(System.Func(Of System.Collections.Generic.IList(Of System.String)))
  name.vb: WithHeaders(Func(Of IList(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Collections.Generic.IList{System.String}}
  commentId: T:System.Func{System.Collections.Generic.IList{System.String}}
  parent: System
  definition: System.Func`1
  name: Func<IList<String>>
  nameWithType: Func<IList<String>>
  fullName: System.Func<System.Collections.Generic.IList<System.String>>
  nameWithType.vb: Func(Of IList(Of String))
  fullName.vb: System.Func(Of System.Collections.Generic.IList(Of System.String))
  name.vb: Func(Of IList(Of String))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
  isExternal: true
  name: WithHeaders(Func<IList<String>>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHeaders(Func<IList<String>>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHeaders(System.Func<System.Collections.Generic.IList<System.String>>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders(Func(Of IList(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders(System.Func(Of System.Collections.Generic.IList(Of System.String)))
  name.vb: WithHeaders(Func(Of IList(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithHeaders(System.Func{System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout
  name: WithOperationTimeout
  nameWithType: ApizrManagerOptionsBuilder.WithOperationTimeout
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithOperationTimeout
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithOperationTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithOperationTimeout(System.TimeSpan)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
  name: WithOperationTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithOperationTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithOperationTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithOperationTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithOperationTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
  isExternal: true
  name: WithOperationTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithOperationTimeout(System.Func{System.TimeSpan})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithOperationTimeout(System.Func{System.TimeSpan})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithOperationTimeout(System.Func{System.TimeSpan})
  name: WithOperationTimeout(Func<TimeSpan>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithOperationTimeout(Func<TimeSpan>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithOperationTimeout(System.Func<System.TimeSpan>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithOperationTimeout(Func(Of TimeSpan))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithOperationTimeout(System.Func(Of System.TimeSpan))
  name.vb: WithOperationTimeout(Func(Of TimeSpan))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithOperationTimeout(System.Func{System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithOperationTimeout(System.Func{System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.TimeSpan}
  commentId: T:System.Func{System.TimeSpan}
  parent: System
  definition: System.Func`1
  name: Func<TimeSpan>
  nameWithType: Func<TimeSpan>
  fullName: System.Func<System.TimeSpan>
  nameWithType.vb: Func(Of TimeSpan)
  fullName.vb: System.Func(Of System.TimeSpan)
  name.vb: Func(Of TimeSpan)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithOperationTimeout(System.Func{System.TimeSpan})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithOperationTimeout(System.Func{System.TimeSpan})
  isExternal: true
  name: WithOperationTimeout(Func<TimeSpan>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout(Func<TimeSpan>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout(System.Func<System.TimeSpan>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout(Func(Of TimeSpan))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout(System.Func(Of System.TimeSpan))
  name.vb: WithOperationTimeout(Func(Of TimeSpan))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithOperationTimeout(System.Func{System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithOperationTimeout(System.Func{System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout
  name: WithRequestTimeout
  nameWithType: ApizrManagerOptionsBuilder.WithRequestTimeout
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithRequestTimeout
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRequestTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRequestTimeout(System.TimeSpan)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
  name: WithRequestTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRequestTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRequestTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRequestTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRequestTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
  isExternal: true
  name: WithRequestTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRequestTimeout(System.Func{System.TimeSpan})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithRequestTimeout(System.Func{System.TimeSpan})
  parent: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithRequestTimeout(System.Func{System.TimeSpan})
  name: WithRequestTimeout(Func<TimeSpan>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRequestTimeout(Func<TimeSpan>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRequestTimeout(System.Func<System.TimeSpan>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRequestTimeout(Func(Of TimeSpan))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRequestTimeout(System.Func(Of System.TimeSpan))
  name.vb: WithRequestTimeout(Func(Of TimeSpan))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithRequestTimeout(System.Func{System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithRequestTimeout(System.Func{System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithRequestTimeout(System.Func{System.TimeSpan})
  commentId: M:Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithRequestTimeout(System.Func{System.TimeSpan})
  isExternal: true
  name: WithRequestTimeout(Func<TimeSpan>)
  nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout(Func<TimeSpan>)
  fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout(System.Func<System.TimeSpan>)
  nameWithType.vb: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout(Func(Of TimeSpan))
  fullName.vb: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout(System.Func(Of System.TimeSpan))
  name.vb: WithRequestTimeout(Func(Of TimeSpan))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithRequestTimeout(System.Func{System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder`2.WithRequestTimeout(System.Func{System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrSharedRegistrationOptionsBuilder(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory
  name: WithLoggerFactory
  nameWithType: ApizrManagerOptionsBuilder.WithLoggerFactory
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithLoggerFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  name: WithLoggerFactory(ILoggerFactory)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLoggerFactory(ILoggerFactory)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLoggerFactory(ILoggerFactory)
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: true
  name: WithLoggerFactory(ILoggerFactory)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory(ILoggerFactory)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory(ILoggerFactory)
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  name: WithLoggerFactory(Func<ILoggerFactory>)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLoggerFactory(Func<ILoggerFactory>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLoggerFactory(System.Func<Microsoft.Extensions.Logging.ILoggerFactory>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLoggerFactory(Func(Of ILoggerFactory))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLoggerFactory(System.Func(Of Microsoft.Extensions.Logging.ILoggerFactory))
  name.vb: WithLoggerFactory(Func(Of ILoggerFactory))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.Extensions.Logging.ILoggerFactory}
  commentId: T:System.Func{Microsoft.Extensions.Logging.ILoggerFactory}
  parent: System
  definition: System.Func`1
  name: Func<ILoggerFactory>
  nameWithType: Func<ILoggerFactory>
  fullName: System.Func<Microsoft.Extensions.Logging.ILoggerFactory>
  nameWithType.vb: Func(Of ILoggerFactory)
  fullName.vb: System.Func(Of Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: Func(Of ILoggerFactory)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
  isExternal: true
  name: WithLoggerFactory(Func<ILoggerFactory>)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory(Func<ILoggerFactory>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory(System.Func<Microsoft.Extensions.Logging.ILoggerFactory>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory(Func(Of ILoggerFactory))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory(System.Func(Of Microsoft.Extensions.Logging.ILoggerFactory))
  name.vb: WithLoggerFactory(Func(Of ILoggerFactory))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithLoggerFactory(System.Func{Microsoft.Extensions.Logging.ILoggerFactory})
    name: WithLoggerFactory
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler*
  commentId: Overload:Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler
  name: WithMappingHandler
  nameWithType: ApizrManagerOptionsBuilder.WithMappingHandler
  fullName: Apizr.Configuring.Manager.ApizrManagerOptionsBuilder.WithMappingHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  name: WithMappingHandler(IMappingHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithMappingHandler(IMappingHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithMappingHandler(IMappingHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithMappingHandler(Apizr.Mapping.IMappingHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mapping.IMappingHandler
  commentId: T:Apizr.Mapping.IMappingHandler
  parent: Apizr.Mapping
  name: IMappingHandler
  nameWithType: IMappingHandler
  fullName: Apizr.Mapping.IMappingHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  name: WithMappingHandler(IMappingHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler(IMappingHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler(IMappingHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler(Apizr.Mapping.IMappingHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mapping
  commentId: N:Apizr.Mapping
  name: Apizr.Mapping
  nameWithType: Apizr.Mapping
  fullName: Apizr.Mapping
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBuilder{Apizr.Configuring.Manager.IApizrManagerOptions,Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  name: WithMappingHandler(Func<IMappingHandler>)
  nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithMappingHandler(Func<IMappingHandler>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithMappingHandler(System.Func<Apizr.Mapping.IMappingHandler>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithMappingHandler(Func(Of IMappingHandler))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithMappingHandler(System.Func(Of Apizr.Mapping.IMappingHandler))
  name.vb: WithMappingHandler(Func(Of IMappingHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrCommonOptionsBuilder<IApizrManagerOptions, IApizrManagerOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrCommonOptionsBuilder(Of IApizrManagerOptions, IApizrManagerOptionsBuilder).WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of Apizr.Configuring.Manager.IApizrManagerOptions, Apizr.Configuring.Manager.IApizrManagerOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Apizr.Mapping.IMappingHandler}
  commentId: T:System.Func{Apizr.Mapping.IMappingHandler}
  parent: System
  definition: System.Func`1
  name: Func<IMappingHandler>
  nameWithType: Func<IMappingHandler>
  fullName: System.Func<Apizr.Mapping.IMappingHandler>
  nameWithType.vb: Func(Of IMappingHandler)
  fullName.vb: System.Func(Of Apizr.Mapping.IMappingHandler)
  name.vb: Func(Of IMappingHandler)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  commentId: M:Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
  isExternal: true
  name: WithMappingHandler(Func<IMappingHandler>)
  nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler(Func<IMappingHandler>)
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler(System.Func<Apizr.Mapping.IMappingHandler>)
  nameWithType.vb: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler(Func(Of IMappingHandler))
  fullName.vb: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler(System.Func(Of Apizr.Mapping.IMappingHandler))
  name.vb: WithMappingHandler(Func(Of IMappingHandler))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder`2.WithMappingHandler(System.Func{Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
