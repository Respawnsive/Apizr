### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Registry.ApizrRegistryBase
  commentId: T:Apizr.Configuring.Registry.ApizrRegistryBase
  id: ApizrRegistryBase
  parent: Apizr.Configuring.Registry
  children:
  - Apizr.Configuring.Registry.ApizrRegistryBase.#ctor
  - Apizr.Configuring.Registry.ApizrRegistryBase.ConcurrentRegistry
  - Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``1
  - Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``2
  - Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``3
  - Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``4
  - Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor``1
  - Apizr.Configuring.Registry.ApizrRegistryBase.Count
  - Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``1
  - Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``2
  - Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``3
  - Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``4
  - Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator
  - Apizr.Configuring.Registry.ApizrRegistryBase.GetFor``1
  - Apizr.Configuring.Registry.ApizrRegistryBase.System#Collections#IEnumerable#GetEnumerator
  - Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  - Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  - Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  - Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  - Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor``1(Apizr.IApizrManager{``0}@)
  langs:
  - csharp
  - vb
  name: ApizrRegistryBase
  nameWithType: ApizrRegistryBase
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase
  type: Class
  source:
    id: ApizrRegistryBase
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 8
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: 'public abstract class ApizrRegistryBase : IApizrEnumerableRegistry, IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>, IEnumerable, IApizrEnumerableRegistryBase'
    content.vb: >-
      Public MustInherit Class ApizrRegistryBase

          Implements IApizrEnumerableRegistry, IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager))), IEnumerable, IApizrEnumerableRegistryBase
  inheritance:
  - System.Object
  derivedClasses:
  - Apizr.Configuring.Registry.ApizrRegistry
  - Apizr.Extending.Configuring.Registry.ApizrExtendedRegistry
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  - System.Collections.IEnumerable
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ConcurrentRegistry
  commentId: F:Apizr.Configuring.Registry.ApizrRegistryBase.ConcurrentRegistry
  id: ConcurrentRegistry
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: ConcurrentRegistry
  nameWithType: ApizrRegistryBase.ConcurrentRegistry
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ConcurrentRegistry
  type: Field
  source:
    id: ConcurrentRegistry
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 10
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: protected readonly IDictionary<Type, Func<IApizrManager>> ConcurrentRegistry
    return:
      type: System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.IApizrManager}}
    content.vb: Protected ReadOnly ConcurrentRegistry As IDictionary(Of Type, Func(Of IApizrManager))
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.#ctor
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.#ctor
  id: '#ctor'
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: ApizrRegistryBase()
  nameWithType: ApizrRegistryBase.ApizrRegistryBase()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ApizrRegistryBase()
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 12
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: protected ApizrRegistryBase()
    content.vb: Protected Sub New
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator
  id: GetEnumerator
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ApizrRegistryBase.GetEnumerator()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 17
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: public IEnumerator<KeyValuePair<Type, Func<IApizrManager>>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ApizrRegistryBase.IEnumerable.GetEnumerator()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    id: System.Collections.IEnumerable.GetEnumerator
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 19
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ApizrRegistryBase.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``1
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``1
  id: GetCrudFor``1
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudFor<T>()
  nameWithType: ApizrRegistryBase.GetCrudFor<T>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor<T>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 21
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, int, IEnumerable<T>, IDictionary<string, object>>> GetCrudFor<T>()

          where T : class
    typeParameters:
    - id: T
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    content.vb: Public Function GetCrudFor(Of T As Class) As IApizrManager(Of ICrudApi(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``1
  nameWithType.vb: ApizrRegistryBase.GetCrudFor(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor(Of T)()
  name.vb: GetCrudFor(Of T)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``2
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``2
  id: GetCrudFor``2
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudFor<T, TKey>()
  nameWithType: ApizrRegistryBase.GetCrudFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor<T, TKey>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 24
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<string, object>>> GetCrudFor<T, TKey>()

          where T : class
    typeParameters:
    - id: T
    - id: TKey
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    content.vb: Public Function GetCrudFor(Of T As Class, TKey) As IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``2
  nameWithType.vb: ApizrRegistryBase.GetCrudFor(Of T, TKey)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor(Of T, TKey)()
  name.vb: GetCrudFor(Of T, TKey)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``3
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``3
  id: GetCrudFor``3
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudFor<T, TKey, TReadAllResult>()
  nameWithType: ApizrRegistryBase.GetCrudFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 28
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<string, object>>> GetCrudFor<T, TKey, TReadAllResult>()

          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    content.vb: Public Function GetCrudFor(Of T As Class, TKey, TReadAllResult) As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``3
  nameWithType.vb: ApizrRegistryBase.GetCrudFor(Of T, TKey, TReadAllResult)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``4
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor``4
  id: GetCrudFor``4
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: ApizrRegistryBase.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 32
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>> GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()

          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
    content.vb: Public Function GetCrudFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``4
  nameWithType.vb: ApizrRegistryBase.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetFor``1
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.GetFor``1
  id: GetFor``1
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: GetFor<TWebApi>()
  nameWithType: ApizrRegistryBase.GetFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetFor<TWebApi>()
  type: Method
  source:
    id: GetFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 36
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: public IApizrManager<TWebApi> GetFor<TWebApi>()
    typeParameters:
    - id: TWebApi
    return:
      type: Apizr.IApizrManager{{TWebApi}}
    content.vb: Public Function GetFor(Of TWebApi) As IApizrManager(Of TWebApi)
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.GetFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor``1
  nameWithType.vb: ApizrRegistryBase.GetFor(Of TWebApi)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.GetFor(Of TWebApi)()
  name.vb: GetFor(Of TWebApi)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  id: TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T>(out IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: ApizrRegistryBase.TryGetCrudFor<T>(out IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor<T>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 39
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudFor<T>(out IApizrManager<ICrudApi<T, int, IEnumerable<T>, IDictionary<string, object>>> manager)

          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudFor(Of T As Class)(ByRef manager As IApizrManager(Of ICrudApi(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  nameWithType.vb: ApizrRegistryBase.TryGetCrudFor(Of T)(ByRef IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor(Of T)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T)(ByRef IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  id: TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T, TKey>(out IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: ApizrRegistryBase.TryGetCrudFor<T, TKey>(out IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor<T, TKey>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 42
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudFor<T, TKey>(out IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<string, object>>> manager)

          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    typeParameters:
    - id: T
    - id: TKey
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudFor(Of T As Class, TKey)(ByRef manager As IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  nameWithType.vb: ApizrRegistryBase.TryGetCrudFor(Of T, TKey)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor(Of T, TKey)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T, TKey)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  id: TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T, TKey, TReadAllResult>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  nameWithType: ApizrRegistryBase.TryGetCrudFor<T, TKey, TReadAllResult>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor<T, TKey, TReadAllResult>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 46
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudFor<T, TKey, TReadAllResult>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<string, object>>> manager)

          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudFor(Of T As Class, TKey, TReadAllResult)(ByRef manager As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  nameWithType.vb: ApizrRegistryBase.TryGetCrudFor(Of T, TKey, TReadAllResult)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor(Of T, TKey, TReadAllResult)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  id: TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  nameWithType: ApizrRegistryBase.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 49
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>> manager)

          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)(ByRef manager As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}@)
  nameWithType.vb: ApizrRegistryBase.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor``1(Apizr.IApizrManager{``0}@)
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor``1(Apizr.IApizrManager{``0}@)
  id: TryGetFor``1(Apizr.IApizrManager{``0}@)
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetFor<TWebApi>(out IApizrManager<TWebApi>)
  nameWithType: ApizrRegistryBase.TryGetFor<TWebApi>(out IApizrManager<TWebApi>)
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor<TWebApi>(out Apizr.IApizrManager<TWebApi>)
  type: Method
  source:
    id: TryGetFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 52
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: public bool TryGetFor<TWebApi>(out IApizrManager<TWebApi> manager)
    parameters:
    - id: manager
      type: Apizr.IApizrManager{{TWebApi}}
    typeParameters:
    - id: TWebApi
    return:
      type: System.Boolean
    content.vb: Public Function TryGetFor(Of TWebApi)(ByRef manager As IApizrManager(Of TWebApi)) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{{TWebApi}}@)
  nameWithType.vb: ApizrRegistryBase.TryGetFor(Of TWebApi)(ByRef IApizrManager(Of TWebApi))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor(Of TWebApi)(ByRef Apizr.IApizrManager(Of TWebApi))
  name.vb: TryGetFor(Of TWebApi)(ByRef IApizrManager(Of TWebApi))
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.Count
  commentId: P:Apizr.Configuring.Registry.ApizrRegistryBase.Count
  id: Count
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ApizrRegistryBase.Count
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.Count
  type: Property
  source:
    id: Count
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 64
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.Count*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``1
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``1
  id: ContainsCrudFor``1
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T>()
  nameWithType: ApizrRegistryBase.ContainsCrudFor<T>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor<T>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 66
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudFor<T>()

          where T : class
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudFor(Of T As Class) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  nameWithType.vb: ApizrRegistryBase.ContainsCrudFor(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor(Of T)()
  name.vb: ContainsCrudFor(Of T)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``2
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``2
  id: ContainsCrudFor``2
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T, TKey>()
  nameWithType: ApizrRegistryBase.ContainsCrudFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor<T, TKey>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 69
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudFor<T, TKey>()

          where T : class
    typeParameters:
    - id: T
    - id: TKey
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudFor(Of T As Class, TKey) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  nameWithType.vb: ApizrRegistryBase.ContainsCrudFor(Of T, TKey)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor(Of T, TKey)()
  name.vb: ContainsCrudFor(Of T, TKey)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``3
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``3
  id: ContainsCrudFor``3
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T, TKey, TReadAllResult>()
  nameWithType: ApizrRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 72
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudFor<T, TKey, TReadAllResult>()

          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudFor(Of T As Class, TKey, TReadAllResult) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  nameWithType.vb: ApizrRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``4
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor``4
  id: ContainsCrudFor``4
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: ApizrRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 75
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()

          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  nameWithType.vb: ApizrRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor``1
  commentId: M:Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor``1
  id: ContainsFor``1
  parent: Apizr.Configuring.Registry.ApizrRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsFor<TWebApi>()
  nameWithType: ApizrRegistryBase.ContainsFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor<TWebApi>()
  type: Method
  source:
    id: ContainsFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\ApizrRegistryBase.cs
    startLine: 78
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: public bool ContainsFor<TWebApi>()
    typeParameters:
    - id: TWebApi
    return:
      type: System.Boolean
    content.vb: Public Function ContainsFor(Of TWebApi) As Boolean
  overload: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor*
  implements:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  nameWithType.vb: ApizrRegistryBase.ContainsFor(Of TWebApi)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor(Of TWebApi)()
  name.vb: ContainsFor(Of TWebApi)()
references:
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistry
  parent: Apizr.Configuring.Registry
  name: IApizrEnumerableRegistry
  nameWithType: IApizrEnumerableRegistry
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.IApizrManager>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.IApizrManager)))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  parent: Apizr.Configuring.Registry
  name: IApizrEnumerableRegistryBase
  nameWithType: IApizrEnumerableRegistryBase
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.IApizrManager}}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.IApizrManager}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, Func<IApizrManager>>
  nameWithType: IDictionary<Type, Func<IApizrManager>>
  fullName: System.Collections.Generic.IDictionary<System.Type, System.Func<Apizr.IApizrManager>>
  nameWithType.vb: IDictionary(Of Type, Func(Of IApizrManager))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, System.Func(Of Apizr.IApizrManager))
  name.vb: IDictionary(Of Type, Func(Of IApizrManager))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.#ctor*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.#ctor
  name: ApizrRegistryBase
  nameWithType: ApizrRegistryBase.ApizrRegistryBase
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ApizrRegistryBase
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator
  name: GetEnumerator
  nameWithType: ApizrRegistryBase.GetEnumerator
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.IApizrManager>>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager))).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.IApizrManager))).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.IApizrManager>>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager))).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.IApizrManager))).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<Type, Func<IApizrManager>>>
  nameWithType: IEnumerator<KeyValuePair<Type, Func<IApizrManager>>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.IApizrManager>>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.IApizrManager)))
  name.vb: IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ApizrRegistryBase.IEnumerable.GetEnumerator
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ApizrRegistryBase.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor
  name: GetCrudFor
  nameWithType: ApizrRegistryBase.GetCrudFor
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetCrudFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  name: GetCrudFor<T>()
  nameWithType: IApizrEnumerableRegistry.GetCrudFor<T>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T>()
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudFor(Of T)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T)()
  name.vb: GetCrudFor(Of T)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``1
    name: GetCrudFor<T>
    nameWithType: IApizrEnumerableRegistry.GetCrudFor<T>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``1
    name: GetCrudFor(Of T)
    nameWithType: IApizrEnumerableRegistry.GetCrudFor(Of T)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``2
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``2
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  name: GetCrudFor<T, TKey>()
  nameWithType: IApizrEnumerableRegistry.GetCrudFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T, TKey>()
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudFor(Of T, TKey)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T, TKey)()
  name.vb: GetCrudFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``2
    name: GetCrudFor<T, TKey>
    nameWithType: IApizrEnumerableRegistry.GetCrudFor<T, TKey>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``2
    name: GetCrudFor(Of T, TKey)
    nameWithType: IApizrEnumerableRegistry.GetCrudFor(Of T, TKey)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``3
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``3
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  name: GetCrudFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``3
    name: GetCrudFor<T, TKey, TReadAllResult>
    nameWithType: IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``3
    name: GetCrudFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``4
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``4
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  name: GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``4
    name: GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor``4
    name: GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.GetFor*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.GetFor
  name: GetFor
  nameWithType: ApizrRegistryBase.GetFor
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.GetFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  name: GetFor<TWebApi>()
  nameWithType: IApizrEnumerableRegistry.GetFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor<TWebApi>()
  nameWithType.vb: IApizrEnumerableRegistry.GetFor(Of TWebApi)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor(Of TWebApi)()
  name.vb: GetFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor``1
    name: GetFor<TWebApi>
    nameWithType: IApizrEnumerableRegistry.GetFor<TWebApi>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor``1
    name: GetFor(Of TWebApi)
    nameWithType: IApizrEnumerableRegistry.GetFor(Of TWebApi)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{{TWebApi}}
  commentId: T:Apizr.IApizrManager{``0}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor
  name: TryGetCrudFor
  nameWithType: ApizrRegistryBase.TryGetCrudFor
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetCrudFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  definition: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  name: TryGetCrudFor<T>(IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T>(IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T)(IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T)(IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor<T>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor(Of T)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  isExternal: true
  name: TryGetCrudFor<T>(IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T>(IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T)(IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T)(IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor<T>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor(Of T)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  definition: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  name: TryGetCrudFor<T, TKey>(IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>(IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)(IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T, TKey)(IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor<T, TKey>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor(Of T, TKey)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  isExternal: true
  name: TryGetCrudFor<T, TKey>(IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>(IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)(IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T, TKey)(IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor<T, TKey>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor(Of T, TKey)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  definition: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  name: TryGetCrudFor<T, TKey, TReadAllResult>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor<T, TKey, TReadAllResult>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  isExternal: true
  name: TryGetCrudFor<T, TKey, TReadAllResult>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor<T, TKey, TReadAllResult>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
    name: TryGetCrudFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  definition: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  name: TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
    name: TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
    name: TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  name: TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
    name: TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
    name: TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor
  name: TryGetFor
  nameWithType: ApizrRegistryBase.TryGetFor
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.TryGetFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{{TWebApi}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  definition: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
  name: TryGetFor<TWebApi>(IApizrManager<TWebApi>)
  nameWithType: IApizrEnumerableRegistry.TryGetFor<TWebApi>(IApizrManager<TWebApi>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor<TWebApi>(Apizr.IApizrManager<TWebApi>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetFor(Of TWebApi)(IApizrManager(Of TWebApi))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor(Of TWebApi)(Apizr.IApizrManager(Of TWebApi))
  name.vb: TryGetFor(Of TWebApi)(IApizrManager(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
    name: TryGetFor<TWebApi>
    nameWithType: IApizrEnumerableRegistry.TryGetFor<TWebApi>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
    name: TryGetFor(Of TWebApi)
    nameWithType: IApizrEnumerableRegistry.TryGetFor(Of TWebApi)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
  name: TryGetFor<TWebApi>(IApizrManager<TWebApi>)
  nameWithType: IApizrEnumerableRegistry.TryGetFor<TWebApi>(IApizrManager<TWebApi>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor<TWebApi>(Apizr.IApizrManager<TWebApi>)
  nameWithType.vb: IApizrEnumerableRegistry.TryGetFor(Of TWebApi)(IApizrManager(Of TWebApi))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor(Of TWebApi)(Apizr.IApizrManager(Of TWebApi))
  name.vb: TryGetFor(Of TWebApi)(IApizrManager(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
    name: TryGetFor<TWebApi>
    nameWithType: IApizrEnumerableRegistry.TryGetFor<TWebApi>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor``1(Apizr.IApizrManager{``0}@)
    name: TryGetFor(Of TWebApi)
    nameWithType: IApizrEnumerableRegistry.TryGetFor(Of TWebApi)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.Count*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.Count
  name: Count
  nameWithType: ApizrRegistryBase.Count
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.Count
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  commentId: P:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: Count
  nameWithType: IApizrEnumerableRegistryBase.Count
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor
  name: ContainsCrudFor
  nameWithType: ApizrRegistryBase.ContainsCrudFor
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsCrudFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)()
  name.vb: ContainsCrudFor(Of T)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
    name: ContainsCrudFor<T>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
    name: ContainsCrudFor(Of T)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T, TKey>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)()
  name.vb: ContainsCrudFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
    name: ContainsCrudFor<T, TKey>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
    name: ContainsCrudFor(Of T, TKey)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
    name: ContainsCrudFor<T, TKey, TReadAllResult>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
    name: ContainsCrudFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
    name: ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
    name: ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor*
  commentId: Overload:Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor
  name: ContainsFor
  nameWithType: ApizrRegistryBase.ContainsFor
  fullName: Apizr.Configuring.Registry.ApizrRegistryBase.ContainsFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsFor<TWebApi>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor<TWebApi>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)()
  name.vb: ContainsFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
    name: ContainsFor<TWebApi>
    nameWithType: IApizrEnumerableRegistryBase.ContainsFor<TWebApi>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
    name: ContainsFor(Of TWebApi)
    nameWithType: IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
