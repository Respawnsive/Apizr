### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistry
  id: IApizrEnumerableRegistry
  parent: Apizr.Configuring.Registry
  children:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``3
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``4
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``3
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``4
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor``1(Apizr.IApizrManager{``0}@)
  langs:
  - csharp
  - vb
  name: IApizrEnumerableRegistry
  nameWithType: IApizrEnumerableRegistry
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  type: Interface
  source:
    id: IApizrEnumerableRegistry
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 9
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nRegistry options available for both static and extended registrations\n"
  example: []
  syntax:
    content: 'public interface IApizrEnumerableRegistry : IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>, IEnumerable'
    content.vb: >-
      Public Interface IApizrEnumerableRegistry
          Inherits IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
  extensionMethods:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}@)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(System.Threading.CancellationToken)
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TResult}}}})
  - Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TResult}}}},System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count
  commentId: P:Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count
  id: Count
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IApizrEnumerableRegistry.Count
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count
  type: Property
  source:
    id: Count
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 16
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nManagers count\n"
  example: []
  syntax:
    content: int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Count As Integer
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``1
  id: ContainsCrudManagerFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: ContainsCrudManagerFor<T>()
  nameWithType: IApizrEnumerableRegistry.ContainsCrudManagerFor<T>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor<T>()
  type: Method
  source:
    id: ContainsCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 23
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudManagerFor<T>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudManagerFor(Of T As Class) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T)()
  name.vb: ContainsCrudManagerFor(Of T)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``2
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``2
  id: ContainsCrudManagerFor``2
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: ContainsCrudManagerFor<T, TKey>()
  nameWithType: IApizrEnumerableRegistry.ContainsCrudManagerFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor<T, TKey>()
  type: Method
  source:
    id: ContainsCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 31
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type with <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> key type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudManagerFor<T, TKey>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudManagerFor(Of T As Class, TKey) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T, TKey)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T, TKey)()
  name.vb: ContainsCrudManagerFor(Of T, TKey)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``3
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``3
  id: ContainsCrudManagerFor``3
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: ContainsCrudManagerFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrEnumerableRegistry.ContainsCrudManagerFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: ContainsCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 40
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type with <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> key type and <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code> ReadAll result type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudManagerFor<T, TKey, TReadAllResult>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    - id: TReadAllResult
      description: The ReadAll result type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudManagerFor(Of T As Class, TKey, TReadAllResult) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudManagerFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``4
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor``4
  id: ContainsCrudManagerFor``4
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: ContainsCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrEnumerableRegistry.ContainsCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: ContainsCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 51
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type with <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> key type,\n<code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code> ReadAll result type and <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllParams</code> ReadAll params type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    - id: TReadAllResult
      description: The ReadAll result type
    - id: TReadAllParams
      description: The ReadAll params type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudManagerFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor``1
  id: ContainsManagerFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: ContainsManagerFor<TWebApi>()
  nameWithType: IApizrEnumerableRegistry.ContainsManagerFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor<TWebApi>()
  type: Method
  source:
    id: ContainsManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 58
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code> api type\n"
  example: []
  syntax:
    content: bool ContainsManagerFor<TWebApi>()
    typeParameters:
    - id: TWebApi
      description: The api type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsManagerFor(Of TWebApi) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.ContainsManagerFor(Of TWebApi)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor(Of TWebApi)()
  name.vb: ContainsManagerFor(Of TWebApi)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``1
  id: GetCrudManagerFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudManagerFor<T>()
  nameWithType: IApizrEnumerableRegistry.GetCrudManagerFor<T>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor<T>()
  type: Method
  source:
    id: GetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 69
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nGet a Crud manager instance for an entity type\n"
  example: []
  syntax:
    content: >-
      IApizrManager<ICrudApi<T, int, IEnumerable<T>, IDictionary<string, object>>> GetCrudManagerFor<T>()
          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Function GetCrudManagerFor(Of T As Class) As IApizrManager(Of ICrudApi(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudManagerFor(Of T)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor(Of T)()
  name.vb: GetCrudManagerFor(Of T)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``2
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``2
  id: GetCrudManagerFor``2
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudManagerFor<T, TKey>()
  nameWithType: IApizrEnumerableRegistry.GetCrudManagerFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor<T, TKey>()
  type: Method
  source:
    id: GetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 77
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nGet a Crud manager instance for an entity type with a specific key type\n"
  example: []
  syntax:
    content: >-
      IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<string, object>>> GetCrudManagerFor<T, TKey>()
          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Function GetCrudManagerFor(Of T As Class, TKey) As IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudManagerFor(Of T, TKey)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor(Of T, TKey)()
  name.vb: GetCrudManagerFor(Of T, TKey)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``3
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``3
  id: GetCrudManagerFor``3
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudManagerFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrEnumerableRegistry.GetCrudManagerFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: GetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 86
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nGet a Crud manager instance for an entity type with a specific key type and ReadAll result type\n"
  example: []
  syntax:
    content: >-
      IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<string, object>>> GetCrudManagerFor<T, TKey, TReadAllResult>()
          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
      description: ''
    content.vb: Function GetCrudManagerFor(Of T As Class, TKey, TReadAllResult) As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudManagerFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudManagerFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``4
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor``4
  id: GetCrudManagerFor``4
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrEnumerableRegistry.GetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: GetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 97
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nGet a Crud manager instance for an entity type with a specific key type, ReadAll result type and ReadAll params type\n"
  example: []
  syntax:
    content: >-
      IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>> GetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>()
          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    - id: TReadAllParams
      description: The ReadAll request params type
    return:
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
      description: ''
    content.vb: Function GetCrudManagerFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.GetCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor``1
  id: GetManagerFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetManagerFor<TWebApi>()
  nameWithType: IApizrEnumerableRegistry.GetManagerFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor<TWebApi>()
  type: Method
  source:
    id: GetManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 105
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nGet an api manager instance\n"
  example: []
  syntax:
    content: IApizrManager<TWebApi> GetManagerFor<TWebApi>()
    typeParameters:
    - id: TWebApi
      description: The managed api type
    return:
      type: Apizr.IApizrManager{{TWebApi}}
      description: ''
    content.vb: Function GetManagerFor(Of TWebApi) As IApizrManager(Of TWebApi)
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.GetManagerFor(Of TWebApi)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor(Of TWebApi)()
  name.vb: GetManagerFor(Of TWebApi)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  id: TryGetCrudManagerFor``1(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudManagerFor<T>(out IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudManagerFor<T>(out IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor<T>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  type: Method
  source:
    id: TryGetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 116
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nTry to get a Crud manager instance for an entity type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudManagerFor<T>(out IApizrManager<ICrudApi<T, int, IEnumerable<T>, IDictionary<string, object>>> manager)
          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    typeParameters:
    - id: T
      description: The managed entity type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudManagerFor(Of T As Class)(ByRef manager As IApizrManager(Of ICrudApi(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T)(ByRef IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudManagerFor(Of T)(ByRef IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))))
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  id: TryGetCrudManagerFor``2(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudManagerFor<T, TKey>(out IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudManagerFor<T, TKey>(out IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor<T, TKey>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  type: Method
  source:
    id: TryGetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 124
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nTry to get a Crud manager instance for an entity type with a specific key type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudManagerFor<T, TKey>(out IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<string, object>>> manager)
          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudManagerFor(Of T As Class, TKey)(ByRef manager As IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T, TKey)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T, TKey)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudManagerFor(Of T, TKey)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))))
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  id: TryGetCrudManagerFor``3(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudManagerFor<T, TKey, TReadAllResult>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudManagerFor<T, TKey, TReadAllResult>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor<T, TKey, TReadAllResult>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  type: Method
  source:
    id: TryGetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 133
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nTry to get a Crud manager instance for an entity type with a specific key type and ReadAll result type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudManagerFor<T, TKey, TReadAllResult>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<string, object>>> manager)
          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudManagerFor(Of T As Class, TKey, TReadAllResult)(ByRef manager As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T, TKey, TReadAllResult)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T, TKey, TReadAllResult)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: TryGetCrudManagerFor(Of T, TKey, TReadAllResult)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))))
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  id: TryGetCrudManagerFor``4(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  nameWithType: IApizrEnumerableRegistry.TryGetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(out Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>)
  type: Method
  source:
    id: TryGetCrudManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 143
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nTry to get a Crud manager instance for an entity type with a specific key type, ReadAll result type and ReadAll params type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>> manager)
          where T : class
    parameters:
    - id: manager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    - id: TReadAllParams
      description: The ReadAll request params type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudManagerFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)(ByRef manager As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
  name.vb: TryGetCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor``1(Apizr.IApizrManager{``0}@)
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor``1(Apizr.IApizrManager{``0}@)
  id: TryGetManagerFor``1(Apizr.IApizrManager{``0}@)
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetManagerFor<TWebApi>(out IApizrManager<TWebApi>)
  nameWithType: IApizrEnumerableRegistry.TryGetManagerFor<TWebApi>(out IApizrManager<TWebApi>)
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor<TWebApi>(out Apizr.IApizrManager<TWebApi>)
  type: Method
  source:
    id: TryGetManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Configuring\Registry\IApizrEnumerableRegistry.cs
    startLine: 150
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nTry to get an api manager instance\n"
  example: []
  syntax:
    content: bool TryGetManagerFor<TWebApi>(out IApizrManager<TWebApi> manager)
    parameters:
    - id: manager
      type: Apizr.IApizrManager{{TWebApi}}
    typeParameters:
    - id: TWebApi
      description: The managed api type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetManagerFor(Of TWebApi)(ByRef manager As IApizrManager(Of TWebApi)) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor*
  nameWithType.vb: IApizrEnumerableRegistry.TryGetManagerFor(Of TWebApi)(ByRef IApizrManager(Of TWebApi))
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor(Of TWebApi)(ByRef Apizr.IApizrManager(Of TWebApi))
  name.vb: TryGetManagerFor(Of TWebApi)(ByRef IApizrManager(Of TWebApi))
references:
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.IApizrManager>>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager))).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.IApizrManager))).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.IApizrManager>>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager))).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.IApizrManager))).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetUploadManagerFor<TUploadApi>()
  nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)()
  name.vb: GetUploadManagerFor(Of TUploadApi)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1
    name: GetUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1
    name: GetUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetDownloadManagerFor<TDownloadApi>()
  nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)()
  name.vb: GetDownloadManagerFor(Of TDownloadApi)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1
    name: GetDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1
    name: GetDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetDownloadManagerFor<TDownloadApi, TDownloadParams>()
  nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)()
  name.vb: GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2
    name: GetDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2
    name: GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetTransferManagerFor<TTransferApi>()
  nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)()
  name.vb: GetTransferManagerFor(Of TTransferApi)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1
    name: GetTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1
    name: GetTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetTransferManagerFor<TTransferApi, TDownloadParams>()
  nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)()
  name.vb: GetTransferManagerFor(Of TTransferApi, TDownloadParams)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2
    name: GetTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2
    name: GetTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  name: TryGetUploadManagerFor<TUploadApi>(IApizrUploadManager<TUploadApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>(IApizrUploadManager<TUploadApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>(Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)(IApizrUploadManager(Of TUploadApi))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)(Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi))
  name.vb: TryGetUploadManagerFor(Of TUploadApi)(IApizrUploadManager(Of TUploadApi))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
    name: TryGetUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
    name: TryGetUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  name: TryGetDownloadManagerFor<TDownloadApi>(IApizrDownloadManager<TDownloadApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>(IApizrDownloadManager<TDownloadApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>(Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(IApizrDownloadManager(Of TDownloadApi))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi)(IApizrDownloadManager(Of TDownloadApi))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
    name: TryGetDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
    name: TryGetDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  name: TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
    name: TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
    name: TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  name: TryGetTransferManagerFor<TTransferApi>(IApizrTransferManager<TTransferApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>(IApizrTransferManager<TTransferApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>(Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)(IApizrTransferManager(Of TTransferApi))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)(Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi))
  name.vb: TryGetTransferManagerFor(Of TTransferApi)(IApizrTransferManager(Of TTransferApi))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
    name: TryGetTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
    name: TryGetTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  name: TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrTransferManager<TTransferApi, TDownloadParams>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrTransferManager<TTransferApi, TDownloadParams>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrTransferManager(Of TTransferApi, TDownloadParams))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams))
  name.vb: TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrTransferManager(Of TTransferApi, TDownloadParams))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
    name: TryGetTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
    name: TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsUploadManager()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
    name: ContainsUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
    name: ContainsUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsUploadManagerFor<TUploadApi>()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)()
  name.vb: ContainsUploadManagerFor(Of TUploadApi)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1
    name: ContainsUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1
    name: ContainsUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsDownloadManager()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
    name: ContainsDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
    name: ContainsDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsDownloadManagerFor<TDownloadApi>()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)()
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1
    name: ContainsDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1
    name: ContainsDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)()
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2
    name: ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2
    name: ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsTransferManager()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
    name: ContainsTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
    name: ContainsTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsTransferManagerFor<TTransferApi>()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)()
  name.vb: ContainsTransferManagerFor(Of TTransferApi)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1
    name: ContainsTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1
    name: ContainsTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsTransferManagerFor<TTransferApi, TDownloadParams>()
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)()
  name.vb: ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2
    name: ContainsTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2
    name: ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi>(Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi>(Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  name: ClearCacheAsync<TWebApi>(CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi>(CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi>(System.Threading.CancellationToken)
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)(CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)(System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi)(CancellationToken)
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(System.Threading.CancellationToken)
    name: ClearCacheAsync<TWebApi>
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(System.Threading.CancellationToken)
    name: ClearCacheAsync(Of TWebApi)
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TResult}}}})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
  name: ClearCacheAsync<TWebApi, TResult>(Expression<Func<TWebApi, Task<TResult>>>)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(Expression<Func<TWebApi, Task<TResult>>>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TResult>>>)
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(Expression(Of Func(Of TWebApi, Task(Of TResult))))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TResult))))
  name.vb: ClearCacheAsync(Of TWebApi, TResult)(Expression(Of Func(Of TWebApi, Task(Of TResult))))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
    name: ClearCacheAsync<TWebApi, TResult>
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
    name: ClearCacheAsync(Of TWebApi, TResult)
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TResult}}}},System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  parent: Apizr.Extending.ApizrRegistryExtensions
  definition: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  name: ClearCacheAsync<TWebApi, TResult>(Expression<Func<CancellationToken, TWebApi, Task<TResult>>>, CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(Expression<Func<CancellationToken, TWebApi, Task<TResult>>>, CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TResult>>>, System.Threading.CancellationToken)
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult))), CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TResult))), System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi, TResult)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult))), CancellationToken)
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
    name: ClearCacheAsync<TWebApi, TResult>
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
    name: ClearCacheAsync(Of TWebApi, TResult)
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.IApizrManager}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrManager>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.IApizrManager>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.IApizrManager)))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrManager)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.IApizrManager
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions
  commentId: T:Apizr.FileTransferOptionsBuilderExtensions
  parent: Apizr
  name: FileTransferOptionsBuilderExtensions
  nameWithType: FileTransferOptionsBuilderExtensions
  fullName: Apizr.FileTransferOptionsBuilderExtensions
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: GetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: GetTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  name: TryGetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry, IApizrUploadManager<TUploadApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry, IApizrUploadManager<TUploadApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry, IApizrUploadManager(Of TUploadApi))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi))
  name.vb: TryGetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry, IApizrUploadManager(Of TUploadApi))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
    name: TryGetUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
    name: TryGetUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  name: TryGetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry, IApizrDownloadManager<TDownloadApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry, IApizrDownloadManager<TDownloadApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
    name: TryGetDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
    name: TryGetDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  name: TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
    name: TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
    name: TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  name: TryGetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry, IApizrTransferManager<TTransferApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry, IApizrTransferManager<TTransferApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi))
  name.vb: TryGetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
    name: TryGetTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
    name: TryGetTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  name: TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry, IApizrTransferManager<TTransferApi, TDownloadParams>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry, IApizrTransferManager<TTransferApi, TDownloadParams>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi, TDownloadParams))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams))
  name.vb: TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi, TDownloadParams))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
    name: TryGetTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
    name: TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsUploadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsUploadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsUploadManagerFor<TUploadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsUploadManagerFor(Of TUploadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsDownloadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsDownloadManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsDownloadManagerFor<TDownloadApi>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsDownloadManagerFor(Of TDownloadApi)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsTransferManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsTransferManager
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsTransferManagerFor<TTransferApi>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsTransferManagerFor(Of TTransferApi)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name: ContainsTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsTransferManagerFor<TTransferApi, TDownloadParams>
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
    name: ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)
    nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions
  commentId: T:Apizr.Extending.ApizrRegistryExtensions
  parent: Apizr.Extending
  name: ApizrRegistryExtensions
  nameWithType: ApizrRegistryExtensions
  fullName: Apizr.Extending.ApizrRegistryExtensions
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync<TWebApi, TModelData, TApiData>
    nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: ExecuteAsync(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  isExternal: true
  name: ClearCacheAsync<TWebApi>(IApizrEnumerableRegistry, CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi>(IApizrEnumerableRegistry, CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Threading.CancellationToken)
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)(IApizrEnumerableRegistry, CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi)(IApizrEnumerableRegistry, CancellationToken)
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
    name: ClearCacheAsync<TWebApi>
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
    name: ClearCacheAsync(Of TWebApi)
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
  isExternal: true
  name: ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TResult>>>)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TResult>>>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TResult>>>)
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TResult))))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TResult))))
  name.vb: ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TResult))))
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
    name: ClearCacheAsync<TWebApi, TResult>
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}})
    name: ClearCacheAsync(Of TWebApi, TResult)
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  isExternal: true
  name: ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<CancellationToken, TWebApi, Task<TResult>>>, CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<CancellationToken, TWebApi, Task<TResult>>>, CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TResult>>>, System.Threading.CancellationToken)
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult))), CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TResult))), System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult))), CancellationToken)
  spec.csharp:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
    name: ClearCacheAsync<TWebApi, TResult>
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
    name: ClearCacheAsync(Of TWebApi, TResult)
    nameWithType: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
    fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
    name: IApizrEnumerableRegistry
    nameWithType: IApizrEnumerableRegistry
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count
  name: Count
  nameWithType: IApizrEnumerableRegistry.Count
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor
  name: ContainsCrudManagerFor
  nameWithType: IApizrEnumerableRegistry.ContainsCrudManagerFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsCrudManagerFor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor
  name: ContainsManagerFor
  nameWithType: IApizrEnumerableRegistry.ContainsManagerFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.ContainsManagerFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor
  name: GetCrudManagerFor
  nameWithType: IApizrEnumerableRegistry.GetCrudManagerFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetCrudManagerFor
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, Int32, IEnumerable<T>, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, IEnumerable<T>, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, TReadAllResult, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{T},{TKey},{TReadAllResult},{TReadAllParams}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{``0,``1,``2,``3}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  nameWithType: IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor
  name: GetManagerFor
  nameWithType: IApizrEnumerableRegistry.GetManagerFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.GetManagerFor
- uid: Apizr.IApizrManager{{TWebApi}}
  commentId: T:Apizr.IApizrManager{``0}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor
  name: TryGetCrudManagerFor
  nameWithType: IApizrEnumerableRegistry.TryGetCrudManagerFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetCrudManagerFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor
  name: TryGetManagerFor
  nameWithType: IApizrEnumerableRegistry.TryGetManagerFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry.TryGetManagerFor
