### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  id: IApizrEnumerableRegistryBase
  parent: Apizr.Configuring.Registry
  children:
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  langs:
  - csharp
  - vb
  name: IApizrEnumerableRegistryBase
  nameWithType: IApizrEnumerableRegistryBase
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  type: Interface
  source:
    id: IApizrEnumerableRegistryBase
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\IApizrEnumerableRegistryBase.cs
    startLine: 6
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  syntax:
    content: public interface IApizrEnumerableRegistryBase
    content.vb: Public Interface IApizrEnumerableRegistryBase
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  commentId: P:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  id: Count
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IApizrEnumerableRegistryBase.Count
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  type: Property
  source:
    id: Count
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\IApizrEnumerableRegistryBase.cs
    startLine: 11
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nManagers count\n"
  example: []
  syntax:
    content: int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Count As Integer
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  id: ContainsCrudFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\IApizrEnumerableRegistryBase.cs
    startLine: 18
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudFor<T>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudFor(Of T As Class) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor*
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)()
  name.vb: ContainsCrudFor(Of T)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  id: ContainsCrudFor``2
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T, TKey>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\IApizrEnumerableRegistryBase.cs
    startLine: 26
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type with <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> key type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudFor<T, TKey>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudFor(Of T As Class, TKey) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor*
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)()
  name.vb: ContainsCrudFor(Of T, TKey)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  id: ContainsCrudFor``3
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\IApizrEnumerableRegistryBase.cs
    startLine: 35
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type with <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> key type and <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code> ReadAll result type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudFor<T, TKey, TReadAllResult>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    - id: TReadAllResult
      description: The ReadAll result type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudFor(Of T As Class, TKey, TReadAllResult) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor*
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  id: ContainsCrudFor``4
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: ContainsCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\IApizrEnumerableRegistryBase.cs
    startLine: 46
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> entity type with <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> key type,\n<code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code> ReadAll result type and <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllParams</code> ReadAll params type\n"
  example: []
  syntax:
    content: >-
      bool ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
          where T : class
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    - id: TReadAllResult
      description: The ReadAll result type
    - id: TReadAllParams
      description: The ReadAll params type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsCrudFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor*
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  id: ContainsFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsFor<TWebApi>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor<TWebApi>()
  type: Method
  source:
    id: ContainsFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Configuring\Registry\IApizrEnumerableRegistryBase.cs
    startLine: 53
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code> api type\n"
  example: []
  syntax:
    content: bool ContainsFor<TWebApi>()
    typeParameters:
    - id: TWebApi
      description: The api type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ContainsFor(Of TWebApi) As Boolean
  overload: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor*
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)()
  name.vb: ContainsFor(Of TWebApi)()
references:
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  name: Count
  nameWithType: IApizrEnumerableRegistryBase.Count
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor
  name: ContainsCrudFor
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor
  name: ContainsFor
  nameWithType: IApizrEnumerableRegistryBase.ContainsFor
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor
