### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  commentId: T:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  id: IApizrRegistryBuilderBase`4
  parent: Apizr.Configuring.Registry
  children:
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``1(System.Action{`2})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``2(System.Action{`2})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``3(System.Action{`2})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``4(System.Action{`2})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddGroup(System.Action{`1},System.Action{`3})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddManagerFor``1(System.Action{`2})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.ApizrRegistry
  langs:
  - csharp
  - vb
  name: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>
  type: Interface
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: IApizrRegistryBuilderBase
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 17
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nRegistry builder options available for both static and extended registrations\n"
  example: []
  syntax:
    content: 'public interface IApizrRegistryBuilderBase<out TApizrRegistry, out TApizrRegistryBuilder, out TApizrProperOptionsBuilder, out TApizrCommonOptionsBuilder> : IApizrRegistryBuilderBase where TApizrRegistry : IApizrEnumerableRegistry where TApizrRegistryBuilder : IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder> where TApizrProperOptionsBuilder : IApizrGlobalProperOptionsBuilderBase where TApizrCommonOptionsBuilder : IApizrGlobalCommonOptionsBuilderBase'
    typeParameters:
    - id: TApizrRegistry
    - id: TApizrRegistryBuilder
    - id: TApizrProperOptionsBuilder
    - id: TApizrCommonOptionsBuilder
    content.vb: >-
      Public Interface IApizrRegistryBuilderBase(Of Out TApizrRegistry As IApizrEnumerableRegistry, Out TApizrRegistryBuilder As IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder), Out TApizrProperOptionsBuilder As IApizrGlobalProperOptionsBuilderBase, Out TApizrCommonOptionsBuilder As IApizrGlobalCommonOptionsBuilderBase)
          Inherits IApizrRegistryBuilderBase
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder)
  name.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder)
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.ApizrRegistry
  commentId: P:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.ApizrRegistry
  id: ApizrRegistry
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  langs:
  - csharp
  - vb
  name: ApizrRegistry
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.ApizrRegistry
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.ApizrRegistry
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrRegistry
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 29
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nApizr registry\n"
  example: []
  syntax:
    content: TApizrRegistry ApizrRegistry { get; }
    parameters: []
    return:
      type: '{TApizrRegistry}'
    content.vb: ReadOnly Property ApizrRegistry As TApizrRegistry
  overload: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.ApizrRegistry*
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).ApizrRegistry
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).ApizrRegistry
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddGroup(System.Action{`1},System.Action{`3})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddGroup(System.Action{`1},System.Action{`3})
  id: AddGroup(System.Action{`1},System.Action{`3})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  langs:
  - csharp
  - vb
  name: AddGroup(Action<TApizrRegistryBuilder>, Action<TApizrCommonOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddGroup(Action<TApizrRegistryBuilder>, Action<TApizrCommonOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddGroup(System.Action<TApizrRegistryBuilder>, System.Action<TApizrCommonOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddGroup
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 37
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nGroup registrations sharing specific common options\n"
  example: []
  syntax:
    content: TApizrRegistryBuilder AddGroup(Action<TApizrRegistryBuilder> registryGroupBuilder, Action<TApizrCommonOptionsBuilder> commonOptionsBuilder = null)
    parameters:
    - id: registryGroupBuilder
      type: System.Action{{TApizrRegistryBuilder}}
      description: The registry group
    - id: commonOptionsBuilder
      type: System.Action{{TApizrCommonOptionsBuilder}}
      description: The group common options
    return:
      type: '{TApizrRegistryBuilder}'
      description: ''
    content.vb: Function AddGroup(registryGroupBuilder As Action(Of TApizrRegistryBuilder), commonOptionsBuilder As Action(Of TApizrCommonOptionsBuilder) = Nothing) As TApizrRegistryBuilder
  overload: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddGroup*
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddGroup(Action(Of TApizrRegistryBuilder), Action(Of TApizrCommonOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddGroup(System.Action(Of TApizrRegistryBuilder), System.Action(Of TApizrCommonOptionsBuilder))
  name.vb: AddGroup(Action(Of TApizrRegistryBuilder), Action(Of TApizrCommonOptionsBuilder))
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``1(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``1(System.Action{`2})
  id: AddCrudManagerFor``1(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  langs:
  - csharp
  - vb
  name: AddCrudManagerFor<T>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T>(System.Action<TApizrProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddCrudManagerFor
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 52
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> and &quot;ReadAll&quot; query result of type <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: >-
      TApizrRegistryBuilder AddCrudManagerFor<T>(Action<TApizrProperOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrProperOptionsBuilder}}
      description: The builder defining some api proper options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    return:
      type: '{TApizrRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudManagerFor(Of T As Class)(optionsBuilder As Action(Of TApizrProperOptionsBuilder) = Nothing) As TApizrRegistryBuilder
  overload: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor*
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudManagerFor(Of T)(Action(Of TApizrProperOptionsBuilder))
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``2(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``2(System.Action{`2})
  id: AddCrudManagerFor``2(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  langs:
  - csharp
  - vb
  name: AddCrudManagerFor<T, TKey>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T, TKey>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T, TKey>(System.Action<TApizrProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddCrudManagerFor
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 65
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: >-
      TApizrRegistryBuilder AddCrudManagerFor<T, TKey>(Action<TApizrProperOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrProperOptionsBuilder}}
      description: The builder defining some api proper options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    - id: TKey
      description: The object key type (primitive)
    return:
      type: '{TApizrRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudManagerFor(Of T As Class, TKey)(optionsBuilder As Action(Of TApizrProperOptionsBuilder) = Nothing) As TApizrRegistryBuilder
  overload: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor*
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T, TKey)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T, TKey)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudManagerFor(Of T, TKey)(Action(Of TApizrProperOptionsBuilder))
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``3(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``3(System.Action{`2})
  id: AddCrudManagerFor``3(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  langs:
  - csharp
  - vb
  name: AddCrudManagerFor<T, TKey, TReadAllResult>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T, TKey, TReadAllResult>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T, TKey, TReadAllResult>(System.Action<TApizrProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddCrudManagerFor
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 80
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code>\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: >-
      TApizrRegistryBuilder AddCrudManagerFor<T, TKey, TReadAllResult>(Action<TApizrProperOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrProperOptionsBuilder}}
      description: The builder defining some api proper options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    - id: TKey
      description: The object key type (primitive)
    - id: TReadAllResult
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    return:
      type: '{TApizrRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudManagerFor(Of T As Class, TKey, TReadAllResult)(optionsBuilder As Action(Of TApizrProperOptionsBuilder) = Nothing) As TApizrRegistryBuilder
  overload: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor*
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T, TKey, TReadAllResult)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T, TKey, TReadAllResult)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudManagerFor(Of T, TKey, TReadAllResult)(Action(Of TApizrProperOptionsBuilder))
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``4(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor``4(System.Action{`2})
  id: AddCrudManagerFor``4(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  langs:
  - csharp
  - vb
  name: AddCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(System.Action<TApizrProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddCrudManagerFor
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 97
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type (class), \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code>\nand ReadAll query parameters type (inheriting from IDictionary{string,object} or be of class type)\n"
  example: []
  syntax:
    content: >-
      TApizrRegistryBuilder AddCrudManagerFor<T, TKey, TReadAllResult, TReadAllParams>(Action<TApizrProperOptionsBuilder> optionsBuilder = null)
          where T : class
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrProperOptionsBuilder}}
      description: The builder defining some api proper options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls (class)
    - id: TKey
      description: The object key type (primitive)
    - id: TReadAllResult
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    - id: TReadAllParams
      description: ReadAll query parameters
    return:
      type: '{TApizrRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudManagerFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)(optionsBuilder As Action(Of TApizrProperOptionsBuilder) = Nothing) As TApizrRegistryBuilder
  overload: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor*
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudManagerFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of TApizrProperOptionsBuilder))
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddManagerFor``1(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddManagerFor``1(System.Action{`2})
  id: AddManagerFor``1(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4
  langs:
  - csharp
  - vb
  name: AddManagerFor<TWebApi>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddManagerFor<TWebApi>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddManagerFor<TWebApi>(System.Action<TApizrProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddManagerFor
    path: ../../Src/Apizr/Configuring/Registry/IApizrRegistryBuilderBase.cs
    startLine: 112
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Registry
  summary: "\nCreate a <xref href=\"Apizr.ApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> instance\n"
  example: []
  syntax:
    content: TApizrRegistryBuilder AddManagerFor<TWebApi>(Action<TApizrProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrProperOptionsBuilder}}
      description: The builder defining some api proper options
    typeParameters:
    - id: TWebApi
      description: The web api interface to manage
    return:
      type: '{TApizrRegistryBuilder}'
      description: ''
    content.vb: Function AddManagerFor(Of TWebApi)(optionsBuilder As Action(Of TApizrProperOptionsBuilder) = Nothing) As TApizrRegistryBuilder
  overload: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddManagerFor*
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddManagerFor(Of TWebApi)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddManagerFor(Of TWebApi)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddManagerFor(Of TWebApi)(Action(Of TApizrProperOptionsBuilder))
references:
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.ApizrRegistry*
  commentId: Overload:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.ApizrRegistry
  name: ApizrRegistry
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.ApizrRegistry
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.ApizrRegistry
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).ApizrRegistry
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).ApizrRegistry
- uid: '{TApizrRegistry}'
  commentId: '!:TApizrRegistry'
  definition: TApizrRegistry
  name: TApizrRegistry
  nameWithType: TApizrRegistry
  fullName: TApizrRegistry
- uid: TApizrRegistry
  commentId: '!:TApizrRegistry'
  name: TApizrRegistry
  nameWithType: TApizrRegistry
  fullName: TApizrRegistry
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddGroup*
  commentId: Overload:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddGroup
  name: AddGroup
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddGroup
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddGroup
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddGroup
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddGroup
- uid: System.Action{{TApizrRegistryBuilder}}
  commentId: T:System.Action{`1}
  parent: System
  definition: System.Action`1
  name: Action<TApizrRegistryBuilder>
  nameWithType: Action<TApizrRegistryBuilder>
  fullName: System.Action<TApizrRegistryBuilder>
  nameWithType.vb: Action(Of TApizrRegistryBuilder)
  fullName.vb: System.Action(Of TApizrRegistryBuilder)
  name.vb: Action(Of TApizrRegistryBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRegistryBuilder
    nameWithType: TApizrRegistryBuilder
    fullName: TApizrRegistryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRegistryBuilder
    nameWithType: TApizrRegistryBuilder
    fullName: TApizrRegistryBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{TApizrCommonOptionsBuilder}}
  commentId: T:System.Action{`3}
  parent: System
  definition: System.Action`1
  name: Action<TApizrCommonOptionsBuilder>
  nameWithType: Action<TApizrCommonOptionsBuilder>
  fullName: System.Action<TApizrCommonOptionsBuilder>
  nameWithType.vb: Action(Of TApizrCommonOptionsBuilder)
  fullName.vb: System.Action(Of TApizrCommonOptionsBuilder)
  name.vb: Action(Of TApizrCommonOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApizrRegistryBuilder}'
  commentId: '!:TApizrRegistryBuilder'
  definition: TApizrRegistryBuilder
  name: TApizrRegistryBuilder
  nameWithType: TApizrRegistryBuilder
  fullName: TApizrRegistryBuilder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TApizrRegistryBuilder
  name: TApizrRegistryBuilder
  nameWithType: TApizrRegistryBuilder
  fullName: TApizrRegistryBuilder
- uid: Apizr.ApizrManager`1
  commentId: T:Apizr.ApizrManager`1
  name: ApizrManager<TWebApi>
  nameWithType: ApizrManager<TWebApi>
  fullName: Apizr.ApizrManager<TWebApi>
  nameWithType.vb: ApizrManager(Of TWebApi)
  fullName.vb: Apizr.ApizrManager(Of TWebApi)
  name.vb: ApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.ApizrManager`1
    name: ApizrManager
    nameWithType: ApizrManager
    fullName: Apizr.ApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.ApizrManager`1
    name: ApizrManager
    nameWithType: ApizrManager
    fullName: Apizr.ApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddCrudManagerFor
  name: AddCrudManagerFor
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddCrudManagerFor
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddCrudManagerFor
- uid: System.Action{{TApizrProperOptionsBuilder}}
  commentId: T:System.Action{`2}
  parent: System
  definition: System.Action`1
  name: Action<TApizrProperOptionsBuilder>
  nameWithType: Action<TApizrProperOptionsBuilder>
  fullName: System.Action<TApizrProperOptionsBuilder>
  nameWithType.vb: Action(Of TApizrProperOptionsBuilder)
  fullName.vb: System.Action(Of TApizrProperOptionsBuilder)
  name.vb: Action(Of TApizrProperOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddManagerFor*
  commentId: Overload:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`4.AddManagerFor
  name: AddManagerFor
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddManagerFor
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder>.AddManagerFor
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddManagerFor
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder, TApizrCommonOptionsBuilder).AddManagerFor
