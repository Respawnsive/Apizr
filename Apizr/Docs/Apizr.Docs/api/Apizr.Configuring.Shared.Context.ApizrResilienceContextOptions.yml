### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions
  commentId: T:Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions
  id: ApizrResilienceContextOptions
  parent: Apizr.Configuring.Shared.Context
  children:
  - Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.#ctor(Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions)
  - Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext
  - Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete
  langs:
  - csharp
  - vb
  name: ApizrResilienceContextOptions
  nameWithType: ApizrResilienceContextOptions
  fullName: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrResilienceContextOptions
    path: ../../Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
    startLine: 6
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared.Context
  syntax:
    content: 'public class ApizrResilienceContextOptions : IApizrResilienceContextOptions'
    content.vb: >-
      Public Class ApizrResilienceContextOptions
          Implements IApizrResilienceContextOptions
  inheritance:
  - System.Object
  implements:
  - Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.#ctor(Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions)
  commentId: M:Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.#ctor(Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions)
  id: '#ctor(Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions)'
  parent: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions
  langs:
  - csharp
  - vb
  name: ApizrResilienceContextOptions(IApizrResilienceContextOptions)
  nameWithType: ApizrResilienceContextOptions.ApizrResilienceContextOptions(IApizrResilienceContextOptions)
  fullName: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ApizrResilienceContextOptions(Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
    startLine: 8
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared.Context
  syntax:
    content: public ApizrResilienceContextOptions(IApizrResilienceContextOptions options = null)
    parameters:
    - id: options
      type: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions
    content.vb: Public Sub New(options As IApizrResilienceContextOptions = Nothing)
  overload: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext
  commentId: P:Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext
  id: ContinueOnCapturedContext
  parent: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions
  langs:
  - csharp
  - vb
  name: ContinueOnCapturedContext
  nameWithType: ApizrResilienceContextOptions.ContinueOnCapturedContext
  fullName: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContinueOnCapturedContext
    path: ../../Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
    startLine: 15
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared.Context
  summary: "\nGets the value indicating whether to continue on captured context, if any.\n"
  example: []
  syntax:
    content: public bool? ContinueOnCapturedContext { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property ContinueOnCapturedContext As Boolean?
  overload: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext*
  implements:
  - Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ContinueOnCapturedContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete
  commentId: P:Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete
  id: ReturnToPoolOnComplete
  parent: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions
  langs:
  - csharp
  - vb
  name: ReturnToPoolOnComplete
  nameWithType: ApizrResilienceContextOptions.ReturnToPoolOnComplete
  fullName: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReturnToPoolOnComplete
    path: ../../Src/Apizr/Configuring/Shared/Context/ApizrResilienceContextOptions.cs
    startLine: 18
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared.Context
  summary: "\nGets the value indicating whether to return the context to the pool, when request completes.\n"
  example: []
  syntax:
    content: public bool? ReturnToPoolOnComplete { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property ReturnToPoolOnComplete As Boolean?
  overload: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete*
  implements:
  - Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ReturnToPoolOnComplete
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Apizr.Configuring.Shared.Context
  commentId: N:Apizr.Configuring.Shared.Context
  name: Apizr.Configuring.Shared.Context
  nameWithType: Apizr.Configuring.Shared.Context
  fullName: Apizr.Configuring.Shared.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions
  commentId: T:Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions
  parent: Apizr.Configuring.Shared.Context
  name: IApizrResilienceContextOptions
  nameWithType: IApizrResilienceContextOptions
  fullName: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.#ctor*
  commentId: Overload:Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.#ctor
  name: ApizrResilienceContextOptions
  nameWithType: ApizrResilienceContextOptions.ApizrResilienceContextOptions
  fullName: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ApizrResilienceContextOptions
- uid: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext*
  commentId: Overload:Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext
  name: ContinueOnCapturedContext
  nameWithType: ApizrResilienceContextOptions.ContinueOnCapturedContext
  fullName: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ContinueOnCapturedContext
- uid: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ContinueOnCapturedContext
  commentId: P:Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ContinueOnCapturedContext
  parent: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions
  name: ContinueOnCapturedContext
  nameWithType: IApizrResilienceContextOptions.ContinueOnCapturedContext
  fullName: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ContinueOnCapturedContext
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete*
  commentId: Overload:Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete
  name: ReturnToPoolOnComplete
  nameWithType: ApizrResilienceContextOptions.ReturnToPoolOnComplete
  fullName: Apizr.Configuring.Shared.Context.ApizrResilienceContextOptions.ReturnToPoolOnComplete
- uid: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ReturnToPoolOnComplete
  commentId: P:Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ReturnToPoolOnComplete
  parent: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions
  name: ReturnToPoolOnComplete
  nameWithType: IApizrResilienceContextOptions.ReturnToPoolOnComplete
  fullName: Apizr.Configuring.Shared.Context.IApizrResilienceContextOptions.ReturnToPoolOnComplete
