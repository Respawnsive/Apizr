### YamlMime:ManagedReference
items:
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  id: IApizrGlobalSharedOptionsBase
  parent: Apizr.Configuring.Shared
  children:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  langs:
  - csharp
  - vb
  name: IApizrGlobalSharedOptionsBase
  nameWithType: IApizrGlobalSharedOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  type: Interface
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: IApizrGlobalSharedOptionsBase
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 11
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nOptions available at all (common, proper and request) levels and for all (static and extended) registration types\n"
  example: []
  syntax:
    content: public interface IApizrGlobalSharedOptionsBase
    content.vb: Public Interface IApizrGlobalSharedOptionsBase
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  id: HttpTracerMode
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  langs:
  - csharp
  - vb
  name: HttpTracerMode
  nameWithType: IApizrGlobalSharedOptionsBase.HttpTracerMode
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: HttpTracerMode
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 16
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nHttp traffic tracing mode\n"
  example: []
  syntax:
    content: HttpTracerMode HttpTracerMode { get; }
    parameters: []
    return:
      type: Apizr.Logging.HttpTracerMode
    content.vb: ReadOnly Property HttpTracerMode As HttpTracerMode
  overload: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  id: TrafficVerbosity
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  langs:
  - csharp
  - vb
  name: TrafficVerbosity
  nameWithType: IApizrGlobalSharedOptionsBase.TrafficVerbosity
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TrafficVerbosity
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 21
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nHttp traffic tracing verbosity\n"
  example: []
  syntax:
    content: HttpMessageParts TrafficVerbosity { get; }
    parameters: []
    return:
      type: Apizr.Logging.HttpMessageParts
    content.vb: ReadOnly Property TrafficVerbosity As HttpMessageParts
  overload: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  id: LogLevels
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  langs:
  - csharp
  - vb
  name: LogLevels
  nameWithType: IApizrGlobalSharedOptionsBase.LogLevels
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: LogLevels
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 26
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nLog levels while writing\n"
  example: []
  syntax:
    content: LogLevel[] LogLevels { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.LogLevel[]
    content.vb: ReadOnly Property LogLevels As LogLevel()
  overload: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  id: OnException
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  langs:
  - csharp
  - vb
  name: OnException
  nameWithType: IApizrGlobalSharedOptionsBase.OnException
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: OnException
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 31
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nCatching potential exception if defined\n"
  example: []
  syntax:
    content: Action<ApizrException> OnException { get; }
    parameters: []
    return:
      type: System.Action{Apizr.ApizrException}
    content.vb: ReadOnly Property OnException As Action(Of ApizrException)
  overload: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  id: LetThrowOnExceptionWithEmptyCache
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  langs:
  - csharp
  - vb
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: LetThrowOnExceptionWithEmptyCache
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 36
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nLet throw potential exception if there&apos;s no cached data to return\n"
  example: []
  syntax:
    content: bool LetThrowOnExceptionWithEmptyCache { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property LetThrowOnExceptionWithEmptyCache As Boolean
  overload: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  id: HandlersParameters
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  langs:
  - csharp
  - vb
  name: HandlersParameters
  nameWithType: IApizrGlobalSharedOptionsBase.HandlersParameters
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: HandlersParameters
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 41
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nParameters passed through delegating handlers\n"
  example: []
  syntax:
    content: IDictionary<string, object> HandlersParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: ReadOnly Property HandlersParameters As IDictionary(Of String, Object)
  overload: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  id: Headers
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: IApizrGlobalSharedOptionsBase.Headers
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: Headers
    path: ../../Src/Apizr/Configuring/Shared/IApizrGlobalSharedOptionsBase.cs
    startLine: 46
  assemblies:
  - Apizr
  namespace: Apizr.Configuring.Shared
  summary: "\nHeaders to add to the request\n"
  example: []
  syntax:
    content: IList<string> Headers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: ReadOnly Property Headers As IList(Of String)
  overload: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Apizr.Configuring.Shared
  commentId: N:Apizr.Configuring.Shared
  name: Apizr.Configuring.Shared
  nameWithType: Apizr.Configuring.Shared
  fullName: Apizr.Configuring.Shared
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode*
  commentId: Overload:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  name: HttpTracerMode
  nameWithType: IApizrGlobalSharedOptionsBase.HttpTracerMode
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
- uid: Apizr.Logging.HttpTracerMode
  commentId: T:Apizr.Logging.HttpTracerMode
  parent: Apizr.Logging
  name: HttpTracerMode
  nameWithType: HttpTracerMode
  fullName: Apizr.Logging.HttpTracerMode
- uid: Apizr.Logging
  commentId: N:Apizr.Logging
  name: Apizr.Logging
  nameWithType: Apizr.Logging
  fullName: Apizr.Logging
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity*
  commentId: Overload:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  name: TrafficVerbosity
  nameWithType: IApizrGlobalSharedOptionsBase.TrafficVerbosity
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
- uid: Apizr.Logging.HttpMessageParts
  commentId: T:Apizr.Logging.HttpMessageParts
  parent: Apizr.Logging
  name: HttpMessageParts
  nameWithType: HttpMessageParts
  fullName: Apizr.Logging.HttpMessageParts
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels*
  commentId: Overload:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  name: LogLevels
  nameWithType: IApizrGlobalSharedOptionsBase.LogLevels
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
- uid: Microsoft.Extensions.Logging.LogLevel[]
  isExternal: true
  name: LogLevel[]
  nameWithType: LogLevel[]
  fullName: Microsoft.Extensions.Logging.LogLevel[]
  nameWithType.vb: LogLevel()
  fullName.vb: Microsoft.Extensions.Logging.LogLevel()
  name.vb: LogLevel()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException*
  commentId: Overload:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  name: OnException
  nameWithType: IApizrGlobalSharedOptionsBase.OnException
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
- uid: System.Action{Apizr.ApizrException}
  commentId: T:System.Action{Apizr.ApizrException}
  parent: System
  definition: System.Action`1
  name: Action<ApizrException>
  nameWithType: Action<ApizrException>
  fullName: System.Action<Apizr.ApizrException>
  nameWithType.vb: Action(Of ApizrException)
  fullName.vb: System.Action(Of Apizr.ApizrException)
  name.vb: Action(Of ApizrException)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache*
  commentId: Overload:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters*
  commentId: Overload:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  name: HandlersParameters
  nameWithType: IApizrGlobalSharedOptionsBase.HandlersParameters
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers*
  commentId: Overload:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  name: Headers
  nameWithType: IApizrGlobalSharedOptionsBase.Headers
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
