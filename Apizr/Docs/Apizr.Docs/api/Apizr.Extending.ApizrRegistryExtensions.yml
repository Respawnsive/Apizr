### YamlMime:ManagedReference
items:
- uid: Apizr.Extending.ApizrRegistryExtensions
  commentId: T:Apizr.Extending.ApizrRegistryExtensions
  id: ApizrRegistryExtensions
  parent: Apizr.Extending
  children:
  - Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  - Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Threading.CancellationToken)
  - Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Threading.CancellationToken)
  - Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  - Apizr.Extending.ApizrRegistryExtensions.CreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.CreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.DeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.DeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.ReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: ApizrRegistryExtensions
  nameWithType: ApizrRegistryExtensions
  fullName: Apizr.Extending.ApizrRegistryExtensions
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrRegistryExtensions
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 10
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  syntax:
    content: public static class ApizrRegistryExtensions
    content.vb: Public Module ApizrRegistryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 23
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task ExecuteAsync<TWebApi>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task)), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 35
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task ExecuteAsync<TWebApi>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 51
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiData, Task>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task)), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 69
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 87
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task<IApizrResponse> ExecuteAsync<TWebApi>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<IApiResponse>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of IApiResponse))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 102
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task<TApiData> ExecuteAsync<TWebApi, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TApiData
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{{TApiData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 117
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TApiData>> ExecuteAsync<TWebApi, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TApiData
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TApiData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 132
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TApiData>> ExecuteAsync<TWebApi, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TApiData
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TApiData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 146
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task<IApizrResponse> ExecuteAsync<TWebApi>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 161
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task
  example: []
  syntax:
    content: public static Task<TApiData> ExecuteAsync<TWebApi, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TApiData
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{{TApiData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 176
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TApiData>> ExecuteAsync<TWebApi, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TApiData
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TApiData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 191
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TApiData>> ExecuteAsync<TWebApi, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code>'s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TApiData
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TApiData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 207
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<TModelData> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 223
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 239
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{``2}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 255
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<TModelData> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 271
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 287
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData)))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData)))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData)))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<IApiResponse>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<IApiResponse>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 304
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<IApizrResponse> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiData, Task<IApiResponse>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 323
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<TModelData> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiData, Task<TApiData>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<ApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<ApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 342
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiData, Task<ApiResponse<TApiData>>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task(Of ApiResponse(Of TApiData)))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of ApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData)))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of ApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<IApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiData, Task<IApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 361
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiData, Task<IApiResponse<TApiData>>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse(Of TApiData)))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData)))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 380
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<IApizrResponse> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 399
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<TModelData> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<ApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<ApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 418
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<ApiResponse<TApiData>>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of ApiResponse(Of TApiData)))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of ApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData)))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of ApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse<TApiData>>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelData, TApiData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 437
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelData>> ExecuteAsync<TWebApi, TModelData, TApiData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse<TApiData>>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelData, TApiData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse(Of TApiData)))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelData, TApiData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData)))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelData, TApiData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse(Of TApiData)))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 458
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<TModelResultData> ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{{TModelResultData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelResultData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiResultData>>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 481
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelResultData>> ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiResultData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelResultData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData)))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelResultData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiResultData)))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiResultData>>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 504
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelResultData>> ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiResultData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelResultData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData)))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelResultData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiResultData)))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 527
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped result
  example: []
  syntax:
    content: public static Task<TModelResultData> ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{{TModelResultData}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelResultData)
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.ApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiResultData>>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 550
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelResultData>> ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiResultData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelResultData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData)))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelResultData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiResultData)))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,``0,``3,System.Threading.Tasks.Task{Refit.IApiResponse{``2}}}},``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrEnumerableRegistry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiResultData>>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 574
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Execute a managed <code class="typeparamref">TWebApi</code>'s task returning a mapped response result
  example: []
  syntax:
    content: public static Task<IApizrResponse<TModelResultData>> ExecuteAsync<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(this IApizrEnumerableRegistry registry, Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiResultData}}}}}
      description: The <code class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelResultData}}}
      description: ''
    content.vb: Public Shared Function ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData)))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelResultData))
  overload: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  nameWithType.vb: ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiResultData)))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrEnumerableRegistry, Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData)))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.CreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.CreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: CreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync<TApiEntity>(IApizrEnumerableRegistry, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.CreateAsync<TApiEntity>(IApizrEnumerableRegistry, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.CreateAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 601
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Create request
  example: []
  syntax:
    content: 'public static Task<TApiEntity> CreateAsync<TApiEntity>(this IApizrEnumerableRegistry registry, TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: entity
      type: '{TApiEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
      description: ''
    content.vb: Public Shared Function CreateAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Extending.ApizrRegistryExtensions.CreateAsync*
  nameWithType.vb: ApizrRegistryExtensions.CreateAsync(Of TApiEntity)(IApizrEnumerableRegistry, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.CreateAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: CreateAsync(Of TApiEntity)(IApizrEnumerableRegistry, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeCreateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeCreateAsync<TApiEntity>(IApizrEnumerableRegistry, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeCreateAsync<TApiEntity>(IApizrEnumerableRegistry, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeCreateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 614
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Create request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TApiEntity>> SafeCreateAsync<TApiEntity>(this IApizrEnumerableRegistry registry, TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: entity
      type: '{TApiEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiEntity}}}
      description: ''
    content.vb: Public Shared Function SafeCreateAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TApiEntity))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeCreateAsync(Of TApiEntity)(IApizrEnumerableRegistry, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeCreateAsync(Of TApiEntity)(IApizrEnumerableRegistry, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.CreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.CreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: CreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: CreateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.CreateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.CreateAsync<TModelEntity, TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: CreateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 629
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a mapped Create request, returning a mapped result
  example: []
  syntax:
    content: 'public static Task<TModelEntity> CreateAsync<TModelEntity, TApiEntity>(this IApizrEnumerableRegistry registry, TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: entity
      type: '{TModelEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
      description: ''
    content.vb: Public Shared Function CreateAsync(Of TModelEntity, TApiEntity As Class)(registry As IApizrEnumerableRegistry, entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Extending.ApizrRegistryExtensions.CreateAsync*
  nameWithType.vb: ApizrRegistryExtensions.CreateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.CreateAsync(Of TModelEntity, TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: CreateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeCreateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeCreateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeCreateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync<TModelEntity, TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeCreateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 644
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a mapped Create request, returning a mapped result
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TModelEntity>> SafeCreateAsync<TModelEntity, TApiEntity>(this IApizrEnumerableRegistry registry, TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: entity
      type: '{TModelEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelEntity}}}
      description: ''
    content.vb: Public Shared Function SafeCreateAsync(Of TModelEntity, TApiEntity As Class)(registry As IApizrEnumerableRegistry, entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelEntity))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeCreateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync(Of TModelEntity, TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeCreateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 664
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request
  example: []
  syntax:
    content: 'public static Task<TReadAllResult> ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(this IApizrEnumerableRegistry registry, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TReadAllResult
      description: The "ReadAll" query result type
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
      description: ''
    content.vb: Public Shared Function ReadAllAsync(Of TApiEntity As Class, TApiEntityKey, TReadAllResult)(registry As IApizrEnumerableRegistry, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAllAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 679
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TReadAllResult>> SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult>(this IApizrEnumerableRegistry registry, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TReadAllResult
      description: The "ReadAll" query result type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TReadAllResult}}}
      description: ''
    content.vb: Public Shared Function SafeReadAllAsync(Of TApiEntity As Class, TApiEntityKey, TReadAllResult)(registry As IApizrEnumerableRegistry, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TReadAllResult))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 695
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<TModelReadAllResult> ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(this IApizrEnumerableRegistry registry, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelReadAllResult
      description: The model result type to map to
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TApiReadAllResult
      description: The api result type to map from
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
      description: ''
    content.vb: Public Shared Function ReadAllAsync(Of TModelReadAllResult, TApiEntity As Class, TApiEntityKey, TApiReadAllResult)(registry As IApizrEnumerableRegistry, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(IApizrEnumerableRegistry, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 713
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TModelReadAllResult>> SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult>(this IApizrEnumerableRegistry registry, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelReadAllResult
      description: The model result type to map to
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TApiReadAllResult
      description: The api result type to map from
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelReadAllResult}}}
      description: ''
    content.vb: Public Shared Function SafeReadAllAsync(Of TModelReadAllResult, TApiEntity As Class, TApiEntityKey, TApiReadAllResult)(registry As IApizrEnumerableRegistry, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelReadAllResult))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult)(IApizrEnumerableRegistry, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 733
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request with some parameters
  example: []
  syntax:
    content: 'public static Task<TReadAllResult> ReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(this IApizrEnumerableRegistry registry, TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TReadAllResult
      description: The api result type
    - id: TReadAllParams
      description: The ReadAll parameters type
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
      description: ''
    content.vb: Public Shared Function ReadAllAsync(Of TApiEntity As Class, TApiEntityKey, TReadAllResult, TReadAllParams)(registry As IApizrEnumerableRegistry, readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAllAsync``4(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 751
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request with some parameters
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TReadAllResult>> SafeReadAllAsync<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>(this IApizrEnumerableRegistry registry, TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TReadAllResult
      description: The api result type
    - id: TReadAllParams
      description: The ReadAll parameters type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TReadAllResult}}}
      description: ''
    content.vb: Public Shared Function SafeReadAllAsync(Of TApiEntity As Class, TApiEntityKey, TReadAllResult, TReadAllParams)(registry As IApizrEnumerableRegistry, readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TReadAllResult))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAllAsync(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 771
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request with some parameters, returning mapped result
  example: []
  syntax:
    content: 'public static Task<TModelReadAllResult> ReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(this IApizrEnumerableRegistry registry, TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelReadAllResult
      description: The model result type to map to
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TApiReadAllResult
      description: The api result type to map from
    - id: TReadAllParams
      description: The ReadAll parameters type
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
      description: ''
    content.vb: Public Shared Function ReadAllAsync(Of TModelReadAllResult, TApiEntity As Class, TApiEntityKey, TApiReadAllResult, TReadAllParams)(registry As IApizrEnumerableRegistry, readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAllAsync``5(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``4,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(IApizrEnumerableRegistry, TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAllAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 792
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a ReadAll request with some parameters, returning mapped result
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TModelReadAllResult>> SafeReadAllAsync<TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams>(this IApizrEnumerableRegistry registry, TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelReadAllResult
      description: The model result type to map to
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    - id: TApiReadAllResult
      description: The api result type to map from
    - id: TReadAllParams
      description: The ReadAll parameters type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelReadAllResult}}}
      description: ''
    content.vb: Public Shared Function SafeReadAllAsync(Of TModelReadAllResult, TApiEntity As Class, TApiEntityKey, TApiReadAllResult, TReadAllParams)(registry As IApizrEnumerableRegistry, readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelReadAllResult))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAllAsync(Of TModelReadAllResult, TApiEntity, TApiEntityKey, TApiReadAllResult, TReadAllParams)(IApizrEnumerableRegistry, TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 814
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request
  example: []
  syntax:
    content: 'public static Task<TApiEntity> ReadAsync<TApiEntity>(this IApizrEnumerableRegistry registry, int key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
      description: ''
    content.vb: Public Shared Function ReadAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 828
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TApiEntity>> SafeReadAsync<TApiEntity>(this IApizrEnumerableRegistry registry, int key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiEntity}}}
      description: ''
    content.vb: Public Shared Function SafeReadAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TApiEntity))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAsync<TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 843
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request
  example: []
  syntax:
    content: 'public static Task<TApiEntity> ReadAsync<TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
      description: ''
    content.vb: Public Shared Function ReadAsync(Of TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAsync(Of TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync<TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 858
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TApiEntity>> SafeReadAsync<TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiEntity}}}
      description: ''
    content.vb: Public Shared Function SafeReadAsync(Of TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TApiEntity))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync(Of TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAsync<TModelEntity, TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 874
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<TModelEntity> ReadAsync<TModelEntity, TApiEntity>(this IApizrEnumerableRegistry registry, int key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
      description: ''
    content.vb: Public Shared Function ReadAsync(Of TModelEntity, TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAsync(Of TModelEntity, TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync<TModelEntity, TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 890
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TModelEntity>> SafeReadAsync<TModelEntity, TApiEntity>(this IApizrEnumerableRegistry registry, int key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelEntity}}}
      description: ''
    content.vb: Public Shared Function SafeReadAsync(Of TModelEntity, TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelEntity))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync(Of TModelEntity, TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.ReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 907
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<TModelEntity> ReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
      description: ''
    content.vb: Public Shared Function ReadAsync(Of TModelEntity, TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Extending.ApizrRegistryExtensions.ReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.ReadAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ReadAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ReadAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeReadAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeReadAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 924
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a Read request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<IApizrResponse<TModelEntity>> SafeReadAsync<TModelEntity, TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelEntity}}}
      description: ''
    content.vb: Public Shared Function SafeReadAsync(Of TModelEntity, TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse(Of TModelEntity))
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeReadAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeReadAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync<TApiEntity>(IApizrEnumerableRegistry, int, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.UpdateAsync<TApiEntity>(IApizrEnumerableRegistry, int, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: UpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 944
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Update request
  example: []
  syntax:
    content: 'public static Task UpdateAsync<TApiEntity>(this IApizrEnumerableRegistry registry, int key, TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: entity
      type: '{TApiEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function UpdateAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.UpdateAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UpdateAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeUpdateAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeUpdateAsync<TApiEntity>(IApizrEnumerableRegistry, int, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeUpdateAsync<TApiEntity>(IApizrEnumerableRegistry, int, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeUpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 960
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Update request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse> SafeUpdateAsync<TApiEntity>(this IApizrEnumerableRegistry registry, int key, TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: entity
      type: '{TApiEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function SafeUpdateAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeUpdateAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeUpdateAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.UpdateAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync<TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: UpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 977
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Update request
  example: []
  syntax:
    content: 'public static Task UpdateAsync<TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: entity
      type: '{TApiEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function UpdateAsync(Of TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.UpdateAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync(Of TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UpdateAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeUpdateAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeUpdateAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync<TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeUpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 994
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Update request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse> SafeUpdateAsync<TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: entity
      type: '{TApiEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function SafeUpdateAsync(Of TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeUpdateAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync(Of TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeUpdateAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.UpdateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync<TModelEntity, TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: UpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1012
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a mapped Update request, returning mapped result
  example: []
  syntax:
    content: 'public static Task UpdateAsync<TModelEntity, TApiEntity>(this IApizrEnumerableRegistry registry, int key, TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: entity
      type: '{TModelEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function UpdateAsync(Of TModelEntity, TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.UpdateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync(Of TModelEntity, TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UpdateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeUpdateAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeUpdateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeUpdateAsync<TModelEntity, TApiEntity>(IApizrEnumerableRegistry, int, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync<TModelEntity, TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeUpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1030
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a mapped Update request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<IApizrResponse> SafeUpdateAsync<TModelEntity, TApiEntity>(this IApizrEnumerableRegistry registry, int key, TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: entity
      type: '{TModelEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function SafeUpdateAsync(Of TModelEntity, TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeUpdateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync(Of TModelEntity, TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeUpdateAsync(Of TModelEntity, TApiEntity)(IApizrEnumerableRegistry, Integer, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.UpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: UpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.UpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: UpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1050
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a mapped Update request, returning mapped result
  example: []
  syntax:
    content: 'public static Task UpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: entity
      type: '{TModelEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function UpdateAsync(Of TModelEntity, TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.UpdateAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UpdateAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeUpdateAsync``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeUpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeUpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeUpdateAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1069
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send a mapped Update request, returning mapped result
  example: []
  syntax:
    content: 'public static Task<IApizrResponse> SafeUpdateAsync<TModelEntity, TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: entity
      type: '{TModelEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function SafeUpdateAsync(Of TModelEntity, TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeUpdateAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeUpdateAsync(Of TModelEntity, TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.DeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.DeleteAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: DeleteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1090
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Delete request
  example: []
  syntax:
    content: 'public static Task DeleteAsync<TApiEntity>(this IApizrEnumerableRegistry registry, int key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function DeleteAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync*
  nameWithType.vb: ApizrRegistryExtensions.DeleteAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DeleteAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeDeleteAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeDeleteAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeDeleteAsync<TApiEntity>(IApizrEnumerableRegistry, int, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync<TApiEntity>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, int, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeDeleteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1104
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Delete request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse> SafeDeleteAsync<TApiEntity>(this IApizrEnumerableRegistry registry, int key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: System.Int32
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function SafeDeleteAsync(Of TApiEntity As Class)(registry As IApizrEnumerableRegistry, key As Integer, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeDeleteAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync(Of TApiEntity)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Integer, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeDeleteAsync(Of TApiEntity)(IApizrEnumerableRegistry, Integer, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.DeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.DeleteAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync<TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: DeleteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1119
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Delete request
  example: []
  syntax:
    content: 'public static Task DeleteAsync<TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function DeleteAsync(Of TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync*
  nameWithType.vb: ApizrRegistryExtensions.DeleteAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync(Of TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DeleteAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SafeDeleteAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: SafeDeleteAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrRegistryExtensions.SafeDeleteAsync<TApiEntity, TApiEntityKey>(IApizrEnumerableRegistry, TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync<TApiEntity, TApiEntityKey>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: SafeDeleteAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1134
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Send an Delete request
  example: []
  syntax:
    content: 'public static Task<IApizrResponse> SafeDeleteAsync<TApiEntity, TApiEntityKey>(this IApizrEnumerableRegistry registry, TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TApiEntity : class'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity's crud key type
    return:
      type: System.Threading.Tasks.Task{Apizr.IApizrResponse}
      description: ''
    content.vb: Public Shared Function SafeDeleteAsync(Of TApiEntity As Class, TApiEntityKey)(registry As IApizrEnumerableRegistry, key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of IApizrResponse)
  overload: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync*
  nameWithType.vb: ApizrRegistryExtensions.SafeDeleteAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync(Of TApiEntity, TApiEntityKey)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SafeDeleteAsync(Of TApiEntity, TApiEntityKey)(IApizrEnumerableRegistry, TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  id: ClearCacheAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ClearCacheAsync<TWebApi>(IApizrEnumerableRegistry, CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi>(IApizrEnumerableRegistry, CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearCacheAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1154
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Clear all cache
  example: []
  syntax:
    content: public static Task<bool> ClearCacheAsync<TWebApi>(this IApizrEnumerableRegistry registry, CancellationToken cancellationToken = default)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Shared Function ClearCacheAsync(Of TWebApi)(registry As IApizrEnumerableRegistry, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync*
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)(IApizrEnumerableRegistry, CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi)(IApizrEnumerableRegistry, CancellationToken)
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  id: ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TResult>>>, CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<TResult>>>, CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TResult>>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearCacheAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1167
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Clear the cache of a specific request
  example: []
  syntax:
    content: public static Task<bool> ClearCacheAsync<TWebApi, TResult>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<TResult>>> executeApiMethod, CancellationToken cancellationToken = default)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TResult}}}}
      description: The specific <code class="typeparamref">TWebApi</code>'s task to clear cache for
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TResult
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Shared Function ClearCacheAsync(Of TWebApi, TResult)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TResult))), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync*
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TResult))), CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TResult))), System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of TResult))), CancellationToken)
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Threading.CancellationToken)
  id: ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<ApiResponse<TResult>>>>, CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<ApiResponse<TResult>>>>, CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TResult>>>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearCacheAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1181
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Clear the cache of a specific request
  example: []
  syntax:
    content: public static Task<bool> ClearCacheAsync<TWebApi, TResult>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<ApiResponse<TResult>>>> executeApiMethod, CancellationToken cancellationToken = default)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TResult}}}}}
      description: The specific <code class="typeparamref">TWebApi</code>'s task to clear cache for
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TResult
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Shared Function ClearCacheAsync(Of TWebApi, TResult)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TResult)))), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync*
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TResult)))), CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TResult)))), System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TResult)))), CancellationToken)
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Threading.CancellationToken)
  commentId: M:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Threading.CancellationToken)
  id: ClearCacheAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Apizr.Extending.ApizrRegistryExtensions
  langs:
  - csharp
  - vb
  name: ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse<TResult>>>>, CancellationToken)
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(IApizrEnumerableRegistry, Expression<Func<TWebApi, Task<IApiResponse<TResult>>>>, CancellationToken)
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync<TWebApi, TResult>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TResult>>>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Extending/ApizrRegistryExtensions.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearCacheAsync
    path: ../../Src/Apizr/Extending/ApizrRegistryExtensions.cs
    startLine: 1195
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: Clear the cache of a specific request
  example: []
  syntax:
    content: public static Task<bool> ClearCacheAsync<TWebApi, TResult>(this IApizrEnumerableRegistry registry, Expression<Func<TWebApi, Task<IApiResponse<TResult>>>> executeApiMethod, CancellationToken cancellationToken = default)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TResult}}}}}
      description: The specific <code class="typeparamref">TWebApi</code>'s task to clear cache for
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    typeParameters:
    - id: TWebApi
      description: The web api to manage
    - id: TResult
      description: The <code class="typeparamref">TWebApi</code>'s task result
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Shared Function ClearCacheAsync(Of TWebApi, TResult)(registry As IApizrEnumerableRegistry, executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TResult)))), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync*
  nameWithType.vb: ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TResult)))), CancellationToken)
  fullName.vb: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync(Of TWebApi, TResult)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TResult)))), System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TWebApi, TResult)(IApizrEnumerableRegistry, Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TResult)))), CancellationToken)
references:
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  href: Apizr.html
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Extending
    name: Extending
    href: Apizr.Extending.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Extending
    name: Extending
    href: Apizr.Extending.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_ExecuteAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Linq_Expressions_Expression_System_Func___0_System_Threading_Tasks_Task___System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: ExecuteAsync
  nameWithType: ApizrRegistryExtensions.ExecuteAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.ExecuteAsync
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistry
  parent: Apizr.Configuring.Registry
  href: Apizr.Configuring.Registry.IApizrEnumerableRegistry.html
  name: IApizrEnumerableRegistry
  nameWithType: IApizrEnumerableRegistry
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task>>
  nameWithType: Expression<Func<TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: )
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  href: Apizr.html
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Configuring
    name: Configuring
    href: Apizr.Configuring.html
  - name: .
  - uid: Apizr.Configuring.Registry
    name: Registry
    href: Apizr.Configuring.Registry.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Configuring
    name: Configuring
    href: Apizr.Configuring.html
  - name: .
  - uid: Apizr.Configuring.Registry
    name: Registry
    href: Apizr.Configuring.Registry.html
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiData, Task>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: )
- uid: '{TModelData}'
  commentId: '!:TModelData'
  definition: TModelData
  name: TModelData
  nameWithType: TModelData
  fullName: TModelData
- uid: TModelData
  name: TModelData
  nameWithType: TModelData
  fullName: TModelData
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{Refit.IApiResponse}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task<IApiResponse>>>
  nameWithType: Expression<Func<TWebApi, Task<IApiResponse>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of IApiResponse)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse)))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of IApiResponse)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse>
  nameWithType: Task<IApizrResponse>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse>
  nameWithType.vb: Task(Of IApizrResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse)
  name.vb: Task(Of IApizrResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse
    name: IApizrResponse
    href: Apizr.IApizrResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse
    name: IApizrResponse
    href: Apizr.IApizrResponse.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task<TApiData>>>
  nameWithType: Expression<Func<TWebApi, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{{TApiData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TApiData>
  nameWithType: Task<TApiData>
  fullName: System.Threading.Tasks.Task<TApiData>
  nameWithType.vb: Task(Of TApiData)
  fullName.vb: System.Threading.Tasks.Task(Of TApiData)
  name.vb: Task(Of TApiData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiData
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{Refit.ApiResponse{``0}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>>
  nameWithType: Expression<Func<TWebApi, Task<ApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiData}}}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse<TApiData>>
  nameWithType: Task<IApizrResponse<TApiData>>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse<TApiData>>
  nameWithType.vb: Task(Of IApizrResponse(Of TApiData))
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse(Of TApiData))
  name.vb: Task(Of IApizrResponse(Of TApiData))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{Refit.IApiResponse{``0}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>>
  nameWithType: Expression<Func<TWebApi, Task<IApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{Refit.IApiResponse}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{Refit.ApiResponse{``0}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task<ApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of ApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{Refit.IApiResponse{``0}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task<IApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of IApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{{TModelData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TModelData>
  nameWithType: Task<TModelData>
  fullName: System.Threading.Tasks.Task<TModelData>
  nameWithType.vb: Task(Of TModelData)
  fullName.vb: System.Threading.Tasks.Task(Of TModelData)
  name.vb: Task(Of TModelData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TModelData
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TModelData
  - name: )
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelData}}}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse<TModelData>>
  nameWithType: Task<IApizrResponse<TModelData>>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse<TModelData>>
  nameWithType.vb: Task(Of IApizrResponse(Of TModelData))
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse(Of TModelData))
  name.vb: Task(Of IApizrResponse(Of TModelData))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: <
  - name: TModelData
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelData
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{Refit.IApiResponse}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiData, Task<IApiResponse>>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task<IApiResponse>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse)))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiData, Task<TApiData>>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiData, Task<ApiResponse<TApiData>>>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task<ApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of ApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of ApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiData, Task<IApiResponse<TApiData>>>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task<IApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of IApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{Refit.IApiResponse}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse
    name: IApiResponse
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<ApiResponse<TApiData>>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<ApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of ApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of ApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse<TApiData>>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<IApiResponse<TApiData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiData>>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse(Of TApiData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiData))))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of IApiResponse(Of TApiData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: <
  - name: TApiData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>
  nameWithType: Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData)))
  name.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiResultData
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiResultData
  - name: )
  - name: )
  - name: )
- uid: '{TModelRequestData}'
  commentId: '!:TModelRequestData'
  definition: TModelRequestData
  name: TModelRequestData
  nameWithType: TModelRequestData
  fullName: TModelRequestData
- uid: System.Threading.Tasks.Task{{TModelResultData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TModelResultData>
  nameWithType: Task<TModelResultData>
  fullName: System.Threading.Tasks.Task<TModelResultData>
  nameWithType.vb: Task(Of TModelResultData)
  fullName.vb: System.Threading.Tasks.Task(Of TModelResultData)
  name.vb: Task(Of TModelResultData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TModelResultData
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TModelResultData
  - name: )
- uid: TModelRequestData
  name: TModelRequestData
  nameWithType: TModelRequestData
  fullName: TModelRequestData
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiResultData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>
  nameWithType: Expression<Func<TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiResultData>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiResultData))))
  name.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: <
  - name: TApiResultData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiResultData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelResultData}}}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse<TModelResultData>>
  nameWithType: Task<IApizrResponse<TModelResultData>>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse<TModelResultData>>
  nameWithType.vb: Task(Of IApizrResponse(Of TModelResultData))
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse(Of TModelResultData))
  name.vb: Task(Of IApizrResponse(Of TModelResultData))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: <
  - name: TModelResultData
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelResultData
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiResultData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>
  nameWithType: Expression<Func<TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiResultData>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiResultData))))
  name.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: <
  - name: TApiResultData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiResultData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiResultData
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiResultData
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.ApiResponse{{TApiResultData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{Refit.ApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<ApiResponse<TApiResultData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.ApiResponse<TApiResultData>>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TApiResultData))))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of ApiResponse(Of TApiResultData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: <
  - name: TApiResultData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiResultData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{Refit.IApiResponse{{TApiResultData}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{Refit.IApiResponse{``1}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<IApiResponse<TApiResultData>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<Refit.IApiResponse<TApiResultData>>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TApiResultData))))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of IApiResponse(Of TApiResultData))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: <
  - name: TApiResultData
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    href: Apizr.Configuring.Request.IApizrRequestOptions.html
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TApiRequestData
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiResultData
  - name: )
  - name: )
  - name: )
  - name: )
- uid: Apizr.Extending.ApizrRegistryExtensions.CreateAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.CreateAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_CreateAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry___0_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: CreateAsync
  nameWithType: ApizrRegistryExtensions.CreateAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.CreateAsync
- uid: '{TApiEntity}'
  commentId: '!:TApiEntity'
  definition: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Threading.Tasks.Task{{TApiEntity}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TApiEntity>
  nameWithType: Task<TApiEntity>
  fullName: System.Threading.Tasks.Task<TApiEntity>
  nameWithType.vb: Task(Of TApiEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TApiEntity)
  name.vb: Task(Of TApiEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TApiEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TApiEntity
  - name: )
- uid: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_SafeCreateAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry___0_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SafeCreateAsync
  nameWithType: ApizrRegistryExtensions.SafeCreateAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeCreateAsync
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TApiEntity}}}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse<TApiEntity>>
  nameWithType: Task<IApizrResponse<TApiEntity>>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse<TApiEntity>>
  nameWithType.vb: Task(Of IApizrResponse(Of TApiEntity))
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse(Of TApiEntity))
  name.vb: Task(Of IApizrResponse(Of TApiEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: <
  - name: TApiEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TApiEntity
  - name: )
  - name: )
- uid: '{TModelEntity}'
  commentId: '!:TModelEntity'
  definition: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: System.Threading.Tasks.Task{{TModelEntity}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TModelEntity>
  nameWithType: Task<TModelEntity>
  fullName: System.Threading.Tasks.Task<TModelEntity>
  nameWithType.vb: Task(Of TModelEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TModelEntity)
  name.vb: Task(Of TModelEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TModelEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TModelEntity
  - name: )
- uid: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelEntity}}}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse<TModelEntity>>
  nameWithType: Task<IApizrResponse<TModelEntity>>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse<TModelEntity>>
  nameWithType.vb: Task(Of IApizrResponse(Of TModelEntity))
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse(Of TModelEntity))
  name.vb: Task(Of IApizrResponse(Of TModelEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: <
  - name: TModelEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelEntity
  - name: )
  - name: )
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_ReadAllAsync__3_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: ReadAllAsync
  nameWithType: ApizrRegistryExtensions.ReadAllAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAllAsync
- uid: System.Threading.Tasks.Task{{TReadAllResult}}
  commentId: T:System.Threading.Tasks.Task{``2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TReadAllResult>
  nameWithType: Task<TReadAllResult>
  fullName: System.Threading.Tasks.Task<TReadAllResult>
  nameWithType.vb: Task(Of TReadAllResult)
  fullName.vb: System.Threading.Tasks.Task(Of TReadAllResult)
  name.vb: Task(Of TReadAllResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TReadAllResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TReadAllResult
  - name: )
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_SafeReadAllAsync__3_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SafeReadAllAsync
  nameWithType: ApizrRegistryExtensions.SafeReadAllAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAllAsync
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TReadAllResult}}}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse{``2}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse<TReadAllResult>>
  nameWithType: Task<IApizrResponse<TReadAllResult>>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse<TReadAllResult>>
  nameWithType.vb: Task(Of IApizrResponse(Of TReadAllResult))
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse(Of TReadAllResult))
  name.vb: Task(Of IApizrResponse(Of TReadAllResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: <
  - name: TReadAllResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TReadAllResult
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{{TModelReadAllResult}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TModelReadAllResult>
  nameWithType: Task<TModelReadAllResult>
  fullName: System.Threading.Tasks.Task<TModelReadAllResult>
  nameWithType.vb: Task(Of TModelReadAllResult)
  fullName.vb: System.Threading.Tasks.Task(Of TModelReadAllResult)
  name.vb: Task(Of TModelReadAllResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TModelReadAllResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TModelReadAllResult
  - name: )
- uid: System.Threading.Tasks.Task{Apizr.IApizrResponse{{TModelReadAllResult}}}
  commentId: T:System.Threading.Tasks.Task{Apizr.IApizrResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IApizrResponse<TModelReadAllResult>>
  nameWithType: Task<IApizrResponse<TModelReadAllResult>>
  fullName: System.Threading.Tasks.Task<Apizr.IApizrResponse<TModelReadAllResult>>
  nameWithType.vb: Task(Of IApizrResponse(Of TModelReadAllResult))
  fullName.vb: System.Threading.Tasks.Task(Of Apizr.IApizrResponse(Of TModelReadAllResult))
  name.vb: Task(Of IApizrResponse(Of TModelReadAllResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: <
  - name: TModelReadAllResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.IApizrResponse`1
    name: IApizrResponse
    href: Apizr.IApizrResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelReadAllResult
  - name: )
  - name: )
- uid: '{TReadAllParams}'
  commentId: '!:TReadAllParams'
  definition: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Extending.ApizrRegistryExtensions.ReadAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.ReadAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_ReadAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Int32_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: ReadAsync
  nameWithType: ApizrRegistryExtensions.ReadAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.ReadAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_SafeReadAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Int32_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SafeReadAsync
  nameWithType: ApizrRegistryExtensions.SafeReadAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeReadAsync
- uid: '{TApiEntityKey}'
  commentId: '!:TApiEntityKey'
  definition: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.UpdateAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_UpdateAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Int32___0_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: UpdateAsync
  nameWithType: ApizrRegistryExtensions.UpdateAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.UpdateAsync
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_SafeUpdateAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Int32___0_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SafeUpdateAsync
  nameWithType: ApizrRegistryExtensions.SafeUpdateAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeUpdateAsync
- uid: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.DeleteAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_DeleteAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Int32_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: DeleteAsync
  nameWithType: ApizrRegistryExtensions.DeleteAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.DeleteAsync
- uid: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_SafeDeleteAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Int32_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SafeDeleteAsync
  nameWithType: ApizrRegistryExtensions.SafeDeleteAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.SafeDeleteAsync
- uid: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync*
  commentId: Overload:Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync
  href: Apizr.Extending.ApizrRegistryExtensions.html#Apizr_Extending_ApizrRegistryExtensions_ClearCacheAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_Threading_CancellationToken_
  name: ClearCacheAsync
  nameWithType: ApizrRegistryExtensions.ClearCacheAsync
  fullName: Apizr.Extending.ApizrRegistryExtensions.ClearCacheAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TResult}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task<TResult>>>
  nameWithType: Expression<Func<TWebApi, Task<TResult>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TResult>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of TResult)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TResult)))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.ApiResponse{{TResult}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{Refit.ApiResponse{``0}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task<ApiResponse<TResult>>>>
  nameWithType: Expression<Func<TWebApi, Task<ApiResponse<TResult>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.ApiResponse<TResult>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TResult))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.ApiResponse(Of TResult))))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of ApiResponse(Of TResult))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.ApiResponse`1
    name: ApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{Refit.IApiResponse{{TResult}}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{Refit.IApiResponse{``0}}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task<IApiResponse<TResult>>>>
  nameWithType: Expression<Func<TWebApi, Task<IApiResponse<TResult>>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<Refit.IApiResponse<TResult>>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TResult))))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of Refit.IApiResponse(Of TResult))))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of IApiResponse(Of TResult))))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Refit.IApiResponse`1
    name: IApiResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
  - name: )
  - name: )
