### YamlMime:ManagedReference
items:
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  commentId: T:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  id: IApizrExtendedCommonOptions
  parent: Apizr.Extending.Configuring.Common
  children:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis
  langs:
  - csharp
  - vb
  name: IApizrExtendedCommonOptions
  nameWithType: IApizrExtendedCommonOptions
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  type: Interface
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: IApizrExtendedCommonOptions
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 16
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nOptions available at common level for extended registrations\n"
  example: []
  syntax:
    content: 'public interface IApizrExtendedCommonOptions : IApizrExtendedCommonOptionsBase, IApizrCommonOptionsBase, IApizrSharedRegistrationOptionsBase, IApizrExtendedSharedOptions, IApizrExtendedSharedOptionsBase, IApizrGlobalSharedRegistrationOptionsBase, IApizrGlobalSharedOptionsBase'
    content.vb: >-
      Public Interface IApizrExtendedCommonOptions
          Inherits IApizrExtendedCommonOptionsBase, IApizrExtendedSharedOptions
  inheritedMembers:
  - Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseUriFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseAddressFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BasePathFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpTracerModeFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.TrafficVerbosityFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.LogLevelsFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientHandlerFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientBuilder
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HeadersFactory
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase.DelegatingHandlersExtendedFactories
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType
  id: ConnectivityHandlerType
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: ConnectivityHandlerType
  nameWithType: IApizrExtendedCommonOptions.ConnectivityHandlerType
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ConnectivityHandlerType
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 21
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nType of the connectivity handler\n"
  example: []
  syntax:
    content: Type ConnectivityHandlerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property ConnectivityHandlerType As Type
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType
  id: CacheHandlerType
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: CacheHandlerType
  nameWithType: IApizrExtendedCommonOptions.CacheHandlerType
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: CacheHandlerType
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 26
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nType of the cache handler\n"
  example: []
  syntax:
    content: Type CacheHandlerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property CacheHandlerType As Type
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType
  id: MappingHandlerType
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: MappingHandlerType
  nameWithType: IApizrExtendedCommonOptions.MappingHandlerType
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: MappingHandlerType
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 31
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nType of the mapping handler\n"
  example: []
  syntax:
    content: Type MappingHandlerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property MappingHandlerType As Type
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory
  id: RefitSettingsFactory
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: RefitSettingsFactory
  nameWithType: IApizrExtendedCommonOptions.RefitSettingsFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: RefitSettingsFactory
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 36
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nRefit settings factory\n"
  example: []
  syntax:
    content: Func<IServiceProvider, RefitSettings> RefitSettingsFactory { get; }
    parameters: []
    return:
      type: System.Func{System.IServiceProvider,Refit.RefitSettings}
    content.vb: ReadOnly Property RefitSettingsFactory As Func(Of IServiceProvider, RefitSettings)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory
  id: ConnectivityHandlerFactory
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: ConnectivityHandlerFactory
  nameWithType: IApizrExtendedCommonOptions.ConnectivityHandlerFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ConnectivityHandlerFactory
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 41
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nConnectivity handler factory\n"
  example: []
  syntax:
    content: Func<IServiceProvider, IConnectivityHandler> ConnectivityHandlerFactory { get; }
    parameters: []
    return:
      type: System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler}
    content.vb: ReadOnly Property ConnectivityHandlerFactory As Func(Of IServiceProvider, IConnectivityHandler)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory
  id: CacheHandlerFactory
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: CacheHandlerFactory
  nameWithType: IApizrExtendedCommonOptions.CacheHandlerFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: CacheHandlerFactory
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 46
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nCache handler factory\n"
  example: []
  syntax:
    content: Func<IServiceProvider, ICacheHandler> CacheHandlerFactory { get; }
    parameters: []
    return:
      type: System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler}
    content.vb: ReadOnly Property CacheHandlerFactory As Func(Of IServiceProvider, ICacheHandler)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory
  id: MappingHandlerFactory
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: MappingHandlerFactory
  nameWithType: IApizrExtendedCommonOptions.MappingHandlerFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: MappingHandlerFactory
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 51
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nMapping handler factory\n"
  example: []
  syntax:
    content: Func<IServiceProvider, IMappingHandler> MappingHandlerFactory { get; }
    parameters: []
    return:
      type: System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler}
    content.vb: ReadOnly Property MappingHandlerFactory As Func(Of IServiceProvider, IMappingHandler)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities
  id: CrudEntities
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: CrudEntities
  nameWithType: IApizrExtendedCommonOptions.CrudEntities
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: CrudEntities
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 56
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nEntities auto registered with <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: IDictionary<Type, CrudEntityAttribute> CrudEntities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Type,Apizr.Requesting.CrudEntityAttribute}
    content.vb: ReadOnly Property CrudEntities As IDictionary(Of Type, CrudEntityAttribute)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis
  id: WebApis
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: WebApis
  nameWithType: IApizrExtendedCommonOptions.WebApis
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: WebApis
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 61
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nWeb apis auto registered with <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: IDictionary<Type, WebApiAttribute> WebApis { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Type,Apizr.WebApiAttribute}
    content.vb: ReadOnly Property WebApis As IDictionary(Of Type, WebApiAttribute)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings
  id: ObjectMappings
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: ObjectMappings
  nameWithType: IApizrExtendedCommonOptions.ObjectMappings
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ObjectMappings
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 66
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nMappings between api request object and model object used for classic auto registration\n"
  example: []
  syntax:
    content: IDictionary<Type, MappedWithAttribute> ObjectMappings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Type,Apizr.Mapping.MappedWithAttribute}
    content.vb: ReadOnly Property ObjectMappings As IDictionary(Of Type, MappedWithAttribute)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries
  id: PostRegistries
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: PostRegistries
  nameWithType: IApizrExtendedCommonOptions.PostRegistries
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: PostRegistries
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 71
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nOther registries plugged during post registration actions\n"
  example: []
  syntax:
    content: IDictionary<Type, IApizrExtendedConcurrentRegistryBase> PostRegistries { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Type,Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase}
    content.vb: ReadOnly Property PostRegistries As IDictionary(Of Type, IApizrExtendedConcurrentRegistryBase)
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions
  commentId: P:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions
  id: PostRegistrationActions
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions
  langs:
  - csharp
  - vb
  name: PostRegistrationActions
  nameWithType: IApizrExtendedCommonOptions.PostRegistrationActions
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: PostRegistrationActions
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Common/IApizrExtendedCommonOptions.cs
    startLine: 76
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Common
  summary: "\nPost registration actions\n"
  example: []
  syntax:
    content: IList<Action<Type, IServiceCollection>> PostRegistrationActions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Action{System.Type,Microsoft.Extensions.DependencyInjection.IServiceCollection}}
    content.vb: ReadOnly Property PostRegistrationActions As IList(Of Action(Of Type, IServiceCollection))
  overload: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Apizr.Extending.Configuring.Common
  commentId: N:Apizr.Extending.Configuring.Common
  name: Apizr.Extending.Configuring.Common
  nameWithType: Apizr.Extending.Configuring.Common
  fullName: Apizr.Extending.Configuring.Common
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  commentId: P:Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
  parent: Apizr.Configuring.Common.IApizrCommonOptionsBase
  name: RefitSettings
  nameWithType: IApizrCommonOptionsBase.RefitSettings
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBase.RefitSettings
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseUriFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseUriFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: BaseUriFactory
  nameWithType: IApizrExtendedSharedOptions.BaseUriFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseUriFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseAddressFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseAddressFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: BaseAddressFactory
  nameWithType: IApizrExtendedSharedOptions.BaseAddressFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BaseAddressFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BasePathFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BasePathFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: BasePathFactory
  nameWithType: IApizrExtendedSharedOptions.BasePathFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.BasePathFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpTracerModeFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpTracerModeFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: HttpTracerModeFactory
  nameWithType: IApizrExtendedSharedOptions.HttpTracerModeFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpTracerModeFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.TrafficVerbosityFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.TrafficVerbosityFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: TrafficVerbosityFactory
  nameWithType: IApizrExtendedSharedOptions.TrafficVerbosityFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.TrafficVerbosityFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.LogLevelsFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.LogLevelsFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: LogLevelsFactory
  nameWithType: IApizrExtendedSharedOptions.LogLevelsFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.LogLevelsFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientHandlerFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientHandlerFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: HttpClientHandlerFactory
  nameWithType: IApizrExtendedSharedOptions.HttpClientHandlerFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientHandlerFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientBuilder
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientBuilder
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: HttpClientBuilder
  nameWithType: IApizrExtendedSharedOptions.HttpClientBuilder
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HttpClientBuilder
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HeadersFactory
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HeadersFactory
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  name: HeadersFactory
  nameWithType: IApizrExtendedSharedOptions.HeadersFactory
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions.HeadersFactory
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase.DelegatingHandlersExtendedFactories
  commentId: P:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase.DelegatingHandlersExtendedFactories
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase
  name: DelegatingHandlersExtendedFactories
  nameWithType: IApizrExtendedSharedOptionsBase.DelegatingHandlersExtendedFactories
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase.DelegatingHandlersExtendedFactories
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BaseUri
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BaseUri
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseUri
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BaseAddress
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BaseAddress
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: BasePath
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.BasePath
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.BasePath
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: ContextFactory
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.ContextFactory
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  name: PrimaryHandlerFactory
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase.PrimaryHandlerFactory
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: HttpTracerMode
  nameWithType: IApizrGlobalSharedOptionsBase.HttpTracerMode
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HttpTracerMode
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: TrafficVerbosity
  nameWithType: IApizrGlobalSharedOptionsBase.TrafficVerbosity
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.TrafficVerbosity
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: LogLevels
  nameWithType: IApizrGlobalSharedOptionsBase.LogLevels
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LogLevels
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: OnException
  nameWithType: IApizrGlobalSharedOptionsBase.OnException
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.OnException
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: LetThrowOnExceptionWithEmptyCache
  nameWithType: IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.LetThrowOnExceptionWithEmptyCache
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: HandlersParameters
  nameWithType: IApizrGlobalSharedOptionsBase.HandlersParameters
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.HandlersParameters
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  commentId: P:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  name: Headers
  nameWithType: IApizrGlobalSharedOptionsBase.Headers
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase.Headers
- uid: Apizr.Configuring.Common.IApizrCommonOptionsBase
  commentId: T:Apizr.Configuring.Common.IApizrCommonOptionsBase
  parent: Apizr.Configuring.Common
  name: IApizrCommonOptionsBase
  nameWithType: IApizrCommonOptionsBase
  fullName: Apizr.Configuring.Common.IApizrCommonOptionsBase
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  commentId: T:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
  parent: Apizr.Extending.Configuring.Shared
  name: IApizrExtendedSharedOptions
  nameWithType: IApizrExtendedSharedOptions
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptions
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase
  commentId: T:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase
  parent: Apizr.Extending.Configuring.Shared
  name: IApizrExtendedSharedOptionsBase
  nameWithType: IApizrExtendedSharedOptionsBase
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedRegistrationOptionsBase
  nameWithType: IApizrGlobalSharedRegistrationOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedOptionsBase
  nameWithType: IApizrGlobalSharedOptionsBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBase
- uid: Apizr.Configuring.Common
  commentId: N:Apizr.Configuring.Common
  name: Apizr.Configuring.Common
  nameWithType: Apizr.Configuring.Common
  fullName: Apizr.Configuring.Common
- uid: Apizr.Extending.Configuring.Shared
  commentId: N:Apizr.Extending.Configuring.Shared
  name: Apizr.Extending.Configuring.Shared
  nameWithType: Apizr.Extending.Configuring.Shared
  fullName: Apizr.Extending.Configuring.Shared
- uid: Apizr.Configuring.Shared
  commentId: N:Apizr.Configuring.Shared
  name: Apizr.Configuring.Shared
  nameWithType: Apizr.Configuring.Shared
  fullName: Apizr.Configuring.Shared
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType
  name: ConnectivityHandlerType
  nameWithType: IApizrExtendedCommonOptions.ConnectivityHandlerType
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType
  name: CacheHandlerType
  nameWithType: IApizrExtendedCommonOptions.CacheHandlerType
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerType
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType
  name: MappingHandlerType
  nameWithType: IApizrExtendedCommonOptions.MappingHandlerType
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerType
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory
  name: RefitSettingsFactory
  nameWithType: IApizrExtendedCommonOptions.RefitSettingsFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.RefitSettingsFactory
- uid: System.Func{System.IServiceProvider,Refit.RefitSettings}
  commentId: T:System.Func{System.IServiceProvider,Refit.RefitSettings}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, RefitSettings>
  nameWithType: Func<IServiceProvider, RefitSettings>
  fullName: System.Func<System.IServiceProvider, Refit.RefitSettings>
  nameWithType.vb: Func(Of IServiceProvider, RefitSettings)
  fullName.vb: System.Func(Of System.IServiceProvider, Refit.RefitSettings)
  name.vb: Func(Of IServiceProvider, RefitSettings)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory
  name: ConnectivityHandlerFactory
  nameWithType: IApizrExtendedCommonOptions.ConnectivityHandlerFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ConnectivityHandlerFactory
- uid: System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, IConnectivityHandler>
  nameWithType: Func<IServiceProvider, IConnectivityHandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Connecting.IConnectivityHandler>
  nameWithType.vb: Func(Of IServiceProvider, IConnectivityHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Connecting.IConnectivityHandler)
  name.vb: Func(Of IServiceProvider, IConnectivityHandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory
  name: CacheHandlerFactory
  nameWithType: IApizrExtendedCommonOptions.CacheHandlerFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CacheHandlerFactory
- uid: System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, ICacheHandler>
  nameWithType: Func<IServiceProvider, ICacheHandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Caching.ICacheHandler>
  nameWithType.vb: Func(Of IServiceProvider, ICacheHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Caching.ICacheHandler)
  name.vb: Func(Of IServiceProvider, ICacheHandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory
  name: MappingHandlerFactory
  nameWithType: IApizrExtendedCommonOptions.MappingHandlerFactory
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.MappingHandlerFactory
- uid: System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, IMappingHandler>
  nameWithType: Func<IServiceProvider, IMappingHandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Mapping.IMappingHandler>
  nameWithType.vb: Func(Of IServiceProvider, IMappingHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Mapping.IMappingHandler)
  name.vb: Func(Of IServiceProvider, IMappingHandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities
  name: CrudEntities
  nameWithType: IApizrExtendedCommonOptions.CrudEntities
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.CrudEntities
- uid: System.Collections.Generic.IDictionary{System.Type,Apizr.Requesting.CrudEntityAttribute}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,Apizr.Requesting.CrudEntityAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, CrudEntityAttribute>
  nameWithType: IDictionary<Type, CrudEntityAttribute>
  fullName: System.Collections.Generic.IDictionary<System.Type, Apizr.Requesting.CrudEntityAttribute>
  nameWithType.vb: IDictionary(Of Type, CrudEntityAttribute)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, Apizr.Requesting.CrudEntityAttribute)
  name.vb: IDictionary(Of Type, CrudEntityAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Requesting.CrudEntityAttribute
    name: CrudEntityAttribute
    nameWithType: CrudEntityAttribute
    fullName: Apizr.Requesting.CrudEntityAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Requesting.CrudEntityAttribute
    name: CrudEntityAttribute
    nameWithType: CrudEntityAttribute
    fullName: Apizr.Requesting.CrudEntityAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis
  name: WebApis
  nameWithType: IApizrExtendedCommonOptions.WebApis
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.WebApis
- uid: System.Collections.Generic.IDictionary{System.Type,Apizr.WebApiAttribute}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,Apizr.WebApiAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, WebApiAttribute>
  nameWithType: IDictionary<Type, WebApiAttribute>
  fullName: System.Collections.Generic.IDictionary<System.Type, Apizr.WebApiAttribute>
  nameWithType.vb: IDictionary(Of Type, WebApiAttribute)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, Apizr.WebApiAttribute)
  name.vb: IDictionary(Of Type, WebApiAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.WebApiAttribute
    name: WebApiAttribute
    nameWithType: WebApiAttribute
    fullName: Apizr.WebApiAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.WebApiAttribute
    name: WebApiAttribute
    nameWithType: WebApiAttribute
    fullName: Apizr.WebApiAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings
  name: ObjectMappings
  nameWithType: IApizrExtendedCommonOptions.ObjectMappings
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.ObjectMappings
- uid: System.Collections.Generic.IDictionary{System.Type,Apizr.Mapping.MappedWithAttribute}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,Apizr.Mapping.MappedWithAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, MappedWithAttribute>
  nameWithType: IDictionary<Type, MappedWithAttribute>
  fullName: System.Collections.Generic.IDictionary<System.Type, Apizr.Mapping.MappedWithAttribute>
  nameWithType.vb: IDictionary(Of Type, MappedWithAttribute)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, Apizr.Mapping.MappedWithAttribute)
  name.vb: IDictionary(Of Type, MappedWithAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.MappedWithAttribute
    name: MappedWithAttribute
    nameWithType: MappedWithAttribute
    fullName: Apizr.Mapping.MappedWithAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.MappedWithAttribute
    name: MappedWithAttribute
    nameWithType: MappedWithAttribute
    fullName: Apizr.Mapping.MappedWithAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries
  name: PostRegistries
  nameWithType: IApizrExtendedCommonOptions.PostRegistries
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistries
- uid: System.Collections.Generic.IDictionary{System.Type,Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, IApizrExtendedConcurrentRegistryBase>
  nameWithType: IDictionary<Type, IApizrExtendedConcurrentRegistryBase>
  fullName: System.Collections.Generic.IDictionary<System.Type, Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase>
  nameWithType.vb: IDictionary(Of Type, IApizrExtendedConcurrentRegistryBase)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase)
  name.vb: IDictionary(Of Type, IApizrExtendedConcurrentRegistryBase)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
    name: IApizrExtendedConcurrentRegistryBase
    nameWithType: IApizrExtendedConcurrentRegistryBase
    fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
    name: IApizrExtendedConcurrentRegistryBase
    nameWithType: IApizrExtendedConcurrentRegistryBase
    fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions*
  commentId: Overload:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions
  name: PostRegistrationActions
  nameWithType: IApizrExtendedCommonOptions.PostRegistrationActions
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptions.PostRegistrationActions
- uid: System.Collections.Generic.IList{System.Action{System.Type,Microsoft.Extensions.DependencyInjection.IServiceCollection}}
  commentId: T:System.Collections.Generic.IList{System.Action{System.Type,Microsoft.Extensions.DependencyInjection.IServiceCollection}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Action<Type, IServiceCollection>>
  nameWithType: IList<Action<Type, IServiceCollection>>
  fullName: System.Collections.Generic.IList<System.Action<System.Type, Microsoft.Extensions.DependencyInjection.IServiceCollection>>
  nameWithType.vb: IList(Of Action(Of Type, IServiceCollection))
  fullName.vb: System.Collections.Generic.IList(Of System.Action(Of System.Type, Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: IList(Of Action(Of Type, IServiceCollection))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
