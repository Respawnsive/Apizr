### YamlMime:ManagedReference
items:
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  commentId: T:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  id: ApizrExtendedManagerOptionsBuilder
  parent: Apizr.Extending.Configuring.Manager
  children:
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.#ctor(Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(``0)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Options
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.String)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Uri)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.Func{System.IServiceProvider,System.String})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.String)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Type)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.Boolean})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Type)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter(System.String,System.Object)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.String[])
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Type)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: ApizrExtendedManagerOptionsBuilder
  nameWithType: ApizrExtendedManagerOptionsBuilder
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrExtendedManagerOptionsBuilder
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 24
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nBuilder options available for extended registrations\n"
  example: []
  syntax:
    content: 'public class ApizrExtendedManagerOptionsBuilder : IApizrExtendedManagerOptionsBuilder, IApizrExtendedManagerOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrExtendedManagerOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrGlobalManagerOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrExtendedManagerOptionsBuilderBase, IApizrGlobalManagerOptionsBuilderBase, IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrExtendedCommonOptionsBuilderBase, IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrGlobalCommonOptionsBuilderBase, IApizrExtendedProperOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrExtendedProperOptionsBuilderBase, IApizrGlobalProperOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrGlobalProperOptionsBuilderBase, IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrExtendedSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>, IApizrGlobalSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedOptionsBuilderBase'
    content.vb: >-
      Public Class ApizrExtendedManagerOptionsBuilder
          Implements IApizrExtendedManagerOptionsBuilder, IApizrExtendedManagerOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrExtendedManagerOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrGlobalManagerOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrExtendedManagerOptionsBuilderBase, IApizrGlobalManagerOptionsBuilderBase, IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrExtendedCommonOptionsBuilderBase, IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrGlobalCommonOptionsBuilderBase, IApizrExtendedProperOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrExtendedProperOptionsBuilderBase, IApizrGlobalProperOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrGlobalProperOptionsBuilderBase, IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrExtendedSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder), IApizrGlobalSharedRegistrationOptionsBuilderBase, IApizrGlobalSharedOptionsBuilderBase
  inheritance:
  - System.Object
  implements:
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
  - Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Common.IApizrExtendedCommonOptionsBuilderBase
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Proper.IApizrExtendedProperOptionsBuilderBase
  - Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Shared.IApizrExtendedSharedRegistrationOptionsBuilderBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.MediationOptionsBuilderExtensions.WithMediation
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
  - Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
  - Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Options
  commentId: F:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Options
  id: Options
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ApizrExtendedManagerOptionsBuilder.Options
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Options
  type: Field
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Options
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 26
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  syntax:
    content: protected readonly ApizrExtendedManagerOptions Options
    return:
      type: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions
    content.vb: Protected ReadOnly Options As ApizrExtendedManagerOptions
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.#ctor(Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.#ctor(Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions)
  id: '#ctor(Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions)'
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: ApizrExtendedManagerOptionsBuilder(ApizrExtendedManagerOptions)
  nameWithType: ApizrExtendedManagerOptionsBuilder.ApizrExtendedManagerOptionsBuilder(ApizrExtendedManagerOptions)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ApizrExtendedManagerOptionsBuilder(Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 28
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  syntax:
    content: public ApizrExtendedManagerOptionsBuilder(ApizrExtendedManagerOptions apizrOptions)
    parameters:
    - id: apizrOptions
      type: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions
    content.vb: Public Sub New(apizrOptions As ApizrExtendedManagerOptions)
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.String)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.String)
  id: WithBaseAddress(System.String)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(String)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBaseAddress(String)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.String)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 37
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithBaseAddress(string baseAddress)
    parameters:
    - id: baseAddress
      type: System.String
      description: Your web api base address
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddress As String) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  id: WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(Func<IServiceProvider, String>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBaseAddress(Func<IServiceProvider, String>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func<System.IServiceProvider, System.String>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 60
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithBaseAddress(Func<IServiceProvider, string> baseAddressFactory)
    parameters:
    - id: baseAddressFactory
      type: System.Func{System.IServiceProvider,System.String}
      description: Your web api base address factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddressFactory As Func(Of IServiceProvider, String)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithBaseAddress(Func(Of IServiceProvider, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func(Of System.IServiceProvider, System.String))
  name.vb: WithBaseAddress(Func(Of IServiceProvider, String))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Uri)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Uri)
  id: WithBaseAddress(System.Uri)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(Uri)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBaseAddress(Uri)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Uri)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 68
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithBaseAddress(Uri baseAddress)
    parameters:
    - id: baseAddress
      type: System.Uri
      description: Your web api base address
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddress As Uri) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  id: WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBaseAddress(Func<IServiceProvider, Uri>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBaseAddress(Func<IServiceProvider, Uri>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func<System.IServiceProvider, System.Uri>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBaseAddress
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 72
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine your web api base address (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithBaseAddress(Func<IServiceProvider, Uri> baseAddressFactory)
    parameters:
    - id: baseAddressFactory
      type: System.Func{System.IServiceProvider,System.Uri}
      description: Your web api base address factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBaseAddress(baseAddressFactory As Func(Of IServiceProvider, Uri)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithBaseAddress(Func(Of IServiceProvider, Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress(System.Func(Of System.IServiceProvider, System.Uri))
  name.vb: WithBaseAddress(Func(Of IServiceProvider, Uri))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.String)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.String)
  id: WithBasePath(System.String)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBasePath(String)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBasePath(String)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.String)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBasePath
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 80
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine your web api base path (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithBasePath(string basePath)
    parameters:
    - id: basePath
      type: System.String
      description: Your web api base path
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBasePath(basePath As String) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBasePath(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.Func{System.IServiceProvider,System.String})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.Func{System.IServiceProvider,System.String})
  id: WithBasePath(System.Func{System.IServiceProvider,System.String})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithBasePath(Func<IServiceProvider, String>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBasePath(Func<IServiceProvider, String>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.Func<System.IServiceProvider, System.String>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithBasePath
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 84
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine your web api base path (could be defined with WebApiAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithBasePath(Func<IServiceProvider, string> basePathFactory)
    parameters:
    - id: basePathFactory
      type: System.Func{System.IServiceProvider,System.String}
      description: Your web api base path factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithBasePath(basePathFactory As Func(Of IServiceProvider, String)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBasePath(System.Func{System.IServiceProvider,System.String})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithBasePath(Func(Of IServiceProvider, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath(System.Func(Of System.IServiceProvider, System.String))
  name.vb: WithBasePath(Func(Of IServiceProvider, String))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  id: WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHttpClientHandler(HttpClientHandler)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(HttpClientHandler)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHttpClientHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 92
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a custom HttpClientHandler\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithHttpClientHandler(HttpClientHandler httpClientHandler)
    parameters:
    - id: httpClientHandler
      type: System.Net.Http.HttpClientHandler
      description: An <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> instance
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHttpClientHandler(httpClientHandler As HttpClientHandler) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  id: WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHttpClientHandler(Func<IServiceProvider, HttpClientHandler>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(Func<IServiceProvider, HttpClientHandler>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Func<System.IServiceProvider, System.Net.Http.HttpClientHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHttpClientHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 96
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a custom HttpClientHandler\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithHttpClientHandler(Func<IServiceProvider, HttpClientHandler> httpClientHandlerFactory)
    parameters:
    - id: httpClientHandlerFactory
      type: System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler}
      description: An <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> instance factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHttpClientHandler(httpClientHandlerFactory As Func(Of IServiceProvider, HttpClientHandler)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(Func(Of IServiceProvider, HttpClientHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler(System.Func(Of System.IServiceProvider, System.Net.Http.HttpClientHandler))
  name.vb: WithHttpClientHandler(Func(Of IServiceProvider, HttpClientHandler))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  id: ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: ConfigureHttpClientBuilder(Action<IHttpClientBuilder>, ApizrDuplicateStrategy)
  nameWithType: ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder(Action<IHttpClientBuilder>, ApizrDuplicateStrategy)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder(System.Action<Microsoft.Extensions.DependencyInjection.IHttpClientBuilder>, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ConfigureHttpClientBuilder
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 104
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nAdjust some HttpClient settings\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder ConfigureHttpClientBuilder(Action<IHttpClientBuilder> httpClientBuilder, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Merge)
    parameters:
    - id: httpClientBuilder
      type: System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder}
      description: The HttpClient builder
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another one already (default: Merge)'
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function ConfigureHttpClientBuilder(httpClientBuilder As Action(Of IHttpClientBuilder), strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Merge) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder(Action(Of IHttpClientBuilder), ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder(System.Action(Of Microsoft.Extensions.DependencyInjection.IHttpClientBuilder), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: ConfigureHttpClientBuilder(Action(Of IHttpClientBuilder), ApizrDuplicateStrategy)
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  id: WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 134
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a method to refresh the authorization token when needed\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithAuthenticationHandler(Func<HttpRequestMessage, Task<string>> refreshTokenFactory)
    parameters:
    - id: refreshTokenFactory
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
      description: Refresh token method called when expired or empty
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(refreshTokenFactory As Func(Of HttpRequestMessage, Task(Of String))) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  id: WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TAuthenticationHandler>(Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TAuthenticationHandler>(Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TAuthenticationHandler>(System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 140
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide your own <xref href=\"Apizr.Authenticating.AuthenticationHandlerBase\" data-throw-if-not-resolved=\"false\"></xref> implementation\n"
  example: []
  syntax:
    content: >-
      public IApizrExtendedManagerOptionsBuilder WithAuthenticationHandler<TAuthenticationHandler>(Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler> authenticationHandlerFactory)
          where TAuthenticationHandler : AuthenticationHandlerBase
    parameters:
    - id: authenticationHandlerFactory
      type: System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}}
      description: A <code data-dev-comment-type="typeparamref" class="typeparamref">TAuthenticationHandler</code> instance factory
    typeParameters:
    - id: TAuthenticationHandler
      description: Your <xref href="Apizr.Authenticating.AuthenticationHandlerBase" data-throw-if-not-resolved="false"></xref> implementation
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TAuthenticationHandler As AuthenticationHandlerBase)(authenticationHandlerFactory As Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TAuthenticationHandler)(System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler))
  name.vb: WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  id: WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(Expression<Func<TSettingsService, String>>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService, TTokenService>(Expression<Func<TSettingsService, String>>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService, TTokenService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 146
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide your own settings management and token management services\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithAuthenticationHandler<TSettingsService, TTokenService>(Expression<Func<TSettingsService, string>> tokenProperty, Expression<Func<TTokenService, HttpRequestMessage, Task<string>>> refreshTokenMethod)
    parameters:
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property used for saving
    - id: refreshTokenMethod
      type: System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}}
      description: The method called to refresh the token
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (saving/getting token)
    - id: TTokenService
      description: Your token management service (refreshing token)
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService, TTokenService)(tokenProperty As Expression(Of Func(Of TSettingsService, String)), refreshTokenMethod As Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String)))) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService, TTokenService)(Expression(Of Func(Of TSettingsService, String)), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService, TTokenService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(Expression(Of Func(Of TSettingsService, String)), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  id: WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 157
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide your own settings management service with its token property\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, string>> tokenProperty)
    parameters:
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property to get from
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (getting token)
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService)(tokenProperty As Expression(Of Func(Of TSettingsService, String))) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  id: WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler<TSettingsService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithAuthenticationHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 168
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide your own settings management service and a method to refresh the token\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, string>> tokenProperty, Func<HttpRequestMessage, Task<string>> refreshTokenFactory)
    parameters:
    - id: tokenProperty
      type: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
      description: The token property used for saving
    - id: refreshTokenFactory
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
      description: The method factory called to refresh the token
    typeParameters:
    - id: TSettingsService
      description: Your settings management service (saving/getting token)
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithAuthenticationHandler(Of TSettingsService)(tokenProperty As Expression(Of Func(Of TSettingsService, String)), refreshTokenFactory As Func(Of HttpRequestMessage, Task(Of String))) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler(Of TSettingsService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.String[])
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.String[])
  id: WithHeaders(System.String[])
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHeaders(String[])
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHeaders(String[])
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.String[])
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHeaders
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 178
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nAdd some headers to the request\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithHeaders(params string[] headers)
    parameters:
    - id: headers
      type: System.String[]
      description: Headers to add to the request
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHeaders(ParamArray headers As String()) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHeaders(System.String[])
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithHeaders(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.String())
  name.vb: WithHeaders(String())
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  id: WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHeaders(Func<IServiceProvider, IList<String>>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHeaders(Func<IServiceProvider, IList<String>>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.Func<System.IServiceProvider, System.Collections.Generic.IList<System.String>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHeaders
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 182
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nAdd some headers to the request\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithHeaders(Func<IServiceProvider, IList<string>> headersFactory)
    parameters:
    - id: headersFactory
      type: System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}}
      description: Headers to add to the request
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHeaders(headersFactory As Func(Of IServiceProvider, IList(Of String))) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithHeaders(Func(Of IServiceProvider, IList(Of String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders(System.Func(Of System.IServiceProvider, System.Collections.Generic.IList(Of System.String)))
  name.vb: WithHeaders(Func(Of IServiceProvider, IList(Of String)))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  id: WithOperationTimeout(System.TimeSpan)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithOperationTimeout(TimeSpan)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(TimeSpan)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithOperationTimeout
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 193
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nSet a timeout to the operation (overall request tries)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithOperationTimeout(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The operation timeout
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithOperationTimeout(timeout As TimeSpan) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithOperationTimeout(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  id: WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithOperationTimeout(Func<IServiceProvider, TimeSpan>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(Func<IServiceProvider, TimeSpan>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.Func<System.IServiceProvider, System.TimeSpan>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithOperationTimeout
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 197
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nSet a timeout to the operation (overall request tries)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithOperationTimeout(Func<IServiceProvider, TimeSpan> timeoutFactory)
    parameters:
    - id: timeoutFactory
      type: System.Func{System.IServiceProvider,System.TimeSpan}
      description: The operation timeout factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithOperationTimeout(timeoutFactory As Func(Of IServiceProvider, TimeSpan)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(Func(Of IServiceProvider, TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout(System.Func(Of System.IServiceProvider, System.TimeSpan))
  name.vb: WithOperationTimeout(Func(Of IServiceProvider, TimeSpan))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  id: WithRequestTimeout(System.TimeSpan)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRequestTimeout(TimeSpan)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(TimeSpan)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRequestTimeout
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 205
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nSet a timeout to the request (each request try)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithRequestTimeout(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The request timeout
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRequestTimeout(timeout As TimeSpan) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRequestTimeout(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  id: WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRequestTimeout(Func<IServiceProvider, TimeSpan>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(Func<IServiceProvider, TimeSpan>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.Func<System.IServiceProvider, System.TimeSpan>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRequestTimeout
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 209
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nSet a timeout to the request (each request try)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithRequestTimeout(Func<IServiceProvider, TimeSpan> timeoutFactory)
    parameters:
    - id: timeoutFactory
      type: System.Func{System.IServiceProvider,System.TimeSpan}
      description: The request timeout factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRequestTimeout(timeoutFactory As Func(Of IServiceProvider, TimeSpan)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(Func(Of IServiceProvider, TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout(System.Func(Of System.IServiceProvider, System.TimeSpan))
  name.vb: WithRequestTimeout(Func(Of IServiceProvider, TimeSpan))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(``0)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(``0)
  id: AddDelegatingHandler``1(``0)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: AddDelegatingHandler<THandler>(THandler)
  nameWithType: ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler<THandler>(THandler)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler<THandler>(THandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDelegatingHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 217
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nAdd a custom delegating handler\n"
  example: []
  syntax:
    content: >-
      public IApizrExtendedManagerOptionsBuilder AddDelegatingHandler<THandler>(THandler delegatingHandler)
          where THandler : DelegatingHandler
    parameters:
    - id: delegatingHandler
      type: '{THandler}'
      description: A delegating handler
    typeParameters:
    - id: THandler
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function AddDelegatingHandler(Of THandler As DelegatingHandler)(delegatingHandler As THandler) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1({THandler})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(THandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(THandler)
  name.vb: AddDelegatingHandler(Of THandler)(THandler)
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  id: AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: AddDelegatingHandler<THandler>(Func<IServiceProvider, THandler>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler<THandler>(Func<IServiceProvider, THandler>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler<THandler>(System.Func<System.IServiceProvider, THandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDelegatingHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 221
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nAdd a custom delegating handler\n"
  example: []
  syntax:
    content: >-
      public IApizrExtendedManagerOptionsBuilder AddDelegatingHandler<THandler>(Func<IServiceProvider, THandler> delegatingHandlerFactory)
          where THandler : DelegatingHandler
    parameters:
    - id: delegatingHandlerFactory
      type: System.Func{System.IServiceProvider,{THandler}}
      description: A delegating handler factory
    typeParameters:
    - id: THandler
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function AddDelegatingHandler(Of THandler As DelegatingHandler)(delegatingHandlerFactory As Func(Of IServiceProvider, THandler)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{System.IServiceProvider,{THandler}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, THandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(System.Func(Of System.IServiceProvider, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, THandler))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  id: AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: AddDelegatingHandler<THandler>(Func<IServiceProvider, IApizrManagerOptionsBase, THandler>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler<THandler>(Func<IServiceProvider, IApizrManagerOptionsBase, THandler>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler<THandler>(System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDelegatingHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 226
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nAdd a custom delegating handler\n"
  example: []
  syntax:
    content: >-
      public IApizrExtendedManagerOptionsBuilder AddDelegatingHandler<THandler>(Func<IServiceProvider, IApizrManagerOptionsBase, THandler> delegatingHandlerFactory)
          where THandler : DelegatingHandler
    parameters:
    - id: delegatingHandlerFactory
      type: System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}}
      description: A delegating handler factory
    typeParameters:
    - id: THandler
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function AddDelegatingHandler(Of THandler As DelegatingHandler)(delegatingHandlerFactory As Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler(Of THandler)(System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  id: WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithContext(Func<Context>, ApizrDuplicateStrategy)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithContext(Func<Context>, ApizrDuplicateStrategy)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext(System.Func<Polly.Context>, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithContext
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 234
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nSet the Polly Context\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithContext(Func<Context> contextFactory, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Merge)
    parameters:
    - id: contextFactory
      type: System.Func{Polly.Context}
      description: The Polly Context to pass through it all
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another one already (default: Merge)'
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithContext(contextFactory As Func(Of Context), strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Merge) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithContext(Func(Of Context), ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext(System.Func(Of Polly.Context), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithContext(Func(Of Context), ApizrDuplicateStrategy)
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  id: WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching(System.Action<Apizr.ApizrException>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithExCatching
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 266
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nCatch potential exceptions\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithExCatching(Action<ApizrException> onException, bool letThrowOnExceptionWithEmptyCache = true, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Replace)
    parameters:
    - id: onException
      type: System.Action{Apizr.ApizrException}
      description: The exception callback
    - id: letThrowOnExceptionWithEmptyCache
      type: System.Boolean
      description: 'Let throw potential exception if there&apos;s no cached data to return (default: true)'
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another callback already (default: Replace)'
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithExCatching(onException As Action(Of ApizrException), letThrowOnExceptionWithEmptyCache As Boolean = True, strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Replace) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching(System.Action(Of Apizr.ApizrException), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  id: WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching<TResult>(System.Action<Apizr.ApizrException<TResult>>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithExCatching
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 298
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nCatch potential exceptions\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithExCatching<TResult>(Action<ApizrException<TResult>> onException, bool letThrowOnExceptionWithEmptyCache = true, ApizrDuplicateStrategy strategy = ApizrDuplicateStrategy.Replace)
    parameters:
    - id: onException
      type: System.Action{Apizr.ApizrException{{TResult}}}
      description: The exception callback
    - id: letThrowOnExceptionWithEmptyCache
      type: System.Boolean
      description: 'Let throw potential exception if there&apos;s no cached data to return (default: true)'
    - id: strategy
      type: Apizr.Configuring.ApizrDuplicateStrategy
      description: 'The duplicate strategy if there&apos;s another callback already (default: Replace)'
    typeParameters:
    - id: TResult
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithExCatching(Of TResult)(onException As Action(Of ApizrException(Of TResult)), letThrowOnExceptionWithEmptyCache As Boolean = True, strategy As ApizrDuplicateStrategy = ApizrDuplicateStrategy.Replace) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithExCatching``1(System.Action{Apizr.ApizrException{{TResult}}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching(Of TResult)(System.Action(Of Apizr.ApizrException(Of TResult)), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter(System.String,System.Object)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter(System.String,System.Object)
  id: WithHandlerParameter(System.String,System.Object)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithHandlerParameter(String, Object)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHandlerParameter(String, Object)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithHandlerParameter
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 305
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nSet some parameters passed through all delegating handlers\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithHandlerParameter(string key, object value)
    parameters:
    - id: key
      type: System.String
      description: The parameter&apos;s key
    - id: value
      type: System.Object
      description: The parameter&apos;s value
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithHandlerParameter(key As String, value As Object) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHandlerParameter(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  id: WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[])
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLogging
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 313
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine tracer mode, http traffic tracing verbosity and log levels (could be defined with LogAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithLogging(HttpTracerMode httpTracerMode = HttpTracerMode.Everything, HttpMessageParts trafficVerbosity = HttpMessageParts.All, params LogLevel[] logLevels)
    parameters:
    - id: httpTracerMode
      type: Apizr.Logging.HttpTracerMode
      description: ''
    - id: trafficVerbosity
      type: Apizr.Logging.HttpMessageParts
      description: 'Http traffic tracing verbosity (default: All)'
    - id: logLevels
      type: Microsoft.Extensions.Logging.LogLevel[]
      description: 'Log levels to apply while writing (default: Information)'
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLogging(httpTracerMode As HttpTracerMode = HttpTracerMode.Everything, trafficVerbosity As HttpMessageParts = HttpMessageParts.All, ParamArray logLevels As LogLevel()) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging*
  implements:
  - Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())
  name.vb: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  id: WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLogging(Func<IServiceProvider, (HttpTracerMode, HttpMessageParts, LogLevel[])>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithLogging(Func<IServiceProvider, (HttpTracerMode, HttpMessageParts, LogLevel[])>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func<System.IServiceProvider, System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLogging
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 319
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine tracer mode, http traffic tracing verbosity and log levels (could be defined with LogAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithLogging(Func<IServiceProvider, (HttpTracerMode, HttpMessageParts, LogLevel[])> loggingConfigurationFactory)
    parameters:
    - id: loggingConfigurationFactory
      type: System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}}
      description: Logging configuration factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLogging(loggingConfigurationFactory As Func(Of IServiceProvider, (HttpTracerMode, HttpMessageParts, LogLevel())(Of HttpTracerMode , HttpMessageParts, LogLevel()))) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithLogging(Func(Of IServiceProvider, (HttpTracerMode, HttpMessageParts, LogLevel())(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func(Of System.IServiceProvider, System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())))
  name.vb: WithLogging(Func(Of IServiceProvider, (HttpTracerMode, HttpMessageParts, LogLevel())(Of HttpTracerMode, HttpMessageParts, LogLevel())))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  id: WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithLogging(Func<IServiceProvider, HttpTracerMode>, Func<IServiceProvider, HttpMessageParts>, Func<IServiceProvider, LogLevel[]>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithLogging(Func<IServiceProvider, HttpTracerMode>, Func<IServiceProvider, HttpMessageParts>, Func<IServiceProvider, LogLevel[]>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func<System.IServiceProvider, Apizr.Logging.HttpTracerMode>, System.Func<System.IServiceProvider, Apizr.Logging.HttpMessageParts>, System.Func<System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel[]>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithLogging
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 326
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nDefine tracer mode, http traffic tracing verbosity and log levels (could be defined with LogAttribute)\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithLogging(Func<IServiceProvider, HttpTracerMode> httpTracerModeFactory, Func<IServiceProvider, HttpMessageParts> trafficVerbosityFactory, Func<IServiceProvider, LogLevel[]> logLevelFactory)
    parameters:
    - id: httpTracerModeFactory
      type: System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode}
      description: Http traffic tracing mode factory
    - id: trafficVerbosityFactory
      type: System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts}
      description: Http traffic tracing verbosity factory
    - id: logLevelFactory
      type: System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]}
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithLogging(httpTracerModeFactory As Func(Of IServiceProvider, HttpTracerMode), trafficVerbosityFactory As Func(Of IServiceProvider, HttpMessageParts), logLevelFactory As Func(Of IServiceProvider, LogLevel())) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging*
  implements:
  - Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithLogging(Func(Of IServiceProvider, HttpTracerMode), Func(Of IServiceProvider, HttpMessageParts), Func(Of IServiceProvider, LogLevel()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging(System.Func(Of System.IServiceProvider, Apizr.Logging.HttpTracerMode), System.Func(Of System.IServiceProvider, Apizr.Logging.HttpMessageParts), System.Func(Of System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel()))
  name.vb: WithLogging(Func(Of IServiceProvider, HttpTracerMode), Func(Of IServiceProvider, HttpMessageParts), Func(Of IServiceProvider, LogLevel()))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  id: WithRefitSettings(Refit.RefitSettings)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRefitSettings(RefitSettings)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithRefitSettings(RefitSettings)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(Refit.RefitSettings)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRefitSettings
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 338
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide some Refit specific settings\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithRefitSettings(RefitSettings refitSettings)
    parameters:
    - id: refitSettings
      type: Refit.RefitSettings
      description: A <xref href="Refit.RefitSettings" data-throw-if-not-resolved="false"></xref> instance
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRefitSettings(refitSettings As RefitSettings) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRefitSettings(Refit.RefitSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  id: WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler(IConnectivityHandler)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(IConnectivityHandler)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 342
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a connectivity handler to check connectivity before sending a request\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithConnectivityHandler(IConnectivityHandler connectivityHandler)
    parameters:
    - id: connectivityHandler
      type: Apizr.Connecting.IConnectivityHandler
      description: An <xref href="Apizr.Connecting.IConnectivityHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(connectivityHandler As IConnectivityHandler) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  id: WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithRefitSettings(Func<IServiceProvider, RefitSettings>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithRefitSettings(Func<IServiceProvider, RefitSettings>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(System.Func<System.IServiceProvider, Refit.RefitSettings>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithRefitSettings
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 348
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide some Refit specific settings\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithRefitSettings(Func<IServiceProvider, RefitSettings> refitSettingsFactory)
    parameters:
    - id: refitSettingsFactory
      type: System.Func{System.IServiceProvider,Refit.RefitSettings}
      description: A <xref href="Refit.RefitSettings" data-throw-if-not-resolved="false"></xref> instance factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithRefitSettings(refitSettingsFactory As Func(Of IServiceProvider, RefitSettings)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithRefitSettings(Func(Of IServiceProvider, RefitSettings))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings(System.Func(Of System.IServiceProvider, Refit.RefitSettings))
  name.vb: WithRefitSettings(Func(Of IServiceProvider, RefitSettings))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  id: WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler(Func<IServiceProvider, IConnectivityHandler>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Func<IServiceProvider, IConnectivityHandler>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func<System.IServiceProvider, Apizr.Connecting.IConnectivityHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 357
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a connectivity handler to check connectivity before sending a request\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithConnectivityHandler(Func<IServiceProvider, IConnectivityHandler> connectivityHandlerFactory)
    parameters:
    - id: connectivityHandlerFactory
      type: System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler}
      description: A <xref href="Apizr.Connecting.IConnectivityHandler" data-throw-if-not-resolved="false"></xref> mapping implementation factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(connectivityHandlerFactory As Func(Of IServiceProvider, IConnectivityHandler)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Func(Of IServiceProvider, IConnectivityHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func(Of System.IServiceProvider, Apizr.Connecting.IConnectivityHandler))
  name.vb: WithConnectivityHandler(Func(Of IServiceProvider, IConnectivityHandler))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler<TConnectivityHandler>(Expression<Func<TConnectivityHandler, Boolean>>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler<TConnectivityHandler>(Expression<Func<TConnectivityHandler, Boolean>>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler<TConnectivityHandler>(System.Linq.Expressions.Expression<System.Func<TConnectivityHandler, System.Boolean>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 365
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a connectivity handler to check connectivity before sending a request\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithConnectivityHandler<TConnectivityHandler>(Expression<Func<TConnectivityHandler, bool>> factory)
    parameters:
    - id: factory
      type: System.Linq.Expressions.Expression{System.Func{{TConnectivityHandler},System.Boolean}}
    typeParameters:
    - id: TConnectivityHandler
      description: Your connectivity checking service
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(Of TConnectivityHandler)(factory As Expression(Of Func(Of TConnectivityHandler, Boolean))) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{{TConnectivityHandler},System.Boolean}})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Of TConnectivityHandler)(Expression(Of Func(Of TConnectivityHandler, Boolean)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Of TConnectivityHandler)(System.Linq.Expressions.Expression(Of System.Func(Of TConnectivityHandler, System.Boolean)))
  name.vb: WithConnectivityHandler(Of TConnectivityHandler)(Expression(Of Func(Of TConnectivityHandler, Boolean)))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.Boolean})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func{System.Boolean})
  id: WithConnectivityHandler(System.Func{System.Boolean})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler(Func<Boolean>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Func<Boolean>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func<System.Boolean>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 373
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a function to invoke while checking connectivity\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithConnectivityHandler(Func<bool> connectivityCheckingFunction)
    parameters:
    - id: connectivityCheckingFunction
      type: System.Func{System.Boolean}
      description: A function to invoke while checking connectivity
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(connectivityCheckingFunction As Func(Of Boolean)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.Boolean})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Func(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Func(Of System.Boolean))
  name.vb: WithConnectivityHandler(Func(Of Boolean))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler``1
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler``1
  id: WithConnectivityHandler``1
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler<TConnectivityHandler>()
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler<TConnectivityHandler>()
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler<TConnectivityHandler>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 381
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a connectivity handler to check connectivity before sending a request\n"
  example: []
  syntax:
    content: >-
      public IApizrExtendedManagerOptionsBuilder WithConnectivityHandler<TConnectivityHandler>()
          where TConnectivityHandler : class, IConnectivityHandler
    typeParameters:
    - id: TConnectivityHandler
      description: Your <xref href="Apizr.Connecting.IConnectivityHandler" data-throw-if-not-resolved="false"></xref> mapping implementation
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(Of TConnectivityHandler As {Class, IConnectivityHandler}) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler``1
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Of TConnectivityHandler)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Of TConnectivityHandler)()
  name.vb: WithConnectivityHandler(Of TConnectivityHandler)()
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Type)
  id: WithConnectivityHandler(System.Type)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithConnectivityHandler(Type)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(Type)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler(System.Type)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithConnectivityHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 386
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a connectivity handler to check connectivity before sending a request\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithConnectivityHandler(Type connectivityHandlerType)
    parameters:
    - id: connectivityHandlerType
      type: System.Type
      description: Type of your <xref href="Apizr.Connecting.IConnectivityHandler" data-throw-if-not-resolved="false"></xref> mapping implementation
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithConnectivityHandler(connectivityHandlerType As Type) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  id: WithCacheHandler(Apizr.Caching.ICacheHandler)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithCacheHandler(ICacheHandler)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithCacheHandler(ICacheHandler)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Apizr.Caching.ICacheHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithCacheHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 398
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a cache handler to cache data\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithCacheHandler(ICacheHandler cacheHandler)
    parameters:
    - id: cacheHandler
      type: Apizr.Caching.ICacheHandler
      description: An <xref href="Apizr.Caching.ICacheHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithCacheHandler(cacheHandler As ICacheHandler) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(Apizr.Caching.ICacheHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  id: WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithCacheHandler(Func<IServiceProvider, ICacheHandler>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Func<IServiceProvider, ICacheHandler>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Func<System.IServiceProvider, Apizr.Caching.ICacheHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithCacheHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 402
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a cache handler to cache data\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithCacheHandler(Func<IServiceProvider, ICacheHandler> cacheHandlerFactory)
    parameters:
    - id: cacheHandlerFactory
      type: System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler}
      description: A <xref href="Apizr.Caching.ICacheHandler" data-throw-if-not-resolved="false"></xref> mapping implementation factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithCacheHandler(cacheHandlerFactory As Func(Of IServiceProvider, ICacheHandler)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Func(Of IServiceProvider, ICacheHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Func(Of System.IServiceProvider, Apizr.Caching.ICacheHandler))
  name.vb: WithCacheHandler(Func(Of IServiceProvider, ICacheHandler))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler``1
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler``1
  id: WithCacheHandler``1
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithCacheHandler<TCacheHandler>()
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithCacheHandler<TCacheHandler>()
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler<TCacheHandler>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithCacheHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 410
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a cache handler to cache data\n"
  example: []
  syntax:
    content: >-
      public IApizrExtendedManagerOptionsBuilder WithCacheHandler<TCacheHandler>()
          where TCacheHandler : class, ICacheHandler
    typeParameters:
    - id: TCacheHandler
      description: Your <xref href="Apizr.Caching.ICacheHandler" data-throw-if-not-resolved="false"></xref> mapping implementation
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithCacheHandler(Of TCacheHandler As {Class, ICacheHandler}) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler``1
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Of TCacheHandler)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Of TCacheHandler)()
  name.vb: WithCacheHandler(Of TCacheHandler)()
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Type)
  id: WithCacheHandler(System.Type)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithCacheHandler(Type)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithCacheHandler(Type)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler(System.Type)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithCacheHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 415
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a cache handler to cache data\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithCacheHandler(Type cacheHandlerType)
    parameters:
    - id: cacheHandlerType
      type: System.Type
      description: Type of your <xref href="Apizr.Caching.ICacheHandler" data-throw-if-not-resolved="false"></xref> mapping implementation
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithCacheHandler(cacheHandlerType As Type) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  id: WithMappingHandler(Apizr.Mapping.IMappingHandler)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithMappingHandler(IMappingHandler)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithMappingHandler(IMappingHandler)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithMappingHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 427
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a mapping handler to map entities\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithMappingHandler(IMappingHandler mappingHandler)
    parameters:
    - id: mappingHandler
      type: Apizr.Mapping.IMappingHandler
      description: An <xref href="Apizr.Mapping.IMappingHandler" data-throw-if-not-resolved="false"></xref> mapping implementation instance
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithMappingHandler(mappingHandler As IMappingHandler) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler*
  implements:
  - Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  id: WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithMappingHandler(Func<IServiceProvider, IMappingHandler>)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Func<IServiceProvider, IMappingHandler>)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Func<System.IServiceProvider, Apizr.Mapping.IMappingHandler>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithMappingHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 431
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a mapping handler to auto map entities during mediation\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithMappingHandler(Func<IServiceProvider, IMappingHandler> mappingHandlerFactory)
    parameters:
    - id: mappingHandlerFactory
      type: System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler}
      description: A <xref href="Apizr.Mapping.IMappingHandler" data-throw-if-not-resolved="false"></xref> mapping implementation factory
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithMappingHandler(mappingHandlerFactory As Func(Of IServiceProvider, IMappingHandler)) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Func(Of IServiceProvider, IMappingHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Func(Of System.IServiceProvider, Apizr.Mapping.IMappingHandler))
  name.vb: WithMappingHandler(Func(Of IServiceProvider, IMappingHandler))
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler``1
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler``1
  id: WithMappingHandler``1
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithMappingHandler<TMappingHandler>()
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithMappingHandler<TMappingHandler>()
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler<TMappingHandler>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithMappingHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 439
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a mapping handler to auto map entities during mediation\n"
  example: []
  syntax:
    content: >-
      public IApizrExtendedManagerOptionsBuilder WithMappingHandler<TMappingHandler>()
          where TMappingHandler : class, IMappingHandler
    typeParameters:
    - id: TMappingHandler
      description: Your <xref href="Apizr.Mapping.IMappingHandler" data-throw-if-not-resolved="false"></xref> mapping implementation
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithMappingHandler(Of TMappingHandler As {Class, IMappingHandler}) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler``1
  nameWithType.vb: ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Of TMappingHandler)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Of TMappingHandler)()
  name.vb: WithMappingHandler(Of TMappingHandler)()
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Type)
  id: WithMappingHandler(System.Type)
  parent: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder
  langs:
  - csharp
  - vb
  name: WithMappingHandler(Type)
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithMappingHandler(Type)
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler(System.Type)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: WithMappingHandler
    path: ../../Src/Apizr.Extensions.Microsoft.DependencyInjection/Extending/Configuring/Manager/ApizrExtendedManagerOptionsBuilder.cs
    startLine: 444
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Manager
  summary: "\nProvide a mapping handler to auto map entities during mediation\n"
  example: []
  syntax:
    content: public IApizrExtendedManagerOptionsBuilder WithMappingHandler(Type mappingHandlerType)
    parameters:
    - id: mappingHandlerType
      type: System.Type
      description: Type of your <xref href="Apizr.Mapping.IMappingHandler" data-throw-if-not-resolved="false"></xref> mapping implementation
    return:
      type: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
      description: ''
    content.vb: Public Function WithMappingHandler(mappingHandlerType As Type) As IApizrExtendedManagerOptionsBuilder
  overload: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler*
  implements:
  - Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Apizr.Extending.Configuring.Manager
  commentId: N:Apizr.Extending.Configuring.Manager
  name: Apizr.Extending.Configuring.Manager
  nameWithType: Apizr.Extending.Configuring.Manager
  fullName: Apizr.Extending.Configuring.Manager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  commentId: T:Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  parent: Apizr.Extending.Configuring.Manager
  name: IApizrExtendedManagerOptionsBuilder
  nameWithType: IApizrExtendedManagerOptionsBuilder
  fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Extending.Configuring.Manager
  definition: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder`2
  name: IApizrExtendedManagerOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrExtendedManagerOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrExtendedManagerOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrExtendedManagerOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder`2
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder`2
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Extending.Configuring.Manager
  definition: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase`2
  name: IApizrExtendedManagerOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrExtendedManagerOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrExtendedManagerOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrExtendedManagerOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase`2
    name: IApizrExtendedManagerOptionsBuilderBase
    nameWithType: IApizrExtendedManagerOptionsBuilderBase
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase`2
    name: IApizrExtendedManagerOptionsBuilderBase
    nameWithType: IApizrExtendedManagerOptionsBuilderBase
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Configuring.Manager
  definition: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
  name: IApizrGlobalManagerOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrGlobalManagerOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalManagerOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrGlobalManagerOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
  commentId: T:Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
  parent: Apizr.Extending.Configuring.Manager
  name: IApizrExtendedManagerOptionsBuilderBase
  nameWithType: IApizrExtendedManagerOptionsBuilderBase
  fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
- uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  commentId: T:Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  parent: Apizr.Configuring.Manager
  name: IApizrGlobalManagerOptionsBuilderBase
  nameWithType: IApizrGlobalManagerOptionsBuilderBase
  fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Extending.Configuring.Common
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2
  name: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2
    name: IApizrExtendedCommonOptionsBuilder
    nameWithType: IApizrExtendedCommonOptionsBuilder
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2
    name: IApizrExtendedCommonOptionsBuilder
    nameWithType: IApizrExtendedCommonOptionsBuilder
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrExtendedCommonOptionsBuilderBase
  commentId: T:Apizr.Configuring.Common.IApizrExtendedCommonOptionsBuilderBase
  parent: Apizr.Configuring.Common
  name: IApizrExtendedCommonOptionsBuilderBase
  nameWithType: IApizrExtendedCommonOptionsBuilderBase
  fullName: Apizr.Configuring.Common.IApizrExtendedCommonOptionsBuilderBase
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Configuring.Common
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
  name: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  commentId: T:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  parent: Apizr.Configuring.Common
  name: IApizrGlobalCommonOptionsBuilderBase
  nameWithType: IApizrGlobalCommonOptionsBuilderBase
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
- uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Extending.Configuring.Proper
  definition: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder`2
  name: IApizrExtendedProperOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrExtendedProperOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrExtendedProperOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrExtendedProperOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder`2
    name: IApizrExtendedProperOptionsBuilder
    nameWithType: IApizrExtendedProperOptionsBuilder
    fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder`2
    name: IApizrExtendedProperOptionsBuilder
    nameWithType: IApizrExtendedProperOptionsBuilder
    fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper.IApizrExtendedProperOptionsBuilderBase
  commentId: T:Apizr.Configuring.Proper.IApizrExtendedProperOptionsBuilderBase
  parent: Apizr.Configuring.Proper
  name: IApizrExtendedProperOptionsBuilderBase
  nameWithType: IApizrExtendedProperOptionsBuilderBase
  fullName: Apizr.Configuring.Proper.IApizrExtendedProperOptionsBuilderBase
- uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Configuring.Proper
  definition: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
  name: IApizrGlobalProperOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrGlobalProperOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalProperOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrGlobalProperOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  commentId: T:Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  parent: Apizr.Configuring.Proper
  name: IApizrGlobalProperOptionsBuilderBase
  nameWithType: IApizrGlobalProperOptionsBuilderBase
  fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Extending.Configuring.Shared
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2
  name: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2
    name: IApizrExtendedSharedOptionsBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2
    name: IApizrExtendedSharedOptionsBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrExtendedSharedRegistrationOptionsBuilderBase
  commentId: T:Apizr.Configuring.Shared.IApizrExtendedSharedRegistrationOptionsBuilderBase
  parent: Apizr.Configuring.Shared
  name: IApizrExtendedSharedRegistrationOptionsBuilderBase
  nameWithType: IApizrExtendedSharedRegistrationOptionsBuilderBase
  fullName: Apizr.Configuring.Shared.IApizrExtendedSharedRegistrationOptionsBuilderBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Configuring.Shared
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
  name: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: Apizr.Configuring.Shared
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
  name: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
    name: IApizrExtendedManagerOptions
    nameWithType: IApizrExtendedManagerOptions
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedRegistrationOptionsBuilderBase
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  parent: Apizr.Configuring.Shared
  name: IApizrGlobalSharedOptionsBuilderBase
  nameWithType: IApizrGlobalSharedOptionsBuilderBase
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
  commentId: M:Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  parent: Apizr.OptionalOptionsBuilderExtensions
  definition: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithOptionalMediation()
  nameWithType: OptionalOptionsBuilderExtensions.WithOptionalMediation()
  fullName: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation()
  spec.csharp:
  - uid: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
    name: WithOptionalMediation
    nameWithType: OptionalOptionsBuilderExtensions.WithOptionalMediation
    fullName: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
    name: WithOptionalMediation
    nameWithType: OptionalOptionsBuilderExtensions.WithOptionalMediation
    fullName: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.MediationOptionsBuilderExtensions.WithMediation
  commentId: M:Apizr.MediationOptionsBuilderExtensions.WithMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  parent: Apizr.MediationOptionsBuilderExtensions
  definition: Apizr.MediationOptionsBuilderExtensions.WithMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithMediation()
  nameWithType: MediationOptionsBuilderExtensions.WithMediation()
  fullName: Apizr.MediationOptionsBuilderExtensions.WithMediation()
  spec.csharp:
  - uid: Apizr.MediationOptionsBuilderExtensions.WithMediation
    name: WithMediation
    nameWithType: MediationOptionsBuilderExtensions.WithMediation
    fullName: Apizr.MediationOptionsBuilderExtensions.WithMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MediationOptionsBuilderExtensions.WithMediation
    name: WithMediation
    nameWithType: MediationOptionsBuilderExtensions.WithMediation
    fullName: Apizr.MediationOptionsBuilderExtensions.WithMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  name: WithPriorityManagement<ApizrExtendedManagerOptionsBuilder>()
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<ApizrExtendedManagerOptionsBuilder>()
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>()
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of ApizrExtendedManagerOptionsBuilder)()
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)()
  name.vb: WithPriorityManagement(Of ApizrExtendedManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
    name: WithPriorityManagement<ApizrExtendedManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1
    name: WithPriorityManagement(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  name: WithPriority<ApizrExtendedManagerOptionsBuilder>()
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrExtendedManagerOptionsBuilder>()
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>()
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrExtendedManagerOptionsBuilder)()
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)()
  name.vb: WithPriority(Of ApizrExtendedManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
    name: WithPriority<ApizrExtendedManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1
    name: WithPriority(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  name: WithPriority<ApizrExtendedManagerOptionsBuilder>(Priority)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrExtendedManagerOptionsBuilder>(Priority)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>(Fusillade.Priority)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrExtendedManagerOptionsBuilder)(Priority)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)(Fusillade.Priority)
  name.vb: WithPriority(Of ApizrExtendedManagerOptionsBuilder)(Priority)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
    name: WithPriority<ApizrExtendedManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(Fusillade.Priority)
    name: WithPriority(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  parent: Apizr.FusilladeOptionsBuilderExtensions
  definition: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  name: WithPriority<ApizrExtendedManagerOptionsBuilder>(Int32)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrExtendedManagerOptionsBuilder>(Int32)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>(System.Int32)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrExtendedManagerOptionsBuilder)(Int32)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)(System.Int32)
  name.vb: WithPriority(Of ApizrExtendedManagerOptionsBuilder)(Int32)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
    name: WithPriority<ApizrExtendedManagerOptionsBuilder>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(System.Int32)
    name: WithPriority(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
  commentId: M:Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  parent: Apizr.MediationFileTransferOptionsBuilderExtensions
  definition: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithFileTransferMediation()
  nameWithType: MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation()
  fullName: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation()
  spec.csharp:
  - uid: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
    name: WithFileTransferMediation
    nameWithType: MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
    fullName: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
    name: WithFileTransferMediation
    nameWithType: MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
    fullName: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder.Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
  commentId: M:Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  parent: Apizr.OptionalFileTransferOptionsBuilderExtensions
  definition: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithFileTransferOptionalMediation()
  nameWithType: OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation()
  fullName: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation()
  spec.csharp:
  - uid: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
    name: WithFileTransferOptionalMediation
    nameWithType: OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
    fullName: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
    name: WithFileTransferOptionalMediation
    nameWithType: OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
    fullName: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1
  commentId: M:Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0)
  parent: Apizr.AutoMapperOptionsBuilderExtensions
  definition: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0)
  name: WithAutoMapperMappingHandler<ApizrExtendedManagerOptionsBuilder>()
  nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<ApizrExtendedManagerOptionsBuilder>()
  fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>()
  nameWithType.vb: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of ApizrExtendedManagerOptionsBuilder)()
  fullName.vb: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)()
  name.vb: WithAutoMapperMappingHandler(Of ApizrExtendedManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1
    name: WithAutoMapperMappingHandler<ApizrExtendedManagerOptionsBuilder>
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1
    name: WithAutoMapperMappingHandler(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>()
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>()
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>()
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)()
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)()
  name.vb: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
    name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1
    name: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>(Func<IBlobCache>)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>(Func<IBlobCache>)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>(System.Func<Akavache.IBlobCache>)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)(Func(Of IBlobCache))
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)(System.Func(Of Akavache.IBlobCache))
  name.vb: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)(Func(Of IBlobCache))
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>(String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>(String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>(System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)(String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)(System.String)
  name.vb: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)(String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
    name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.String)
    name: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  parent: Apizr.AkavacheOptionsBuilderExtensions
  definition: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>(Func<IBlobCache>, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>(Func<IBlobCache>, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>(System.Func<Akavache.IBlobCache>, System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)(Func(Of IBlobCache), String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)(System.Func(Of Akavache.IBlobCache), System.String)
  name.vb: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)(Func(Of IBlobCache), String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  name: WithProgress<ApizrExtendedManagerOptionsBuilder>()
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrExtendedManagerOptionsBuilder>()
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>()
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrExtendedManagerOptionsBuilder)()
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)()
  name.vb: WithProgress(Of ApizrExtendedManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
    name: WithProgress<ApizrExtendedManagerOptionsBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1
    name: WithProgress(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  name: WithProgress<ApizrExtendedManagerOptionsBuilder>(Action<ApizrProgressEventArgs>)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrExtendedManagerOptionsBuilder>(Action<ApizrProgressEventArgs>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>(System.Action<Apizr.Progressing.ApizrProgressEventArgs>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrExtendedManagerOptionsBuilder)(Action(Of ApizrProgressEventArgs))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)(System.Action(Of Apizr.Progressing.ApizrProgressEventArgs))
  name.vb: WithProgress(Of ApizrExtendedManagerOptionsBuilder)(Action(Of ApizrProgressEventArgs))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress<ApizrExtendedManagerOptionsBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  parent: Apizr.FileTransferOptionsBuilderExtensions
  definition: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  name: WithProgress<ApizrExtendedManagerOptionsBuilder>(IApizrProgress)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrExtendedManagerOptionsBuilder>(IApizrProgress)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>(Apizr.Progressing.IApizrProgress)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrExtendedManagerOptionsBuilder)(IApizrProgress)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)(Apizr.Progressing.IApizrProgress)
  name.vb: WithProgress(Of ApizrExtendedManagerOptionsBuilder)(IApizrProgress)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
    name: WithProgress<ApizrExtendedManagerOptionsBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(Apizr.Progressing.IApizrProgress)
    name: WithProgress(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1
  commentId: M:Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0)
  parent: Apizr.MapsterOptionsBuilderExtensions
  definition: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0)
  name: WithMapsterMappingHandler<ApizrExtendedManagerOptionsBuilder>()
  nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<ApizrExtendedManagerOptionsBuilder>()
  fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>()
  nameWithType.vb: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of ApizrExtendedManagerOptionsBuilder)()
  fullName.vb: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)()
  name.vb: WithMapsterMappingHandler(Of ApizrExtendedManagerOptionsBuilder)()
  spec.csharp:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1
    name: WithMapsterMappingHandler<ApizrExtendedManagerOptionsBuilder>
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<ApizrExtendedManagerOptionsBuilder>
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1
    name: WithMapsterMappingHandler(Of ApizrExtendedManagerOptionsBuilder)
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of ApizrExtendedManagerOptionsBuilder)
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder`2
  commentId: T:Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder`2
  name: IApizrExtendedManagerOptionsBuilder<TApizrExtendedOptions, TApizrExtendedOptionsBuilder>
  nameWithType: IApizrExtendedManagerOptionsBuilder<TApizrExtendedOptions, TApizrExtendedOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder<TApizrExtendedOptions, TApizrExtendedOptionsBuilder>
  nameWithType.vb: IApizrExtendedManagerOptionsBuilder(Of TApizrExtendedOptions, TApizrExtendedOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder(Of TApizrExtendedOptions, TApizrExtendedOptionsBuilder)
  name.vb: IApizrExtendedManagerOptionsBuilder(Of TApizrExtendedOptions, TApizrExtendedOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder`2
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedOptions
    nameWithType: TApizrExtendedOptions
    fullName: TApizrExtendedOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedOptionsBuilder
    nameWithType: TApizrExtendedOptionsBuilder
    fullName: TApizrExtendedOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder`2
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedOptions
    nameWithType: TApizrExtendedOptions
    fullName: TApizrExtendedOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedOptionsBuilder
    nameWithType: TApizrExtendedOptionsBuilder
    fullName: TApizrExtendedOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase`2
  commentId: T:Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase`2
  name: IApizrExtendedManagerOptionsBuilderBase<TApizrExtendedOptions, TApizrExtendedOptionsBuilder>
  nameWithType: IApizrExtendedManagerOptionsBuilderBase<TApizrExtendedOptions, TApizrExtendedOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase<TApizrExtendedOptions, TApizrExtendedOptionsBuilder>
  nameWithType.vb: IApizrExtendedManagerOptionsBuilderBase(Of TApizrExtendedOptions, TApizrExtendedOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase(Of TApizrExtendedOptions, TApizrExtendedOptionsBuilder)
  name.vb: IApizrExtendedManagerOptionsBuilderBase(Of TApizrExtendedOptions, TApizrExtendedOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase`2
    name: IApizrExtendedManagerOptionsBuilderBase
    nameWithType: IApizrExtendedManagerOptionsBuilderBase
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedOptions
    nameWithType: TApizrExtendedOptions
    fullName: TApizrExtendedOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedOptionsBuilder
    nameWithType: TApizrExtendedOptionsBuilder
    fullName: TApizrExtendedOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase`2
    name: IApizrExtendedManagerOptionsBuilderBase
    nameWithType: IApizrExtendedManagerOptionsBuilderBase
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedOptions
    nameWithType: TApizrExtendedOptions
    fullName: TApizrExtendedOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedOptionsBuilder
    nameWithType: TApizrExtendedOptionsBuilder
    fullName: TApizrExtendedOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
  name: IApizrGlobalManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrGlobalManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrGlobalManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrGlobalManagerOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase`2
    name: IApizrGlobalManagerOptionsBuilderBase
    nameWithType: IApizrGlobalManagerOptionsBuilderBase
    fullName: Apizr.Configuring.Manager.IApizrGlobalManagerOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager
  commentId: N:Apizr.Configuring.Manager
  name: Apizr.Configuring.Manager
  nameWithType: Apizr.Configuring.Manager
  fullName: Apizr.Configuring.Manager
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2
  commentId: T:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2
  name: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder)
  name.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2
    name: IApizrExtendedCommonOptionsBuilder
    nameWithType: IApizrExtendedCommonOptionsBuilder
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedCommonOptions
    nameWithType: TApizrExtendedCommonOptions
    fullName: TApizrExtendedCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedCommonOptionsBuilder
    nameWithType: TApizrExtendedCommonOptionsBuilder
    fullName: TApizrExtendedCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2
    name: IApizrExtendedCommonOptionsBuilder
    nameWithType: IApizrExtendedCommonOptionsBuilder
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedCommonOptions
    nameWithType: TApizrExtendedCommonOptions
    fullName: TApizrExtendedCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedCommonOptionsBuilder
    nameWithType: TApizrExtendedCommonOptionsBuilder
    fullName: TApizrExtendedCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common
  commentId: N:Apizr.Extending.Configuring.Common
  name: Apizr.Extending.Configuring.Common
  nameWithType: Apizr.Extending.Configuring.Common
  fullName: Apizr.Extending.Configuring.Common
- uid: Apizr.Configuring.Common
  commentId: N:Apizr.Configuring.Common
  name: Apizr.Configuring.Common
  nameWithType: Apizr.Configuring.Common
  fullName: Apizr.Configuring.Common
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
  name: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  name.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2
    name: IApizrGlobalCommonOptionsBuilderBase
    nameWithType: IApizrGlobalCommonOptionsBuilderBase
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrCommonOptions
    nameWithType: TApizrCommonOptions
    fullName: TApizrCommonOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrCommonOptionsBuilder
    nameWithType: TApizrCommonOptionsBuilder
    fullName: TApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder`2
  commentId: T:Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder`2
  name: IApizrExtendedProperOptionsBuilder<TApizrExtendedProperOptions, TApizrExtendedProperOptionsBuilder>
  nameWithType: IApizrExtendedProperOptionsBuilder<TApizrExtendedProperOptions, TApizrExtendedProperOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder<TApizrExtendedProperOptions, TApizrExtendedProperOptionsBuilder>
  nameWithType.vb: IApizrExtendedProperOptionsBuilder(Of TApizrExtendedProperOptions, TApizrExtendedProperOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder(Of TApizrExtendedProperOptions, TApizrExtendedProperOptionsBuilder)
  name.vb: IApizrExtendedProperOptionsBuilder(Of TApizrExtendedProperOptions, TApizrExtendedProperOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder`2
    name: IApizrExtendedProperOptionsBuilder
    nameWithType: IApizrExtendedProperOptionsBuilder
    fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedProperOptions
    nameWithType: TApizrExtendedProperOptions
    fullName: TApizrExtendedProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder`2
    name: IApizrExtendedProperOptionsBuilder
    nameWithType: IApizrExtendedProperOptionsBuilder
    fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedProperOptions
    nameWithType: TApizrExtendedProperOptions
    fullName: TApizrExtendedProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Proper
  commentId: N:Apizr.Extending.Configuring.Proper
  name: Apizr.Extending.Configuring.Proper
  nameWithType: Apizr.Extending.Configuring.Proper
  fullName: Apizr.Extending.Configuring.Proper
- uid: Apizr.Configuring.Proper
  commentId: N:Apizr.Configuring.Proper
  name: Apizr.Configuring.Proper
  nameWithType: Apizr.Configuring.Proper
  fullName: Apizr.Configuring.Proper
- uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
  name: IApizrGlobalProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType: IApizrGlobalProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase<TApizrProperOptions, TApizrProperOptionsBuilder>
  nameWithType.vb: IApizrGlobalProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  fullName.vb: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  name.vb: IApizrGlobalProperOptionsBuilderBase(Of TApizrProperOptions, TApizrProperOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase`2
    name: IApizrGlobalProperOptionsBuilderBase
    nameWithType: IApizrGlobalProperOptionsBuilderBase
    fullName: Apizr.Configuring.Proper.IApizrGlobalProperOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptions
    nameWithType: TApizrProperOptions
    fullName: TApizrProperOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2
  commentId: T:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2
  name: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder)
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder)
  name.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2
    name: IApizrExtendedSharedOptionsBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedSharedOptions
    nameWithType: TApizrExtendedSharedOptions
    fullName: TApizrExtendedSharedOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedSharedOptionsBuilder
    nameWithType: TApizrExtendedSharedOptionsBuilder
    fullName: TApizrExtendedSharedOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2
    name: IApizrExtendedSharedOptionsBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedSharedOptions
    nameWithType: TApizrExtendedSharedOptions
    fullName: TApizrExtendedSharedOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedSharedOptionsBuilder
    nameWithType: TApizrExtendedSharedOptionsBuilder
    fullName: TApizrExtendedSharedOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared
  commentId: N:Apizr.Extending.Configuring.Shared
  name: Apizr.Extending.Configuring.Shared
  nameWithType: Apizr.Extending.Configuring.Shared
  fullName: Apizr.Extending.Configuring.Shared
- uid: Apizr.Configuring.Shared
  commentId: N:Apizr.Configuring.Shared
  name: Apizr.Configuring.Shared
  nameWithType: Apizr.Configuring.Shared
  fullName: Apizr.Configuring.Shared
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
  name: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2
    name: IApizrGlobalSharedRegistrationOptionsBuilderBase
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
  commentId: T:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
  name: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  name.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2
    name: IApizrGlobalSharedOptionsBuilderBase
    nameWithType: IApizrGlobalSharedOptionsBuilderBase
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrOptions
    nameWithType: TApizrOptions
    fullName: TApizrOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrOptionsBuilder
    nameWithType: TApizrOptionsBuilder
    fullName: TApizrOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  commentId: M:Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithOptionalMediation(IApizrExtendedManagerOptionsBuilder)
  nameWithType: OptionalOptionsBuilderExtensions.WithOptionalMediation(IApizrExtendedManagerOptionsBuilder)
  fullName: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithOptionalMediation
    nameWithType: OptionalOptionsBuilderExtensions.WithOptionalMediation
    fullName: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithOptionalMediation
    nameWithType: OptionalOptionsBuilderExtensions.WithOptionalMediation
    fullName: Apizr.OptionalOptionsBuilderExtensions.WithOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.OptionalOptionsBuilderExtensions
  commentId: T:Apizr.OptionalOptionsBuilderExtensions
  parent: Apizr
  name: OptionalOptionsBuilderExtensions
  nameWithType: OptionalOptionsBuilderExtensions
  fullName: Apizr.OptionalOptionsBuilderExtensions
- uid: Apizr.MediationOptionsBuilderExtensions.WithMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  commentId: M:Apizr.MediationOptionsBuilderExtensions.WithMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithMediation(IApizrExtendedManagerOptionsBuilder)
  nameWithType: MediationOptionsBuilderExtensions.WithMediation(IApizrExtendedManagerOptionsBuilder)
  fullName: Apizr.MediationOptionsBuilderExtensions.WithMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.MediationOptionsBuilderExtensions.WithMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithMediation
    nameWithType: MediationOptionsBuilderExtensions.WithMediation
    fullName: Apizr.MediationOptionsBuilderExtensions.WithMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MediationOptionsBuilderExtensions.WithMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithMediation
    nameWithType: MediationOptionsBuilderExtensions.WithMediation
    fullName: Apizr.MediationOptionsBuilderExtensions.WithMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.MediationOptionsBuilderExtensions
  commentId: T:Apizr.MediationOptionsBuilderExtensions
  parent: Apizr
  name: MediationOptionsBuilderExtensions
  nameWithType: MediationOptionsBuilderExtensions
  fullName: Apizr.MediationOptionsBuilderExtensions
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
  name: WithPriorityManagement<T>(T)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>(T)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>(T)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)(T)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)(T)
  name.vb: WithPriorityManagement(Of T)(T)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
    name: WithPriorityManagement<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement``1(``0)
    name: WithPriorityManagement(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriorityManagement(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FusilladeOptionsBuilderExtensions
  commentId: T:Apizr.FusilladeOptionsBuilderExtensions
  parent: Apizr
  name: FusilladeOptionsBuilderExtensions
  nameWithType: FusilladeOptionsBuilderExtensions
  fullName: Apizr.FusilladeOptionsBuilderExtensions
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
  name: WithPriority<T>(T)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>(T)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>(T)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T)
  name.vb: WithPriority(Of T)(T)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
    name: WithPriority<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0)
    name: WithPriority(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
  isExternal: true
  name: WithPriority<T>(T, Priority)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>(T, Priority)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>(T, Fusillade.Priority)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, Priority)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, Fusillade.Priority)
  name.vb: WithPriority(Of T)(T, Priority)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
    name: WithPriority<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,Fusillade.Priority)
    name: WithPriority(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusillade.Priority
    name: Priority
    nameWithType: Priority
    fullName: Fusillade.Priority
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  commentId: M:Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
  isExternal: true
  name: WithPriority<T>(T, Int32)
  nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>(T, Int32)
  fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>(T, System.Int32)
  nameWithType.vb: FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, Int32)
  fullName.vb: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)(T, System.Int32)
  name.vb: WithPriority(Of T)(T, Int32)
  spec.csharp:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
    name: WithPriority<T>
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority<T>
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FusilladeOptionsBuilderExtensions.WithPriority``1(``0,System.Int32)
    name: WithPriority(Of T)
    nameWithType: FusilladeOptionsBuilderExtensions.WithPriority(Of T)
    fullName: Apizr.FusilladeOptionsBuilderExtensions.WithPriority(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  commentId: M:Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithFileTransferMediation(IApizrExtendedManagerOptionsBuilder)
  nameWithType: MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(IApizrExtendedManagerOptionsBuilder)
  fullName: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithFileTransferMediation
    nameWithType: MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
    fullName: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithFileTransferMediation
    nameWithType: MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
    fullName: Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.MediationFileTransferOptionsBuilderExtensions
  commentId: T:Apizr.MediationFileTransferOptionsBuilderExtensions
  parent: Apizr
  name: MediationFileTransferOptionsBuilderExtensions
  nameWithType: MediationFileTransferOptionsBuilderExtensions
  fullName: Apizr.MediationFileTransferOptionsBuilderExtensions
- uid: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  commentId: M:Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name: WithFileTransferOptionalMediation(IApizrExtendedManagerOptionsBuilder)
  nameWithType: OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(IApizrExtendedManagerOptionsBuilder)
  fullName: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithFileTransferOptionalMediation
    nameWithType: OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
    fullName: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
    name: WithFileTransferOptionalMediation
    nameWithType: OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
    fullName: Apizr.OptionalFileTransferOptionsBuilderExtensions.WithFileTransferOptionalMediation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.OptionalFileTransferOptionsBuilderExtensions
  commentId: T:Apizr.OptionalFileTransferOptionsBuilderExtensions
  parent: Apizr
  name: OptionalFileTransferOptionsBuilderExtensions
  nameWithType: OptionalFileTransferOptionsBuilderExtensions
  fullName: Apizr.OptionalFileTransferOptionsBuilderExtensions
- uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0)
  commentId: M:Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0)
  name: WithAutoMapperMappingHandler<TBuilder>(TBuilder)
  nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>(TBuilder)
  fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>(TBuilder)
  nameWithType.vb: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)(TBuilder)
  fullName.vb: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)(TBuilder)
  name.vb: WithAutoMapperMappingHandler(Of TBuilder)(TBuilder)
  spec.csharp:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0)
    name: WithAutoMapperMappingHandler<TBuilder>
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler``1(``0)
    name: WithAutoMapperMappingHandler(Of TBuilder)
    nameWithType: AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)
    fullName: Apizr.AutoMapperOptionsBuilderExtensions.WithAutoMapperMappingHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AutoMapperOptionsBuilderExtensions
  commentId: T:Apizr.AutoMapperOptionsBuilderExtensions
  parent: Apizr
  name: AutoMapperOptionsBuilderExtensions
  nameWithType: AutoMapperOptionsBuilderExtensions
  fullName: Apizr.AutoMapperOptionsBuilderExtensions
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0)
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AkavacheOptionsBuilderExtensions
  commentId: T:Apizr.AkavacheOptionsBuilderExtensions
  parent: Apizr
  name: AkavacheOptionsBuilderExtensions
  nameWithType: AkavacheOptionsBuilderExtensions
  fullName: Apizr.AkavacheOptionsBuilderExtensions
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
  isExternal: true
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache))
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache))
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache})
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
  isExternal: true
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.String)
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  commentId: M:Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
  isExternal: true
  name: WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, String)
  nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, Func<IBlobCache>, String)
  fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>(TBuilder, System.Func<Akavache.IBlobCache>, System.String)
  nameWithType.vb: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
  fullName.vb: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)(TBuilder, System.Func(Of Akavache.IBlobCache), System.String)
  name.vb: WithAkavacheCacheHandler(Of TBuilder)(TBuilder, Func(Of IBlobCache), String)
  spec.csharp:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler<TBuilder>
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler``1(``0,System.Func{Akavache.IBlobCache},System.String)
    name: WithAkavacheCacheHandler(Of TBuilder)
    nameWithType: AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
    fullName: Apizr.AkavacheOptionsBuilderExtensions.WithAkavacheCacheHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Akavache.IBlobCache
    name: IBlobCache
    nameWithType: IBlobCache
    fullName: Akavache.IBlobCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  name: WithProgress<TBuilder>(TBuilder)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder)
  name.vb: WithProgress(Of TBuilder)(TBuilder)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
    name: WithProgress<TBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
    name: WithProgress(Of TBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions
  commentId: T:Apizr.FileTransferOptionsBuilderExtensions
  parent: Apizr
  name: FileTransferOptionsBuilderExtensions
  nameWithType: FileTransferOptionsBuilderExtensions
  fullName: Apizr.FileTransferOptionsBuilderExtensions
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  isExternal: true
  name: WithProgress<TBuilder>(TBuilder, Action<ApizrProgressEventArgs>)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, Action<ApizrProgressEventArgs>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, System.Action<Apizr.Progressing.ApizrProgressEventArgs>)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, Action(Of ApizrProgressEventArgs))
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, System.Action(Of Apizr.Progressing.ApizrProgressEventArgs))
  name.vb: WithProgress(Of TBuilder)(TBuilder, Action(Of ApizrProgressEventArgs))
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress<TBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
    name: WithProgress(Of TBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  name: WithProgress<TBuilder>(TBuilder, IApizrProgress)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, IApizrProgress)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, Apizr.Progressing.IApizrProgress)
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, IApizrProgress)
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, Apizr.Progressing.IApizrProgress)
  name.vb: WithProgress(Of TBuilder)(TBuilder, IApizrProgress)
  spec.csharp:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
    name: WithProgress<TBuilder>
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
    name: WithProgress(Of TBuilder)
    nameWithType: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
    fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Progressing.IApizrProgress
    name: IApizrProgress
    nameWithType: IApizrProgress
    fullName: Apizr.Progressing.IApizrProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0)
  commentId: M:Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0)
  name: WithMapsterMappingHandler<TBuilder>(TBuilder)
  nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>(TBuilder)
  fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>(TBuilder)
  nameWithType.vb: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)(TBuilder)
  fullName.vb: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)(TBuilder)
  name.vb: WithMapsterMappingHandler(Of TBuilder)(TBuilder)
  spec.csharp:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0)
    name: WithMapsterMappingHandler<TBuilder>
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler<TBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler``1(``0)
    name: WithMapsterMappingHandler(Of TBuilder)
    nameWithType: MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)
    fullName: Apizr.MapsterOptionsBuilderExtensions.WithMapsterMappingHandler(Of TBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBuilder
    nameWithType: TBuilder
    fullName: TBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.MapsterOptionsBuilderExtensions
  commentId: T:Apizr.MapsterOptionsBuilderExtensions
  parent: Apizr
  name: MapsterOptionsBuilderExtensions
  nameWithType: MapsterOptionsBuilderExtensions
  fullName: Apizr.MapsterOptionsBuilderExtensions
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions
  commentId: T:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions
  parent: Apizr.Extending.Configuring.Manager
  name: ApizrExtendedManagerOptions
  nameWithType: ApizrExtendedManagerOptions
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptions
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.#ctor*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.#ctor
  name: ApizrExtendedManagerOptionsBuilder
  nameWithType: ApizrExtendedManagerOptionsBuilder.ApizrExtendedManagerOptionsBuilder
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ApizrExtendedManagerOptionsBuilder
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress
  name: WithBaseAddress
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBaseAddress
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBaseAddress
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.String)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
  name: WithBaseAddress(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
  isExternal: true
  name: WithBaseAddress(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.String)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  name: WithBaseAddress(Func<IServiceProvider, String>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(Func<IServiceProvider, String>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(System.Func<System.IServiceProvider, System.String>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress(Func(Of IServiceProvider, String))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress(System.Func(Of System.IServiceProvider, System.String))
  name.vb: WithBaseAddress(Func(Of IServiceProvider, String))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,System.String}
  commentId: T:System.Func{System.IServiceProvider,System.String}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, String>
  nameWithType: Func<IServiceProvider, String>
  fullName: System.Func<System.IServiceProvider, System.String>
  nameWithType.vb: Func(Of IServiceProvider, String)
  fullName.vb: System.Func(Of System.IServiceProvider, System.String)
  name.vb: Func(Of IServiceProvider, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
  isExternal: true
  name: WithBaseAddress(Func<IServiceProvider, String>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress(Func<IServiceProvider, String>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress(System.Func<System.IServiceProvider, System.String>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress(Func(Of IServiceProvider, String))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress(System.Func(Of System.IServiceProvider, System.String))
  name.vb: WithBaseAddress(Func(Of IServiceProvider, String))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.String})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Uri)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Uri)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
  name: WithBaseAddress(Uri)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(Uri)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(System.Uri)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress(Uri)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress(System.Uri)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
  isExternal: true
  name: WithBaseAddress(Uri)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(Uri)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress(System.Uri)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(Uri)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress(System.Uri)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBaseAddress(System.Uri)
    name: WithBaseAddress
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  name: WithBaseAddress(Func<IServiceProvider, Uri>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(Func<IServiceProvider, Uri>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress(System.Func<System.IServiceProvider, System.Uri>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress(Func(Of IServiceProvider, Uri))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress(System.Func(Of System.IServiceProvider, System.Uri))
  name.vb: WithBaseAddress(Func(Of IServiceProvider, Uri))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,System.Uri}
  commentId: T:System.Func{System.IServiceProvider,System.Uri}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, Uri>
  nameWithType: Func<IServiceProvider, Uri>
  fullName: System.Func<System.IServiceProvider, System.Uri>
  nameWithType.vb: Func(Of IServiceProvider, Uri)
  fullName.vb: System.Func(Of System.IServiceProvider, System.Uri)
  name.vb: Func(Of IServiceProvider, Uri)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
  isExternal: true
  name: WithBaseAddress(Func<IServiceProvider, Uri>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress(Func<IServiceProvider, Uri>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress(System.Func<System.IServiceProvider, System.Uri>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress(Func(Of IServiceProvider, Uri))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress(System.Func(Of System.IServiceProvider, System.Uri))
  name.vb: WithBaseAddress(Func(Of IServiceProvider, Uri))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBaseAddress(System.Func{System.IServiceProvider,System.Uri})
    name: WithBaseAddress
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBaseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath
  name: WithBasePath
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithBasePath
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithBasePath
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBasePath(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBasePath(System.String)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
  name: WithBasePath(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBasePath(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBasePath(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBasePath(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBasePath(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
  isExternal: true
  name: WithBasePath(String)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath(String)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath(System.String)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath(String)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath(System.String)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithBasePath(System.String)
    name: WithBasePath
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBasePath(System.Func{System.IServiceProvider,System.String})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithBasePath(System.Func{System.IServiceProvider,System.String})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBasePath(System.Func{System.IServiceProvider,System.String})
  name: WithBasePath(Func<IServiceProvider, String>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBasePath(Func<IServiceProvider, String>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBasePath(System.Func<System.IServiceProvider, System.String>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBasePath(Func(Of IServiceProvider, String))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBasePath(System.Func(Of System.IServiceProvider, System.String))
  name.vb: WithBasePath(Func(Of IServiceProvider, String))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBasePath(System.Func{System.IServiceProvider,System.String})
    name: WithBasePath
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithBasePath
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBasePath(System.Func{System.IServiceProvider,System.String})
    name: WithBasePath
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithBasePath
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBasePath(System.Func{System.IServiceProvider,System.String})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBasePath(System.Func{System.IServiceProvider,System.String})
  isExternal: true
  name: WithBasePath(Func<IServiceProvider, String>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBasePath(Func<IServiceProvider, String>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBasePath(System.Func<System.IServiceProvider, System.String>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBasePath(Func(Of IServiceProvider, String))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBasePath(System.Func(Of System.IServiceProvider, System.String))
  name.vb: WithBasePath(Func(Of IServiceProvider, String))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBasePath(System.Func{System.IServiceProvider,System.String})
    name: WithBasePath
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBasePath
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithBasePath(System.Func{System.IServiceProvider,System.String})
    name: WithBasePath
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBasePath
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithBasePath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler
  name: WithHttpClientHandler
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHttpClientHandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  name: WithHttpClientHandler(HttpClientHandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler(HttpClientHandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler(HttpClientHandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClientHandler
  commentId: T:System.Net.Http.HttpClientHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  isExternal: true
  name: WithHttpClientHandler(HttpClientHandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler(HttpClientHandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler(HttpClientHandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler(System.Net.Http.HttpClientHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithHttpClientHandler(System.Net.Http.HttpClientHandler)
    name: WithHttpClientHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  name: WithHttpClientHandler(Func<IServiceProvider, HttpClientHandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler(Func<IServiceProvider, HttpClientHandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler(System.Func<System.IServiceProvider, System.Net.Http.HttpClientHandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler(Func(Of IServiceProvider, HttpClientHandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler(System.Func(Of System.IServiceProvider, System.Net.Http.HttpClientHandler))
  name.vb: WithHttpClientHandler(Func(Of IServiceProvider, HttpClientHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler}
  commentId: T:System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, HttpClientHandler>
  nameWithType: Func<IServiceProvider, HttpClientHandler>
  fullName: System.Func<System.IServiceProvider, System.Net.Http.HttpClientHandler>
  nameWithType.vb: Func(Of IServiceProvider, HttpClientHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, System.Net.Http.HttpClientHandler)
  name.vb: Func(Of IServiceProvider, HttpClientHandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
  isExternal: true
  name: WithHttpClientHandler(Func<IServiceProvider, HttpClientHandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHttpClientHandler(Func<IServiceProvider, HttpClientHandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHttpClientHandler(System.Func<System.IServiceProvider, System.Net.Http.HttpClientHandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHttpClientHandler(Func(Of IServiceProvider, HttpClientHandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHttpClientHandler(System.Func(Of System.IServiceProvider, System.Net.Http.HttpClientHandler))
  name.vb: WithHttpClientHandler(Func(Of IServiceProvider, HttpClientHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHttpClientHandler
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHttpClientHandler(System.Func{System.IServiceProvider,System.Net.Http.HttpClientHandler})
    name: WithHttpClientHandler
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHttpClientHandler
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHttpClientHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpClientHandler
    name: HttpClientHandler
    nameWithType: HttpClientHandler
    fullName: System.Net.Http.HttpClientHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder
  name: ConfigureHttpClientBuilder
  nameWithType: ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.ConfigureHttpClientBuilder
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  name: ConfigureHttpClientBuilder(Action<IHttpClientBuilder>, ApizrDuplicateStrategy)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.ConfigureHttpClientBuilder(Action<IHttpClientBuilder>, ApizrDuplicateStrategy)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.ConfigureHttpClientBuilder(System.Action<Microsoft.Extensions.DependencyInjection.IHttpClientBuilder>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).ConfigureHttpClientBuilder(Action(Of IHttpClientBuilder), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).ConfigureHttpClientBuilder(System.Action(Of Microsoft.Extensions.DependencyInjection.IHttpClientBuilder), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: ConfigureHttpClientBuilder(Action(Of IHttpClientBuilder), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClientBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.ConfigureHttpClientBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.ConfigureHttpClientBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    name: IHttpClientBuilder
    nameWithType: IHttpClientBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClientBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).ConfigureHttpClientBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).ConfigureHttpClientBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    name: IHttpClientBuilder
    nameWithType: IHttpClientBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder}
  commentId: T:System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IHttpClientBuilder>
  nameWithType: Action<IHttpClientBuilder>
  fullName: System.Action<Microsoft.Extensions.DependencyInjection.IHttpClientBuilder>
  nameWithType.vb: Action(Of IHttpClientBuilder)
  fullName.vb: System.Action(Of Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)
  name.vb: Action(Of IHttpClientBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    name: IHttpClientBuilder
    nameWithType: IHttpClientBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    name: IHttpClientBuilder
    nameWithType: IHttpClientBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.ApizrDuplicateStrategy
  commentId: T:Apizr.Configuring.ApizrDuplicateStrategy
  parent: Apizr.Configuring
  name: ApizrDuplicateStrategy
  nameWithType: ApizrDuplicateStrategy
  fullName: Apizr.Configuring.ApizrDuplicateStrategy
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: ConfigureHttpClientBuilder(Action<IHttpClientBuilder>, ApizrDuplicateStrategy)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.ConfigureHttpClientBuilder(Action<IHttpClientBuilder>, ApizrDuplicateStrategy)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.ConfigureHttpClientBuilder(System.Action<Microsoft.Extensions.DependencyInjection.IHttpClientBuilder>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).ConfigureHttpClientBuilder(Action(Of IHttpClientBuilder), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).ConfigureHttpClientBuilder(System.Action(Of Microsoft.Extensions.DependencyInjection.IHttpClientBuilder), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: ConfigureHttpClientBuilder(Action(Of IHttpClientBuilder), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClientBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.ConfigureHttpClientBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.ConfigureHttpClientBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    name: IHttpClientBuilder
    nameWithType: IHttpClientBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.ConfigureHttpClientBuilder(System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder},Apizr.Configuring.ApizrDuplicateStrategy)
    name: ConfigureHttpClientBuilder
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).ConfigureHttpClientBuilder
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).ConfigureHttpClientBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    name: IHttpClientBuilder
    nameWithType: IHttpClientBuilder
    fullName: Microsoft.Extensions.DependencyInjection.IHttpClientBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring
  commentId: N:Apizr.Configuring
  name: Apizr.Configuring
  nameWithType: Apizr.Configuring
  fullName: Apizr.Configuring
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler
  name: WithAuthenticationHandler
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithAuthenticationHandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  name: WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler(System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
  commentId: T:System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}
  parent: System
  definition: System.Func`2
  name: Func<HttpRequestMessage, Task<String>>
  nameWithType: Func<HttpRequestMessage, Task<String>>
  fullName: System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>
  nameWithType.vb: Func(Of HttpRequestMessage, Task(Of String))
  fullName.vb: System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))
  name.vb: Func(Of HttpRequestMessage, Task(Of String))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  isExternal: true
  name: WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler(Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler(System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler(System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithAuthenticationHandler(System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithAuthenticationHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  name: WithAuthenticationHandler<TAuthenticationHandler>(Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler))
  name.vb: WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler<TAuthenticationHandler>
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler(Of TAuthenticationHandler)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{TAuthenticationHandler}}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0}
  parent: System
  definition: System.Func`3
  name: Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>
  nameWithType: Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>
  nameWithType.vb: Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler)
  name.vb: Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  isExternal: true
  name: WithAuthenticationHandler<TAuthenticationHandler>(Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(Func<IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>(System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)(System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, TAuthenticationHandler))
  name.vb: WithAuthenticationHandler(Of TAuthenticationHandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, TAuthenticationHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler<TAuthenticationHandler>
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TAuthenticationHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: WithAuthenticationHandler(Of TAuthenticationHandler)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TAuthenticationHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TAuthenticationHandler
    nameWithType: TAuthenticationHandler
    fullName: TAuthenticationHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(Expression<Func<TSettingsService, String>>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(Expression<Func<TSettingsService, String>>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(Expression(Of Func(Of TSettingsService, String)), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(Expression(Of Func(Of TSettingsService, String)), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler<TSettingsService, TTokenService>
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler(Of TSettingsService, TTokenService)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.String}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TSettingsService, String>>
  nameWithType: Expression<Func<TSettingsService, String>>
  fullName: System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>
  nameWithType.vb: Expression(Of Func(Of TSettingsService, String))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String))
  name.vb: Expression(Of Func(Of TSettingsService, String))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TTokenService},System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>
  nameWithType: Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>
  nameWithType.vb: Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService, TTokenService>(Expression<Func<TSettingsService, String>>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(Expression<Func<TSettingsService, String>>, Expression<Func<TTokenService, HttpRequestMessage, Task<String>>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Linq.Expressions.Expression<System.Func<TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(Expression(Of Func(Of TSettingsService, String)), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Linq.Expressions.Expression(Of System.Func(Of TTokenService, System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String))))
  name.vb: WithAuthenticationHandler(Of TSettingsService, TTokenService)(Expression(Of Func(Of TSettingsService, String)), Expression(Of Func(Of TTokenService, HttpRequestMessage, Task(Of String))))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler<TSettingsService, TTokenService>
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService, TTokenService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``2(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}}})
    name: WithAuthenticationHandler(Of TSettingsService, TTokenService)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService, TTokenService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenService
    nameWithType: TTokenService
    fullName: TTokenService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  name: WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{{TSettingsService},System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  name: WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
  isExternal: true
  name: WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(Expression<Func<TSettingsService, String>>, Func<HttpRequestMessage, Task<String>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>(System.Linq.Expressions.Expression<System.Func<TSettingsService, System.String>>, System.Func<System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task<System.String>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)(System.Linq.Expressions.Expression(Of System.Func(Of TSettingsService, System.String)), System.Func(Of System.Net.Http.HttpRequestMessage, System.Threading.Tasks.Task(Of System.String)))
  name.vb: WithAuthenticationHandler(Of TSettingsService)(Expression(Of Func(Of TSettingsService, String)), Func(Of HttpRequestMessage, Task(Of String)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler<TSettingsService>
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithAuthenticationHandler<TSettingsService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithAuthenticationHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Func{System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task{System.String}})
    name: WithAuthenticationHandler(Of TSettingsService)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithAuthenticationHandler(Of TSettingsService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSettingsService
    nameWithType: TSettingsService
    fullName: TSettingsService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders
  name: WithHeaders
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHeaders
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHeaders
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHeaders(System.String[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHeaders(System.String[])
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
  name: WithHeaders(String[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHeaders(String[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHeaders(System.String[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHeaders(String())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHeaders(System.String())
  name.vb: WithHeaders(String())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
  isExternal: true
  name: WithHeaders(String[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders(String[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders(System.String[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders(String())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders(System.String())
  name.vb: WithHeaders(String())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHeaders(System.String[])
    name: WithHeaders
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  name: WithHeaders(Func<IServiceProvider, IList<String>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHeaders(Func<IServiceProvider, IList<String>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHeaders(System.Func<System.IServiceProvider, System.Collections.Generic.IList<System.String>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHeaders(Func(Of IServiceProvider, IList(Of String)))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHeaders(System.Func(Of System.IServiceProvider, System.Collections.Generic.IList(Of System.String)))
  name.vb: WithHeaders(Func(Of IServiceProvider, IList(Of String)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHeaders
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHeaders
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}}
  commentId: T:System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, IList<String>>
  nameWithType: Func<IServiceProvider, IList<String>>
  fullName: System.Func<System.IServiceProvider, System.Collections.Generic.IList<System.String>>
  nameWithType.vb: Func(Of IServiceProvider, IList(Of String))
  fullName.vb: System.Func(Of System.IServiceProvider, System.Collections.Generic.IList(Of System.String))
  name.vb: Func(Of IServiceProvider, IList(Of String))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
  isExternal: true
  name: WithHeaders(Func<IServiceProvider, IList<String>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHeaders(Func<IServiceProvider, IList<String>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHeaders(System.Func<System.IServiceProvider, System.Collections.Generic.IList<System.String>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHeaders(Func(Of IServiceProvider, IList(Of String)))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHeaders(System.Func(Of System.IServiceProvider, System.Collections.Generic.IList(Of System.String)))
  name.vb: WithHeaders(Func(Of IServiceProvider, IList(Of String)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHeaders
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithHeaders(System.Func{System.IServiceProvider,System.Collections.Generic.IList{System.String}})
    name: WithHeaders
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHeaders
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout
  name: WithOperationTimeout
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithOperationTimeout
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithOperationTimeout
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithOperationTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithOperationTimeout(System.TimeSpan)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
  name: WithOperationTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithOperationTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithOperationTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
  isExternal: true
  name: WithOperationTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithOperationTimeout(System.TimeSpan)
    name: WithOperationTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  name: WithOperationTimeout(Func<IServiceProvider, TimeSpan>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout(Func<IServiceProvider, TimeSpan>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout(System.Func<System.IServiceProvider, System.TimeSpan>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithOperationTimeout(Func(Of IServiceProvider, TimeSpan))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithOperationTimeout(System.Func(Of System.IServiceProvider, System.TimeSpan))
  name.vb: WithOperationTimeout(Func(Of IServiceProvider, TimeSpan))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,System.TimeSpan}
  commentId: T:System.Func{System.IServiceProvider,System.TimeSpan}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, TimeSpan>
  nameWithType: Func<IServiceProvider, TimeSpan>
  fullName: System.Func<System.IServiceProvider, System.TimeSpan>
  nameWithType.vb: Func(Of IServiceProvider, TimeSpan)
  fullName.vb: System.Func(Of System.IServiceProvider, System.TimeSpan)
  name.vb: Func(Of IServiceProvider, TimeSpan)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  isExternal: true
  name: WithOperationTimeout(Func<IServiceProvider, TimeSpan>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithOperationTimeout(Func<IServiceProvider, TimeSpan>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithOperationTimeout(System.Func<System.IServiceProvider, System.TimeSpan>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithOperationTimeout(Func(Of IServiceProvider, TimeSpan))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithOperationTimeout(System.Func(Of System.IServiceProvider, System.TimeSpan))
  name.vb: WithOperationTimeout(Func(Of IServiceProvider, TimeSpan))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithOperationTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithOperationTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithOperationTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithOperationTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithOperationTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout
  name: WithRequestTimeout
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithRequestTimeout
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRequestTimeout
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRequestTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRequestTimeout(System.TimeSpan)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
  name: WithRequestTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRequestTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRequestTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
  isExternal: true
  name: WithRequestTimeout(TimeSpan)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout(TimeSpan)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout(System.TimeSpan)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout(TimeSpan)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout(System.TimeSpan)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithRequestTimeout(System.TimeSpan)
    name: WithRequestTimeout
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  name: WithRequestTimeout(Func<IServiceProvider, TimeSpan>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout(Func<IServiceProvider, TimeSpan>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout(System.Func<System.IServiceProvider, System.TimeSpan>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRequestTimeout(Func(Of IServiceProvider, TimeSpan))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRequestTimeout(System.Func(Of System.IServiceProvider, System.TimeSpan))
  name.vb: WithRequestTimeout(Func(Of IServiceProvider, TimeSpan))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
  isExternal: true
  name: WithRequestTimeout(Func<IServiceProvider, TimeSpan>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithRequestTimeout(Func<IServiceProvider, TimeSpan>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithRequestTimeout(System.Func<System.IServiceProvider, System.TimeSpan>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithRequestTimeout(Func(Of IServiceProvider, TimeSpan))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithRequestTimeout(System.Func(Of System.IServiceProvider, System.TimeSpan))
  name.vb: WithRequestTimeout(Func(Of IServiceProvider, TimeSpan))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithRequestTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithRequestTimeout(System.Func{System.IServiceProvider,System.TimeSpan})
    name: WithRequestTimeout
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithRequestTimeout
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithRequestTimeout
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler
  name: AddDelegatingHandler
  nameWithType: ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.AddDelegatingHandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1({THandler})
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1(``0)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
  name: AddDelegatingHandler<THandler>(THandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  name.vb: AddDelegatingHandler(Of THandler)(THandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: '{THandler}'
  commentId: '!:THandler'
  definition: THandler
  name: THandler
  nameWithType: THandler
  fullName: THandler
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
  name: AddDelegatingHandler<THandler>(THandler)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>(THandler)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)(THandler)
  name.vb: AddDelegatingHandler(Of THandler)(THandler)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.AddDelegatingHandler``1(``0)
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: THandler
  name: THandler
  nameWithType: THandler
  fullName: THandler
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{System.IServiceProvider,{THandler}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  name: AddDelegatingHandler<THandler>(Func<IServiceProvider, THandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>(Func<IServiceProvider, THandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<System.IServiceProvider, THandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, THandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of System.IServiceProvider, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, THandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,{THandler}}
  commentId: T:System.Func{System.IServiceProvider,``0}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, THandler>
  nameWithType: Func<IServiceProvider, THandler>
  fullName: System.Func<System.IServiceProvider, THandler>
  nameWithType.vb: Func(Of IServiceProvider, THandler)
  fullName.vb: System.Func(Of System.IServiceProvider, THandler)
  name.vb: Func(Of IServiceProvider, THandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
  isExternal: true
  name: AddDelegatingHandler<THandler>(Func<IServiceProvider, THandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>(Func<IServiceProvider, THandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<System.IServiceProvider, THandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, THandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of System.IServiceProvider, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, THandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  name: AddDelegatingHandler<THandler>(Func<IServiceProvider, IApizrManagerOptionsBase, THandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>(Func<IServiceProvider, IApizrManagerOptionsBase, THandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,{THandler}}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0}
  parent: System
  definition: System.Func`3
  name: Func<IServiceProvider, IApizrManagerOptionsBase, THandler>
  nameWithType: Func<IServiceProvider, IApizrManagerOptionsBase, THandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>
  nameWithType.vb: Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler)
  name.vb: Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
  isExternal: true
  name: AddDelegatingHandler<THandler>(Func<IServiceProvider, IApizrManagerOptionsBase, THandler>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>(Func<IServiceProvider, IApizrManagerOptionsBase, THandler>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>(System.Func<System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)(System.Func(Of System.IServiceProvider, Apizr.Configuring.Manager.IApizrManagerOptionsBase, THandler))
  name.vb: AddDelegatingHandler(Of THandler)(Func(Of IServiceProvider, IApizrManagerOptionsBase, THandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler<THandler>
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.AddDelegatingHandler<THandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.AddDelegatingHandler``1(System.Func{System.IServiceProvider,Apizr.Configuring.Manager.IApizrManagerOptionsBase,``0})
    name: AddDelegatingHandler(Of THandler)
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).AddDelegatingHandler(Of THandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    name: IApizrManagerOptionsBase
    nameWithType: IApizrManagerOptionsBase
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: THandler
    nameWithType: THandler
    fullName: THandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext
  name: WithContext
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithContext
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithContext
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  name: WithContext(Func<Context>, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithContext(Func<Context>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithContext(System.Func<Polly.Context>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithContext(Func(Of Context), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithContext(System.Func(Of Polly.Context), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithContext(Func(Of Context), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Polly.Context}
  commentId: T:System.Func{Polly.Context}
  parent: System
  definition: System.Func`1
  name: Func<Context>
  nameWithType: Func<Context>
  fullName: System.Func<Polly.Context>
  nameWithType.vb: Func(Of Context)
  fullName.vb: System.Func(Of Polly.Context)
  name.vb: Func(Of Context)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: WithContext(Func<Context>, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext(Func<Context>, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext(System.Func<Polly.Context>, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext(Func(Of Context), ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext(System.Func(Of Polly.Context), Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithContext(Func(Of Context), ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase`2.WithContext(System.Func{Polly.Context},Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithContext
    nameWithType: IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedRegistrationOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching
  name: WithExCatching
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithExCatching
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithExCatching
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  name: WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithExCatching(System.Action<Apizr.ApizrException>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithExCatching(System.Action(Of Apizr.ApizrException), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.ApizrException}
  commentId: T:System.Action{Apizr.ApizrException}
  parent: System
  definition: System.Action`1
  name: Action<ApizrException>
  nameWithType: Action<ApizrException>
  fullName: System.Action<Apizr.ApizrException>
  nameWithType.vb: Action(Of ApizrException)
  fullName.vb: System.Action(Of Apizr.ApizrException)
  name.vb: Action(Of ApizrException)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching(Action<ApizrException>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching(System.Action<Apizr.ApizrException>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(System.Action(Of Apizr.ApizrException), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Action(Of ApizrException), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching(System.Action{Apizr.ApizrException},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithExCatching``1(System.Action{Apizr.ApizrException{{TResult}}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  name: WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithExCatching<TResult>(System.Action<Apizr.ApizrException<TResult>>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithExCatching(Of TResult)(System.Action(Of Apizr.ApizrException(Of TResult)), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching<TResult>
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithExCatching<TResult>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithExCatching<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching(Of TResult)
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithExCatching(Of TResult)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithExCatching(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.ApizrException{{TResult}}}
  commentId: T:System.Action{Apizr.ApizrException{``0}}
  parent: System
  definition: System.Action`1
  name: Action<ApizrException<TResult>>
  nameWithType: Action<ApizrException<TResult>>
  fullName: System.Action<Apizr.ApizrException<TResult>>
  nameWithType.vb: Action(Of ApizrException(Of TResult))
  fullName.vb: System.Action(Of Apizr.ApizrException(Of TResult))
  name.vb: Action(Of ApizrException(Of TResult))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
  isExternal: true
  name: WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>(Action<ApizrException<TResult>>, Boolean, ApizrDuplicateStrategy)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>(System.Action<Apizr.ApizrException<TResult>>, System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)(System.Action(Of Apizr.ApizrException(Of TResult)), System.Boolean, Apizr.Configuring.ApizrDuplicateStrategy)
  name.vb: WithExCatching(Of TResult)(Action(Of ApizrException(Of TResult)), Boolean, ApizrDuplicateStrategy)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching<TResult>
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithExCatching<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithExCatching``1(System.Action{Apizr.ApizrException{``0}},System.Boolean,Apizr.Configuring.ApizrDuplicateStrategy)
    name: WithExCatching(Of TResult)
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithExCatching(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.ApizrDuplicateStrategy
    name: ApizrDuplicateStrategy
    nameWithType: ApizrDuplicateStrategy
    fullName: Apizr.Configuring.ApizrDuplicateStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter
  name: WithHandlerParameter
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithHandlerParameter
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithHandlerParameter
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHandlerParameter(System.String,System.Object)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithHandlerParameter(System.String,System.Object)
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
  name: WithHandlerParameter(String, Object)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHandlerParameter(String, Object)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHandlerParameter(System.String, System.Object)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHandlerParameter(String, Object)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHandlerParameter(System.String, System.Object)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
  isExternal: true
  name: WithHandlerParameter(String, Object)
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter(String, Object)
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter(System.String, System.Object)
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter(String, Object)
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter(System.String, System.Object)
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithHandlerParameter(System.String,System.Object)
    name: WithHandlerParameter
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithHandlerParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging
  name: WithLogging
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithLogging
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithLogging
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  parent: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  name: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())
  name.vb: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Logging.HttpTracerMode
  commentId: T:Apizr.Logging.HttpTracerMode
  parent: Apizr.Logging
  name: HttpTracerMode
  nameWithType: HttpTracerMode
  fullName: Apizr.Logging.HttpTracerMode
- uid: Apizr.Logging.HttpMessageParts
  commentId: T:Apizr.Logging.HttpMessageParts
  parent: Apizr.Logging
  name: HttpMessageParts
  nameWithType: HttpMessageParts
  fullName: Apizr.Logging.HttpMessageParts
- uid: Microsoft.Extensions.Logging.LogLevel[]
  isExternal: true
  name: LogLevel[]
  nameWithType: LogLevel[]
  fullName: Microsoft.Extensions.Logging.LogLevel[]
  nameWithType.vb: LogLevel()
  fullName.vb: Microsoft.Extensions.Logging.LogLevel()
  name.vb: LogLevel()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  commentId: M:Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
  isExternal: true
  name: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging(HttpTracerMode, HttpMessageParts, LogLevel[])
  fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[])
  nameWithType.vb: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  fullName.vb: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging(Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())
  name.vb: WithLogging(HttpTracerMode, HttpMessageParts, LogLevel())
  spec.csharp:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase<TApizrOptions, TApizrOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase`2.WithLogging(Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[])
    name: WithLogging
    nameWithType: IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
    fullName: Apizr.Configuring.Shared.IApizrGlobalSharedOptionsBuilderBase(Of TApizrOptions, TApizrOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Logging
  commentId: N:Apizr.Logging
  name: Apizr.Logging
  nameWithType: Apizr.Logging
  fullName: Apizr.Logging
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  name: WithLogging(Func<IServiceProvider, (T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithLogging(Func<IServiceProvider, (T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithLogging(System.Func<System.IServiceProvider, System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithLogging(Func(Of IServiceProvider, (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithLogging(System.Func(Of System.IServiceProvider, System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())))
  name.vb: WithLogging(Func(Of IServiceProvider, (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}}
  commentId: T:System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, (T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>
  nameWithType: Func<IServiceProvider, (T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>
  fullName: System.Func<System.IServiceProvider, System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>
  nameWithType.vb: Func(Of IServiceProvider, (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel()))
  fullName.vb: System.Func(Of System.IServiceProvider, System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel()))
  name.vb: Func(Of IServiceProvider, (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel()))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
  isExternal: true
  name: WithLogging(Func<IServiceProvider, (T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging(Func<IServiceProvider, (T1, T2, T3)<HttpTracerMode, HttpMessageParts, LogLevel[]>>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging(System.Func<System.IServiceProvider, System.ValueTuple<Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel[]>>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging(Func(Of IServiceProvider, (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging(System.Func(Of System.IServiceProvider, System.ValueTuple(Of Apizr.Logging.HttpTracerMode, Apizr.Logging.HttpMessageParts, Microsoft.Extensions.Logging.LogLevel())))
  name.vb: WithLogging(Func(Of IServiceProvider, (T1, T2, T3)(Of HttpTracerMode, HttpMessageParts, LogLevel())))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,System.ValueTuple{Apizr.Logging.HttpTracerMode,Apizr.Logging.HttpMessageParts,Microsoft.Extensions.Logging.LogLevel[]}})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  parent: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  name: WithLogging(Func<IServiceProvider, HttpTracerMode>, Func<IServiceProvider, HttpMessageParts>, Func<IServiceProvider, LogLevel[]>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithLogging(Func<IServiceProvider, HttpTracerMode>, Func<IServiceProvider, HttpMessageParts>, Func<IServiceProvider, LogLevel[]>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithLogging(System.Func<System.IServiceProvider, Apizr.Logging.HttpTracerMode>, System.Func<System.IServiceProvider, Apizr.Logging.HttpMessageParts>, System.Func<System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel[]>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithLogging(Func(Of IServiceProvider, HttpTracerMode), Func(Of IServiceProvider, HttpMessageParts), Func(Of IServiceProvider, LogLevel()))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithLogging(System.Func(Of System.IServiceProvider, Apizr.Logging.HttpTracerMode), System.Func(Of System.IServiceProvider, Apizr.Logging.HttpMessageParts), System.Func(Of System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel()))
  name.vb: WithLogging(Func(Of IServiceProvider, HttpTracerMode), Func(Of IServiceProvider, HttpMessageParts), Func(Of IServiceProvider, LogLevel()))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, HttpTracerMode>
  nameWithType: Func<IServiceProvider, HttpTracerMode>
  fullName: System.Func<System.IServiceProvider, Apizr.Logging.HttpTracerMode>
  nameWithType.vb: Func(Of IServiceProvider, HttpTracerMode)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Logging.HttpTracerMode)
  name.vb: Func(Of IServiceProvider, HttpTracerMode)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, HttpMessageParts>
  nameWithType: Func<IServiceProvider, HttpMessageParts>
  fullName: System.Func<System.IServiceProvider, Apizr.Logging.HttpMessageParts>
  nameWithType.vb: Func(Of IServiceProvider, HttpMessageParts)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Logging.HttpMessageParts)
  name.vb: Func(Of IServiceProvider, HttpMessageParts)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]}
  commentId: T:System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, LogLevel[]>
  nameWithType: Func<IServiceProvider, LogLevel[]>
  fullName: System.Func<System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel[]>
  nameWithType.vb: Func(Of IServiceProvider, LogLevel())
  fullName.vb: System.Func(Of System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel())
  name.vb: Func(Of IServiceProvider, LogLevel())
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  commentId: M:Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
  isExternal: true
  name: WithLogging(Func<IServiceProvider, HttpTracerMode>, Func<IServiceProvider, HttpMessageParts>, Func<IServiceProvider, LogLevel[]>)
  nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging(Func<IServiceProvider, HttpTracerMode>, Func<IServiceProvider, HttpMessageParts>, Func<IServiceProvider, LogLevel[]>)
  fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging(System.Func<System.IServiceProvider, Apizr.Logging.HttpTracerMode>, System.Func<System.IServiceProvider, Apizr.Logging.HttpMessageParts>, System.Func<System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel[]>)
  nameWithType.vb: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging(Func(Of IServiceProvider, HttpTracerMode), Func(Of IServiceProvider, HttpMessageParts), Func(Of IServiceProvider, LogLevel()))
  fullName.vb: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging(System.Func(Of System.IServiceProvider, Apizr.Logging.HttpTracerMode), System.Func(Of System.IServiceProvider, Apizr.Logging.HttpMessageParts), System.Func(Of System.IServiceProvider, Microsoft.Extensions.Logging.LogLevel()))
  name.vb: WithLogging(Func(Of IServiceProvider, HttpTracerMode), Func(Of IServiceProvider, HttpMessageParts), Func(Of IServiceProvider, LogLevel()))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder<TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder>.WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder`2.WithLogging(System.Func{System.IServiceProvider,Apizr.Logging.HttpTracerMode},System.Func{System.IServiceProvider,Apizr.Logging.HttpMessageParts},System.Func{System.IServiceProvider,Microsoft.Extensions.Logging.LogLevel[]})
    name: WithLogging
    nameWithType: IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging
    fullName: Apizr.Extending.Configuring.Shared.IApizrExtendedSharedOptionsBuilder(Of TApizrExtendedSharedOptions, TApizrExtendedSharedOptionsBuilder).WithLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpTracerMode
    name: HttpTracerMode
    nameWithType: HttpTracerMode
    fullName: Apizr.Logging.HttpTracerMode
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Logging.HttpMessageParts
    name: HttpMessageParts
    nameWithType: HttpMessageParts
    fullName: Apizr.Logging.HttpMessageParts
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings
  name: WithRefitSettings
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithRefitSettings
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithRefitSettings
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRefitSettings(Refit.RefitSettings)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRefitSettings(Refit.RefitSettings)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
  name: WithRefitSettings(RefitSettings)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRefitSettings(RefitSettings)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRefitSettings(Refit.RefitSettings)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRefitSettings(RefitSettings)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRefitSettings(Refit.RefitSettings)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit.RefitSettings
  commentId: T:Refit.RefitSettings
  parent: Refit
  isExternal: true
  name: RefitSettings
  nameWithType: RefitSettings
  fullName: Refit.RefitSettings
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
  isExternal: true
  name: WithRefitSettings(RefitSettings)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings(RefitSettings)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings(Refit.RefitSettings)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings(RefitSettings)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings(Refit.RefitSettings)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithRefitSettings(Refit.RefitSettings)
    name: WithRefitSettings
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler
  name: WithConnectivityHandler
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithConnectivityHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  name: WithConnectivityHandler(IConnectivityHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(IConnectivityHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(IConnectivityHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Connecting.IConnectivityHandler
  commentId: T:Apizr.Connecting.IConnectivityHandler
  parent: Apizr.Connecting
  name: IConnectivityHandler
  nameWithType: IConnectivityHandler
  fullName: Apizr.Connecting.IConnectivityHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  name: WithConnectivityHandler(IConnectivityHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(IConnectivityHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(IConnectivityHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(Apizr.Connecting.IConnectivityHandler)
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Connecting
  commentId: N:Apizr.Connecting
  name: Apizr.Connecting
  nameWithType: Apizr.Connecting
  fullName: Apizr.Connecting
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  name: WithRefitSettings(Func<IServiceProvider, RefitSettings>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRefitSettings(Func<IServiceProvider, RefitSettings>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRefitSettings(System.Func<System.IServiceProvider, Refit.RefitSettings>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRefitSettings(Func(Of IServiceProvider, RefitSettings))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRefitSettings(System.Func(Of System.IServiceProvider, Refit.RefitSettings))
  name.vb: WithRefitSettings(Func(Of IServiceProvider, RefitSettings))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithRefitSettings
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Refit.RefitSettings}
  commentId: T:System.Func{System.IServiceProvider,Refit.RefitSettings}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, RefitSettings>
  nameWithType: Func<IServiceProvider, RefitSettings>
  fullName: System.Func<System.IServiceProvider, Refit.RefitSettings>
  nameWithType.vb: Func(Of IServiceProvider, RefitSettings)
  fullName.vb: System.Func(Of System.IServiceProvider, Refit.RefitSettings)
  name.vb: Func(Of IServiceProvider, RefitSettings)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
  isExternal: true
  name: WithRefitSettings(Func<IServiceProvider, RefitSettings>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithRefitSettings(Func<IServiceProvider, RefitSettings>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithRefitSettings(System.Func<System.IServiceProvider, Refit.RefitSettings>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithRefitSettings(Func(Of IServiceProvider, RefitSettings))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithRefitSettings(System.Func(Of System.IServiceProvider, Refit.RefitSettings))
  name.vb: WithRefitSettings(Func(Of IServiceProvider, RefitSettings))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithRefitSettings
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithRefitSettings(System.Func{System.IServiceProvider,Refit.RefitSettings})
    name: WithRefitSettings
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithRefitSettings
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithRefitSettings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Refit.RefitSettings
    name: RefitSettings
    nameWithType: RefitSettings
    fullName: Refit.RefitSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  name: WithConnectivityHandler(Func<IServiceProvider, IConnectivityHandler>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(Func<IServiceProvider, IConnectivityHandler>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(System.Func<System.IServiceProvider, Apizr.Connecting.IConnectivityHandler>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Func(Of IServiceProvider, IConnectivityHandler))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(System.Func(Of System.IServiceProvider, Apizr.Connecting.IConnectivityHandler))
  name.vb: WithConnectivityHandler(Func(Of IServiceProvider, IConnectivityHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, IConnectivityHandler>
  nameWithType: Func<IServiceProvider, IConnectivityHandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Connecting.IConnectivityHandler>
  nameWithType.vb: Func(Of IServiceProvider, IConnectivityHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Connecting.IConnectivityHandler)
  name.vb: Func(Of IServiceProvider, IConnectivityHandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
  isExternal: true
  name: WithConnectivityHandler(Func<IServiceProvider, IConnectivityHandler>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler(Func<IServiceProvider, IConnectivityHandler>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler(System.Func<System.IServiceProvider, Apizr.Connecting.IConnectivityHandler>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Func(Of IServiceProvider, IConnectivityHandler))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(System.Func(Of System.IServiceProvider, Apizr.Connecting.IConnectivityHandler))
  name.vb: WithConnectivityHandler(Func(Of IServiceProvider, IConnectivityHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Func{System.IServiceProvider,Apizr.Connecting.IConnectivityHandler})
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Connecting.IConnectivityHandler
    name: IConnectivityHandler
    nameWithType: IConnectivityHandler
    fullName: Apizr.Connecting.IConnectivityHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{{TConnectivityHandler},System.Boolean}})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: WithConnectivityHandler<TConnectivityHandler>(Expression<Func<TConnectivityHandler, Boolean>>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>(Expression<Func<TConnectivityHandler, Boolean>>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>(System.Linq.Expressions.Expression<System.Func<TConnectivityHandler, System.Boolean>>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)(Expression(Of Func(Of TConnectivityHandler, Boolean)))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)(System.Linq.Expressions.Expression(Of System.Func(Of TConnectivityHandler, System.Boolean)))
  name.vb: WithConnectivityHandler(Of TConnectivityHandler)(Expression(Of Func(Of TConnectivityHandler, Boolean)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: WithConnectivityHandler<TConnectivityHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TConnectivityHandler
    nameWithType: TConnectivityHandler
    fullName: TConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: WithConnectivityHandler(Of TConnectivityHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConnectivityHandler
    nameWithType: TConnectivityHandler
    fullName: TConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TConnectivityHandler},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TConnectivityHandler, Boolean>>
  nameWithType: Expression<Func<TConnectivityHandler, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<TConnectivityHandler, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of TConnectivityHandler, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TConnectivityHandler, System.Boolean))
  name.vb: Expression(Of Func(Of TConnectivityHandler, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TConnectivityHandler
    nameWithType: TConnectivityHandler
    fullName: TConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConnectivityHandler
    nameWithType: TConnectivityHandler
    fullName: TConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  isExternal: true
  name: WithConnectivityHandler<TConnectivityHandler>(Expression<Func<TConnectivityHandler, Boolean>>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>(Expression<Func<TConnectivityHandler, Boolean>>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>(System.Linq.Expressions.Expression<System.Func<TConnectivityHandler, System.Boolean>>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)(Expression(Of Func(Of TConnectivityHandler, Boolean)))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)(System.Linq.Expressions.Expression(Of System.Func(Of TConnectivityHandler, System.Boolean)))
  name.vb: WithConnectivityHandler(Of TConnectivityHandler)(Expression(Of Func(Of TConnectivityHandler, Boolean)))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: WithConnectivityHandler<TConnectivityHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TConnectivityHandler
    nameWithType: TConnectivityHandler
    fullName: TConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
    name: WithConnectivityHandler(Of TConnectivityHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConnectivityHandler
    nameWithType: TConnectivityHandler
    fullName: TConnectivityHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.Boolean})
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Func{System.Boolean})
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
  name: WithConnectivityHandler(Func<Boolean>)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(Func<Boolean>)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(System.Func<System.Boolean>)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Func(Of Boolean))
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(System.Func(Of System.Boolean))
  name.vb: WithConnectivityHandler(Func(Of Boolean))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
  isExternal: true
  name: WithConnectivityHandler(Func<Boolean>)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(Func<Boolean>)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler(System.Func<System.Boolean>)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(Func(Of Boolean))
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler(System.Func(Of System.Boolean))
  name.vb: WithConnectivityHandler(Func(Of Boolean))
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithConnectivityHandler(System.Func{System.Boolean})
    name: WithConnectivityHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler``1
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler``1
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1
  name: WithConnectivityHandler<TConnectivityHandler>()
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>()
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>()
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)()
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)()
  name.vb: WithConnectivityHandler(Of TConnectivityHandler)()
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1
    name: WithConnectivityHandler<TConnectivityHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1
    name: WithConnectivityHandler(Of TConnectivityHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1
  name: WithConnectivityHandler<TConnectivityHandler>()
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>()
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>()
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)()
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)()
  name.vb: WithConnectivityHandler(Of TConnectivityHandler)()
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1
    name: WithConnectivityHandler<TConnectivityHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler<TConnectivityHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler``1
    name: WithConnectivityHandler(Of TConnectivityHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Of TConnectivityHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithConnectivityHandler(System.Type)
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Type)
  name: WithConnectivityHandler(Type)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(Type)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler(System.Type)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(Type)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler(System.Type)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Type)
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Type)
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Type)
  isExternal: true
  name: WithConnectivityHandler(Type)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler(Type)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler(System.Type)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(Type)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler(System.Type)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Type)
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithConnectivityHandler(System.Type)
    name: WithConnectivityHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithConnectivityHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler
  name: WithCacheHandler
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithCacheHandler
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithCacheHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(Apizr.Caching.ICacheHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(Apizr.Caching.ICacheHandler)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
  name: WithCacheHandler(ICacheHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler(ICacheHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler(Apizr.Caching.ICacheHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler(ICacheHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler(Apizr.Caching.ICacheHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Caching.ICacheHandler
  commentId: T:Apizr.Caching.ICacheHandler
  parent: Apizr.Caching
  name: ICacheHandler
  nameWithType: ICacheHandler
  fullName: Apizr.Caching.ICacheHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
  name: WithCacheHandler(ICacheHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler(ICacheHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler(Apizr.Caching.ICacheHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler(ICacheHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler(Apizr.Caching.ICacheHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithCacheHandler(Apizr.Caching.ICacheHandler)
    name: WithCacheHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Caching
  commentId: N:Apizr.Caching
  name: Apizr.Caching
  nameWithType: Apizr.Caching
  fullName: Apizr.Caching
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  name: WithCacheHandler(Func<IServiceProvider, ICacheHandler>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler(Func<IServiceProvider, ICacheHandler>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler(System.Func<System.IServiceProvider, Apizr.Caching.ICacheHandler>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler(Func(Of IServiceProvider, ICacheHandler))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler(System.Func(Of System.IServiceProvider, Apizr.Caching.ICacheHandler))
  name.vb: WithCacheHandler(Func(Of IServiceProvider, ICacheHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, ICacheHandler>
  nameWithType: Func<IServiceProvider, ICacheHandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Caching.ICacheHandler>
  nameWithType.vb: Func(Of IServiceProvider, ICacheHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Caching.ICacheHandler)
  name.vb: Func(Of IServiceProvider, ICacheHandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
  isExternal: true
  name: WithCacheHandler(Func<IServiceProvider, ICacheHandler>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler(Func<IServiceProvider, ICacheHandler>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler(System.Func<System.IServiceProvider, Apizr.Caching.ICacheHandler>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(Func(Of IServiceProvider, ICacheHandler))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(System.Func(Of System.IServiceProvider, Apizr.Caching.ICacheHandler))
  name.vb: WithCacheHandler(Func(Of IServiceProvider, ICacheHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Func{System.IServiceProvider,Apizr.Caching.ICacheHandler})
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Caching.ICacheHandler
    name: ICacheHandler
    nameWithType: ICacheHandler
    fullName: Apizr.Caching.ICacheHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler``1
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler``1
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler``1
  name: WithCacheHandler<TCacheHandler>()
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler<TCacheHandler>()
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler<TCacheHandler>()
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler(Of TCacheHandler)()
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler(Of TCacheHandler)()
  name.vb: WithCacheHandler(Of TCacheHandler)()
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler``1
    name: WithCacheHandler<TCacheHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler<TCacheHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler<TCacheHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler``1
    name: WithCacheHandler(Of TCacheHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler(Of TCacheHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler(Of TCacheHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler``1
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler``1
  name: WithCacheHandler<TCacheHandler>()
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler<TCacheHandler>()
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler<TCacheHandler>()
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(Of TCacheHandler)()
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(Of TCacheHandler)()
  name.vb: WithCacheHandler(Of TCacheHandler)()
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler``1
    name: WithCacheHandler<TCacheHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler<TCacheHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler<TCacheHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler``1
    name: WithCacheHandler(Of TCacheHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(Of TCacheHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(Of TCacheHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithCacheHandler(System.Type)
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Type)
  name: WithCacheHandler(Type)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler(Type)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler(System.Type)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler(Type)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler(System.Type)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Type)
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Type)
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Type)
  isExternal: true
  name: WithCacheHandler(Type)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler(Type)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler(System.Type)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(Type)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler(System.Type)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Type)
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithCacheHandler(System.Type)
    name: WithCacheHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithCacheHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler*
  commentId: Overload:Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler
  name: WithMappingHandler
  nameWithType: ApizrExtendedManagerOptionsBuilder.WithMappingHandler
  fullName: Apizr.Extending.Configuring.Manager.ApizrExtendedManagerOptionsBuilder.WithMappingHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  parent: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  name: WithMappingHandler(IMappingHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler(IMappingHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler(IMappingHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler(Apizr.Mapping.IMappingHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mapping.IMappingHandler
  commentId: T:Apizr.Mapping.IMappingHandler
  parent: Apizr.Mapping
  name: IMappingHandler
  nameWithType: IMappingHandler
  fullName: Apizr.Mapping.IMappingHandler
- uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  commentId: M:Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  name: WithMappingHandler(IMappingHandler)
  nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler(IMappingHandler)
  fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler(Apizr.Mapping.IMappingHandler)
  nameWithType.vb: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler(IMappingHandler)
  fullName.vb: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler(Apizr.Mapping.IMappingHandler)
  spec.csharp:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase<TApizrCommonOptions, TApizrCommonOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase`2.WithMappingHandler(Apizr.Mapping.IMappingHandler)
    name: WithMappingHandler
    nameWithType: IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler
    fullName: Apizr.Configuring.Common.IApizrGlobalCommonOptionsBuilderBase(Of TApizrCommonOptions, TApizrCommonOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mapping
  commentId: N:Apizr.Mapping
  name: Apizr.Mapping
  nameWithType: Apizr.Mapping
  fullName: Apizr.Mapping
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  name: WithMappingHandler(Func<IServiceProvider, IMappingHandler>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler(Func<IServiceProvider, IMappingHandler>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler(System.Func<System.IServiceProvider, Apizr.Mapping.IMappingHandler>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler(Func(Of IServiceProvider, IMappingHandler))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler(System.Func(Of System.IServiceProvider, Apizr.Mapping.IMappingHandler))
  name.vb: WithMappingHandler(Func(Of IServiceProvider, IMappingHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler}
  commentId: T:System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, IMappingHandler>
  nameWithType: Func<IServiceProvider, IMappingHandler>
  fullName: System.Func<System.IServiceProvider, Apizr.Mapping.IMappingHandler>
  nameWithType.vb: Func(Of IServiceProvider, IMappingHandler)
  fullName.vb: System.Func(Of System.IServiceProvider, Apizr.Mapping.IMappingHandler)
  name.vb: Func(Of IServiceProvider, IMappingHandler)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
  isExternal: true
  name: WithMappingHandler(Func<IServiceProvider, IMappingHandler>)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler(Func<IServiceProvider, IMappingHandler>)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler(System.Func<System.IServiceProvider, Apizr.Mapping.IMappingHandler>)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(Func(Of IServiceProvider, IMappingHandler))
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(System.Func(Of System.IServiceProvider, Apizr.Mapping.IMappingHandler))
  name.vb: WithMappingHandler(Func(Of IServiceProvider, IMappingHandler))
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Func{System.IServiceProvider,Apizr.Mapping.IMappingHandler})
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mapping.IMappingHandler
    name: IMappingHandler
    nameWithType: IMappingHandler
    fullName: Apizr.Mapping.IMappingHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler``1
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler``1
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler``1
  name: WithMappingHandler<TMappingHandler>()
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler<TMappingHandler>()
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler<TMappingHandler>()
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler(Of TMappingHandler)()
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler(Of TMappingHandler)()
  name.vb: WithMappingHandler(Of TMappingHandler)()
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler``1
    name: WithMappingHandler<TMappingHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler<TMappingHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler<TMappingHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler``1
    name: WithMappingHandler(Of TMappingHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler(Of TMappingHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler(Of TMappingHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler``1
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler``1
  name: WithMappingHandler<TMappingHandler>()
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler<TMappingHandler>()
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler<TMappingHandler>()
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(Of TMappingHandler)()
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(Of TMappingHandler)()
  name.vb: WithMappingHandler(Of TMappingHandler)()
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler``1
    name: WithMappingHandler<TMappingHandler>
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler<TMappingHandler>
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler<TMappingHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler``1
    name: WithMappingHandler(Of TMappingHandler)
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(Of TMappingHandler)
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(Of TMappingHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}.WithMappingHandler(System.Type)
  parent: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions,Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  definition: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Type)
  name: WithMappingHandler(Type)
  nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler(Type)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler(System.Type)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler(Type)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler(System.Type)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Type)
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Type)
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of IApizrExtendedManagerOptions, IApizrExtendedManagerOptionsBuilder).WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptions, Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Type)
  commentId: M:Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Type)
  isExternal: true
  name: WithMappingHandler(Type)
  nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler(Type)
  fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler(System.Type)
  nameWithType.vb: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(Type)
  fullName.vb: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler(System.Type)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Type)
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder<TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder>.WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder`2.WithMappingHandler(System.Type)
    name: WithMappingHandler
    nameWithType: IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler
    fullName: Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder(Of TApizrExtendedCommonOptions, TApizrExtendedCommonOptionsBuilder).WithMappingHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
