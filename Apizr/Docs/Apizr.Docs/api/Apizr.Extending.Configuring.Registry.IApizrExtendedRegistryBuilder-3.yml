### YamlMime:ManagedReference
items:
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  commentId: T:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  id: IApizrExtendedRegistryBuilder`3
  parent: Apizr.Extending.Configuring.Registry
  children:
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Action{`2},System.Reflection.Assembly[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Action{`2},System.Type[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Reflection.Assembly[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2},System.Type[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Reflection.Assembly[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor``5(System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Action{`2},System.Reflection.Assembly[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Action{`2},System.Type[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2},System.Type[])
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Type,System.Action{`2})
  - Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor``2(System.Action{`2})
  langs:
  - csharp
  - vb
  name: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>
  type: Interface
  source:
    id: IApizrExtendedRegistryBuilder
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 10
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  syntax:
    content: 'public interface IApizrExtendedRegistryBuilder<out TApizrExtendedRegistry, out TApizrExtendedRegistryBuilder, out TApizrExtendedProperOptionsBuilder> : IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>, IApizrRegistryBuilderBase where TApizrExtendedRegistry : IApizrEnumerableRegistry where TApizrExtendedRegistryBuilder : IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder> where TApizrExtendedProperOptionsBuilder : IApizrGlobalProperOptionsBuilderBase'
    typeParameters:
    - id: TApizrExtendedRegistry
    - id: TApizrExtendedRegistryBuilder
    - id: TApizrExtendedProperOptionsBuilder
    content.vb: >-
      Public Interface IApizrExtendedRegistryBuilder(Of Out TApizrExtendedRegistry As IApizrEnumerableRegistry, Out TApizrExtendedRegistryBuilder As IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder), Out TApizrExtendedProperOptionsBuilder As IApizrGlobalProperOptionsBuilderBase)

          Inherits IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder)
  inheritedMembers:
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.ApizrRegistry
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``1(System.Action{{TApizrExtendedProperOptionsBuilder}})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``2(System.Action{{TApizrExtendedProperOptionsBuilder}})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``3(System.Action{{TApizrExtendedProperOptionsBuilder}})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``4(System.Action{{TApizrExtendedProperOptionsBuilder}})
  - Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddFor``1(System.Action{{TApizrExtendedProperOptionsBuilder}})
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder)
  name.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder)
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor``5(System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor``5(System.Action{`2})
  id: AddCrudFor``5(System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 32
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> object type, \nwith key of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TKey</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TReadAllResult</code>\n(inheriting from <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> or be of class type)\nand ReadAll query parameters type (inheriting from IDictionary{string,object} or be of class type)\n"
  example: []
  syntax:
    content: >-
      TApizrExtendedRegistryBuilder AddCrudFor<T, TKey, TReadAllResult, TReadAllParams, TApizrManager>(Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)

          where T : class where TApizrManager : IApizrManager<ICrudApi<T, TKey, TReadAllResult, TReadAllParams>>
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    typeParameters:
    - id: T
      description: The object type to manage with crud api calls
    - id: TKey
      description: The object key type (primitive)
    - id: TReadAllResult
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    - id: TReadAllParams
      description: ReadAll query parameters
    - id: TApizrManager
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(Of T As Class, TKey, TReadAllResult, TReadAllParams, TApizrManager As IApizrManager(Of ICrudApi(Of T, TKey, TReadAllResult, TReadAllParams)))(optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams, TApizrManager)(Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2})
  id: AddCrudFor(System.Type,System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 45
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedType</code> object type (class), \nwith key of type <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> and &quot;ReadAll&quot; query result of type <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type crudedType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: crudedType
      type: System.Type
      description: The object type to manage with crud api calls (class)
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(crudedType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Type, Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Action{`2})
  id: AddCrudFor(System.Type,System.Type,System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Type, System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 56
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedType</code> object type (class), \nwith key of type <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedKeyType</code> (primitive) and &quot;ReadAll&quot; query result of type <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type crudedType, Type crudedKeyType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: crudedType
      type: System.Type
      description: The object type to manage with crud api calls (class)
    - id: crudedKeyType
      type: System.Type
      description: The object key type (primitive)
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(crudedType As Type, crudedKeyType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Action{`2})
  id: AddCrudFor(System.Type,System.Type,System.Type,System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Type, System.Type, System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 71
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedType</code> object type (class), \nwith key of type <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedKeyType</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedReadAllResultType</code>\n(inheriting from <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> or be of class type)\nand ReadAll query parameters of type IDictionary{string,object}\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type crudedType, Type crudedKeyType, Type crudedReadAllResultType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: crudedType
      type: System.Type
      description: The object type to manage with crud api calls (class)
    - id: crudedKeyType
      type: System.Type
      description: The object key type (primitive)
    - id: crudedReadAllResultType
      type: System.Type
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(crudedType As Type, crudedKeyType As Type, crudedReadAllResultType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Type, System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Type, Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  id: AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Type, Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Type, Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Type, System.Type, System.Type, System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 88
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedType</code> object type (class), \nwith key of type <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedKeyType</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedReadAllResultType</code>\n(inheriting from <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> or be of class type)\nand ReadAll query parameters type (inheriting from IDictionary{string,object} or be of class type)\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type crudedType, Type crudedKeyType, Type crudedReadAllResultType, Type crudedReadAllParamsType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: crudedType
      type: System.Type
      description: The object type to manage with crud api calls (class)
    - id: crudedKeyType
      type: System.Type
      description: The object key type (primitive)
    - id: crudedReadAllResultType
      type: System.Type
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    - id: crudedReadAllParamsType
      type: System.Type
      description: ReadAll query parameters type
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(crudedType As Type, crudedKeyType As Type, crudedReadAllResultType As Type, crudedReadAllParamsType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Type, Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Type, System.Type, System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Type, Type, Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  id: AddCrudFor(System.Type,System.Type,System.Type,System.Type,System.Type,System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Type, Type, Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Type, Type, Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Type, System.Type, System.Type, System.Type, System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 106
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedType</code> object type (class), \nwith key of type <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedKeyType</code> (primitive) and &quot;ReadAll&quot; query result of type <code data-dev-comment-type=\"paramref\" class=\"paramref\">crudedReadAllResultType</code>\n(inheriting from <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> or be of class type)\nand ReadAll query parameters type (inheriting from IDictionary{string,object} or be of class type)\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type crudedType, Type crudedKeyType, Type crudedReadAllResultType, Type crudedReadAllParamsType, Type apizrManagerType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: crudedType
      type: System.Type
      description: The object type to manage with crud api calls
    - id: crudedKeyType
      type: System.Type
      description: The object key type
    - id: crudedReadAllResultType
      type: System.Type
      description: >-
        &quot;ReadAll&quot; query result type

        (should inherit from <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> or be of class type)
    - id: crudedReadAllParamsType
      type: System.Type
      description: ReadAll query parameters type
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(crudedType As Type, crudedKeyType As Type, crudedReadAllResultType As Type, crudedReadAllParamsType As Type, apizrManagerType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Type, Type, Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Type, System.Type, System.Type, System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Type, Type, Type, Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type[])
  id: AddCrudFor(System.Type[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 115
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(params Type[] assemblyMarkerTypes)
    parameters:
    - id: assemblyMarkerTypes
      type: System.Type[]
      description: Any type contained in assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(ParamArray assemblyMarkerTypes As Type()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type())
  name.vb: AddCrudFor(Type())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Reflection.Assembly[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Reflection.Assembly[])
  id: AddCrudFor(System.Reflection.Assembly[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Assembly[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Assembly[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Reflection.Assembly[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 122
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(params Assembly[] assemblies)
    parameters:
    - id: assemblies
      type: System.Reflection.Assembly[]
      description: Any assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(ParamArray assemblies As Assembly()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Assembly())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Reflection.Assembly())
  name.vb: AddCrudFor(Assembly())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Action{`2},System.Type[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Action{`2},System.Type[])
  id: AddCrudFor(System.Action{`2},System.Type[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Action<TApizrExtendedProperOptionsBuilder>, Type[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Action<TApizrExtendedProperOptionsBuilder>, Type[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Action<TApizrExtendedProperOptionsBuilder>, System.Type[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 130
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Action<TApizrExtendedProperOptionsBuilder> optionsBuilder, params Type[] assemblyMarkerTypes)
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblyMarkerTypes
      type: System.Type[]
      description: Any type contained in assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder), ParamArray assemblyMarkerTypes As Type()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Action(Of TApizrExtendedProperOptionsBuilder), Type())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Action(Of TApizrExtendedProperOptionsBuilder), System.Type())
  name.vb: AddCrudFor(Action(Of TApizrExtendedProperOptionsBuilder), Type())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Action{`2},System.Reflection.Assembly[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Action{`2},System.Reflection.Assembly[])
  id: AddCrudFor(System.Action{`2},System.Reflection.Assembly[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Action<TApizrExtendedProperOptionsBuilder>, System.Reflection.Assembly[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 139
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Action<TApizrExtendedProperOptionsBuilder> optionsBuilder, params Assembly[] assemblies)
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblies
      type: System.Reflection.Assembly[]
      description: Any assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder), ParamArray assemblies As Assembly()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Action(Of TApizrExtendedProperOptionsBuilder), System.Reflection.Assembly())
  name.vb: AddCrudFor(Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Type[])
  id: AddCrudFor(System.Type,System.Type[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Type[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Type[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Type[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 148
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type apizrManagerType, params Type[] assemblyMarkerTypes)
    parameters:
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: assemblyMarkerTypes
      type: System.Type[]
      description: Any type contained in assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(apizrManagerType As Type, ParamArray assemblyMarkerTypes As Type()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Type())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Type())
  name.vb: AddCrudFor(Type, Type())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Reflection.Assembly[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Reflection.Assembly[])
  id: AddCrudFor(System.Type,System.Reflection.Assembly[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Assembly[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Assembly[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Reflection.Assembly[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 156
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type apizrManagerType, params Assembly[] assemblies)
    parameters:
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: assemblies
      type: System.Reflection.Assembly[]
      description: Any assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(apizrManagerType As Type, ParamArray assemblies As Assembly()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Assembly())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Reflection.Assembly())
  name.vb: AddCrudFor(Type, Assembly())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2},System.Type[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2},System.Type[])
  id: AddCrudFor(System.Type,System.Action{`2},System.Type[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Type[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Type[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Action<TApizrExtendedProperOptionsBuilder>, System.Type[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 165
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type apizrManagerType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder, params Type[] assemblyMarkerTypes)
    parameters:
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblyMarkerTypes
      type: System.Type[]
      description: Any type contained in assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(apizrManagerType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder), ParamArray assemblyMarkerTypes As Type()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Type())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder), System.Type())
  name.vb: AddCrudFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Type())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  id: AddCrudFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddCrudFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor(System.Type, System.Action<TApizrExtendedProperOptionsBuilder>, System.Reflection.Assembly[])
  type: Method
  source:
    id: AddCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 175
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.Requesting.CrudEntityAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated classes\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddCrudFor(Type apizrManagerType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder, params Assembly[] assemblies)
    parameters:
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblies
      type: System.Reflection.Assembly[]
      description: Any assembly to scan for <xref href="Apizr.Requesting.CrudEntityAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddCrudFor(apizrManagerType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder), ParamArray assemblies As Assembly()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder), System.Reflection.Assembly())
  name.vb: AddCrudFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor``2(System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor``2(System.Action{`2})
  id: AddFor``2(System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddFor<TWebApi, TApizrManager>(Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor<TWebApi, TApizrManager>(Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor<TWebApi, TApizrManager>(System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 189
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddFor<TWebApi, TApizrManager>(Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    typeParameters:
    - id: TWebApi
      description: The web api interface to manage
    - id: TApizrManager
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddFor(Of TWebApi, TApizrManager)(optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Of TWebApi, TApizrManager)(Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Of TWebApi, TApizrManager)(System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddFor(Of TWebApi, TApizrManager)(Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2})
  id: AddFor(System.Type,System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddFor(Type, Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(Type, Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(System.Type, System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 198
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddFor(Type webApiType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: webApiType
      type: System.Type
      description: The web api interface type to manage
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddFor(webApiType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Type, Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddFor(Type, Action(Of TApizrExtendedProperOptionsBuilder))
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Action{`2},System.Type[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Action{`2},System.Type[])
  id: AddFor(System.Action{`2},System.Type[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddFor(Action<TApizrExtendedProperOptionsBuilder>, Type[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(Action<TApizrExtendedProperOptionsBuilder>, Type[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(System.Action<TApizrExtendedProperOptionsBuilder>, System.Type[])
  type: Method
  source:
    id: AddFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 207
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.WebApiAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated interfaces\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddFor(Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null, params Type[] assemblyMarkerTypes)
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblyMarkerTypes
      type: System.Type[]
      description: Any type contained in assembly to scan for <xref href="Apizr.WebApiAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddFor(optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing, ParamArray assemblyMarkerTypes As Type()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Action(Of TApizrExtendedProperOptionsBuilder), Type())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(System.Action(Of TApizrExtendedProperOptionsBuilder), System.Type())
  name.vb: AddFor(Action(Of TApizrExtendedProperOptionsBuilder), Type())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Action{`2},System.Reflection.Assembly[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Action{`2},System.Reflection.Assembly[])
  id: AddFor(System.Action{`2},System.Reflection.Assembly[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddFor(Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(System.Action<TApizrExtendedProperOptionsBuilder>, System.Reflection.Assembly[])
  type: Method
  source:
    id: AddFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 216
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.WebApiAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated interfaces\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddFor(Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null, params Assembly[] assemblies)
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblies
      type: System.Reflection.Assembly[]
      description: Any assembly to scan for <xref href="Apizr.WebApiAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddFor(optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing, ParamArray assemblies As Assembly()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(System.Action(Of TApizrExtendedProperOptionsBuilder), System.Reflection.Assembly())
  name.vb: AddFor(Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2},System.Type[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2},System.Type[])
  id: AddFor(System.Type,System.Action{`2},System.Type[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Type[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Type[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(System.Type, System.Action<TApizrExtendedProperOptionsBuilder>, System.Type[])
  type: Method
  source:
    id: AddFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 226
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.WebApiAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated interfaces\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddFor(Type apizrManagerType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null, params Type[] assemblyMarkerTypes)
    parameters:
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblyMarkerTypes
      type: System.Type[]
      description: Any type contained in assembly to scan for <xref href="Apizr.WebApiAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddFor(apizrManagerType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing, ParamArray assemblyMarkerTypes As Type()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Type())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder), System.Type())
  name.vb: AddFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Type())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  id: AddFor(System.Type,System.Action{`2},System.Reflection.Assembly[])
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(Type, Action<TApizrExtendedProperOptionsBuilder>, Assembly[])
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(System.Type, System.Action<TApizrExtendedProperOptionsBuilder>, System.Reflection.Assembly[])
  type: Method
  source:
    id: AddFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 236
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref> for each <xref href=\"Apizr.WebApiAttribute\" data-throw-if-not-resolved=\"false\"></xref> decorated interfaces\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddFor(Type apizrManagerType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null, params Assembly[] assemblies)
    parameters:
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    - id: assemblies
      type: System.Reflection.Assembly[]
      description: Any assembly to scan for <xref href="Apizr.WebApiAttribute" data-throw-if-not-resolved="false"></xref>
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddFor(apizrManagerType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing, ParamArray assemblies As Assembly()) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder), System.Reflection.Assembly())
  name.vb: AddFor(Type, Action(Of TApizrExtendedProperOptionsBuilder), Assembly())
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Type,System.Action{`2})
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor(System.Type,System.Type,System.Action{`2})
  id: AddFor(System.Type,System.Type,System.Action{`2})
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3
  langs:
  - csharp
  - vb
  name: AddFor(Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(Type, Type, Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor(System.Type, System.Type, System.Action<TApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    id: AddFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Extensions.Microsoft.DependencyInjection\Extending\Configuring\Registry\IApizrExtendedRegistryBuilder.cs
    startLine: 246
  assemblies:
  - Apizr.Extensions.Microsoft.DependencyInjection
  namespace: Apizr.Extending.Configuring.Registry
  summary: "\nRegister a custom <xref href=\"Apizr.IApizrManager%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: TApizrExtendedRegistryBuilder AddFor(Type webApiType, Type apizrManagerType, Action<TApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: webApiType
      type: System.Type
      description: The web api interface type to manage
    - id: apizrManagerType
      type: System.Type
      description: A custom <xref href="Apizr.IApizrManager%601" data-throw-if-not-resolved="false"></xref> implementation type
    - id: optionsBuilder
      type: System.Action{{TApizrExtendedProperOptionsBuilder}}
      description: The builder defining specific Apizr options
    return:
      type: '{TApizrExtendedRegistryBuilder}'
      description: ''
    content.vb: Function AddFor(webApiType As Type, apizrManagerType As Type, optionsBuilder As Action(Of TApizrExtendedProperOptionsBuilder) = Nothing) As TApizrExtendedRegistryBuilder
  overload: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(System.Type, System.Type, System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddFor(Type, Type, Action(Of TApizrExtendedProperOptionsBuilder))
references:
- uid: Apizr.Extending.Configuring.Registry
  commentId: N:Apizr.Extending.Configuring.Registry
  name: Apizr.Extending.Configuring.Registry
  nameWithType: Apizr.Extending.Configuring.Registry
  fullName: Apizr.Extending.Configuring.Registry
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.ApizrRegistry
  commentId: P:Apizr.Configuring.Registry.IApizrRegistryBuilderBase{`0,`1,`2}.ApizrRegistry
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}
  definition: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.ApizrRegistry
  name: ApizrRegistry
  nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.ApizrRegistry
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.ApizrRegistry
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).ApizrRegistry
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).ApizrRegistry
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``1(System.Action{{TApizrExtendedProperOptionsBuilder}})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase{`0,`1,`2}.AddCrudFor``1(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}
  definition: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``1(System.Action{`2})
  name: AddCrudFor<T>(Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T>(Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T>(System.Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T)(Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T)(System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Of T)(Action(Of TApizrExtendedProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``1(System.Action{`2})
    name: AddCrudFor<T>
    nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``1(System.Action{`2})
    name: AddCrudFor(Of T)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``2(System.Action{{TApizrExtendedProperOptionsBuilder}})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase{`0,`1,`2}.AddCrudFor``2(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}
  definition: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``2(System.Action{`2})
  name: AddCrudFor<T, TKey>(Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey>(Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey>(System.Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey)(Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey)(System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Of T, TKey)(Action(Of TApizrExtendedProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``2(System.Action{`2})
    name: AddCrudFor<T, TKey>
    nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``2(System.Action{`2})
    name: AddCrudFor(Of T, TKey)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``3(System.Action{{TApizrExtendedProperOptionsBuilder}})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase{`0,`1,`2}.AddCrudFor``3(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}
  definition: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``3(System.Action{`2})
  name: AddCrudFor<T, TKey, TReadAllResult>(Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>(Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>(System.Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)(Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)(System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Of T, TKey, TReadAllResult)(Action(Of TApizrExtendedProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``3(System.Action{`2})
    name: AddCrudFor<T, TKey, TReadAllResult>
    nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``3(System.Action{`2})
    name: AddCrudFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddCrudFor``4(System.Action{{TApizrExtendedProperOptionsBuilder}})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase{`0,`1,`2}.AddCrudFor``4(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}
  definition: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``4(System.Action{`2})
  name: AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>(Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>(Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>(System.Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of TApizrExtendedProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``4(System.Action{`2})
    name: AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``4(System.Action{`2})
    name: AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}.AddFor``1(System.Action{{TApizrExtendedProperOptionsBuilder}})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase{`0,`1,`2}.AddFor``1(System.Action{`2})
  parent: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}
  definition: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddFor``1(System.Action{`2})
  name: AddFor<TWebApi>(Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor<TWebApi>(Action<TApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor<TWebApi>(System.Action<TApizrExtendedProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Of TWebApi)(Action(Of TApizrExtendedProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Of TWebApi)(System.Action(Of TApizrExtendedProperOptionsBuilder))
  name.vb: AddFor(Of TWebApi)(Action(Of TApizrExtendedProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddFor``1(System.Action{`2})
    name: AddFor<TWebApi>
    nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor<TWebApi>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddFor``1(System.Action{`2})
    name: AddFor(Of TWebApi)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Of TWebApi)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.ApizrRegistry
  commentId: P:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.ApizrRegistry
  name: ApizrRegistry
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.ApizrRegistry
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.ApizrRegistry
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).ApizrRegistry
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).ApizrRegistry
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase{{TApizrExtendedRegistry},{TApizrExtendedRegistryBuilder},{TApizrExtendedProperOptionsBuilder}}
  commentId: T:Apizr.Configuring.Registry.IApizrRegistryBuilderBase{`0,`1,`2}
  parent: Apizr.Configuring.Registry
  definition: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3
  name: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>
  nameWithType: IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder)
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder)
  name.vb: IApizrRegistryBuilderBase(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3
    name: IApizrRegistryBuilderBase
    nameWithType: IApizrRegistryBuilderBase
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedRegistry
    nameWithType: TApizrExtendedRegistry
    fullName: TApizrExtendedRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedRegistryBuilder
    nameWithType: TApizrExtendedRegistryBuilder
    fullName: TApizrExtendedRegistryBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3
    name: IApizrRegistryBuilderBase
    nameWithType: IApizrRegistryBuilderBase
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedRegistry
    nameWithType: TApizrExtendedRegistry
    fullName: TApizrExtendedRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedRegistryBuilder
    nameWithType: TApizrExtendedRegistryBuilder
    fullName: TApizrExtendedRegistryBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``1(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``1(System.Action{`2})
  isExternal: true
  name: AddCrudFor<T>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T>(System.Action<TApizrProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudFor(Of T)(Action(Of TApizrProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``1(System.Action{`2})
    name: AddCrudFor<T>
    nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``1(System.Action{`2})
    name: AddCrudFor(Of T)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``2(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``2(System.Action{`2})
  isExternal: true
  name: AddCrudFor<T, TKey>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey>(System.Action<TApizrProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudFor(Of T, TKey)(Action(Of TApizrProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``2(System.Action{`2})
    name: AddCrudFor<T, TKey>
    nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``2(System.Action{`2})
    name: AddCrudFor(Of T, TKey)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``3(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``3(System.Action{`2})
  isExternal: true
  name: AddCrudFor<T, TKey, TReadAllResult>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>(System.Action<TApizrProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudFor(Of T, TKey, TReadAllResult)(Action(Of TApizrProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``3(System.Action{`2})
    name: AddCrudFor<T, TKey, TReadAllResult>
    nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``3(System.Action{`2})
    name: AddCrudFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``4(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``4(System.Action{`2})
  isExternal: true
  name: AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>(System.Action<TApizrProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(Action(Of TApizrProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``4(System.Action{`2})
    name: AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddCrudFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddCrudFor``4(System.Action{`2})
    name: AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddFor``1(System.Action{`2})
  commentId: M:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddFor``1(System.Action{`2})
  isExternal: true
  name: AddFor<TWebApi>(Action<TApizrProperOptionsBuilder>)
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddFor<TWebApi>(Action<TApizrProperOptionsBuilder>)
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddFor<TWebApi>(System.Action<TApizrProperOptionsBuilder>)
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddFor(Of TWebApi)(Action(Of TApizrProperOptionsBuilder))
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddFor(Of TWebApi)(System.Action(Of TApizrProperOptionsBuilder))
  name.vb: AddFor(Of TWebApi)(Action(Of TApizrProperOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddFor``1(System.Action{`2})
    name: AddFor<TWebApi>
    nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddFor<TWebApi>
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>.AddFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3.AddFor``1(System.Action{`2})
    name: AddFor(Of TWebApi)
    nameWithType: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddFor(Of TWebApi)
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder).AddFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3
  commentId: T:Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3
  name: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>
  nameWithType: IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase<TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder>
  nameWithType.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder)
  fullName.vb: Apizr.Configuring.Registry.IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder)
  name.vb: IApizrRegistryBuilderBase(Of TApizrRegistry, TApizrRegistryBuilder, TApizrProperOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3
    name: IApizrRegistryBuilderBase
    nameWithType: IApizrRegistryBuilderBase
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRegistry
    nameWithType: TApizrRegistry
    fullName: TApizrRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRegistryBuilder
    nameWithType: TApizrRegistryBuilder
    fullName: TApizrRegistryBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrRegistryBuilderBase`3
    name: IApizrRegistryBuilderBase
    nameWithType: IApizrRegistryBuilderBase
    fullName: Apizr.Configuring.Registry.IApizrRegistryBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRegistry
    nameWithType: TApizrRegistry
    fullName: TApizrRegistry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRegistryBuilder
    nameWithType: TApizrRegistryBuilder
    fullName: TApizrRegistryBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrProperOptionsBuilder
    nameWithType: TApizrProperOptionsBuilder
    fullName: TApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor*
  commentId: Overload:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddCrudFor
  name: AddCrudFor
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddCrudFor
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddCrudFor
- uid: System.Action{{TApizrExtendedProperOptionsBuilder}}
  commentId: T:System.Action{`2}
  parent: System
  definition: System.Action`1
  name: Action<TApizrExtendedProperOptionsBuilder>
  nameWithType: Action<TApizrExtendedProperOptionsBuilder>
  fullName: System.Action<TApizrExtendedProperOptionsBuilder>
  nameWithType.vb: Action(Of TApizrExtendedProperOptionsBuilder)
  fullName.vb: System.Action(Of TApizrExtendedProperOptionsBuilder)
  name.vb: Action(Of TApizrExtendedProperOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrExtendedProperOptionsBuilder
    nameWithType: TApizrExtendedProperOptionsBuilder
    fullName: TApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApizrExtendedRegistryBuilder}'
  commentId: '!:TApizrExtendedRegistryBuilder'
  definition: TApizrExtendedRegistryBuilder
  name: TApizrExtendedRegistryBuilder
  nameWithType: TApizrExtendedRegistryBuilder
  fullName: TApizrExtendedRegistryBuilder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TApizrExtendedRegistryBuilder
  name: TApizrExtendedRegistryBuilder
  nameWithType: TApizrExtendedRegistryBuilder
  fullName: TApizrExtendedRegistryBuilder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Apizr.Requesting.CrudEntityAttribute
  commentId: T:Apizr.Requesting.CrudEntityAttribute
  parent: Apizr.Requesting
  name: CrudEntityAttribute
  nameWithType: CrudEntityAttribute
  fullName: Apizr.Requesting.CrudEntityAttribute
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Requesting
  commentId: N:Apizr.Requesting
  name: Apizr.Requesting
  nameWithType: Apizr.Requesting
  fullName: Apizr.Requesting
- uid: System.Reflection.Assembly[]
  isExternal: true
  name: Assembly[]
  nameWithType: Assembly[]
  fullName: System.Reflection.Assembly[]
  nameWithType.vb: Assembly()
  fullName.vb: System.Reflection.Assembly()
  name.vb: Assembly()
  spec.csharp:
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor*
  commentId: Overload:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder`3.AddFor
  name: AddFor
  nameWithType: IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder<TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder>.AddFor
  nameWithType.vb: IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor
  fullName.vb: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder(Of TApizrExtendedRegistry, TApizrExtendedRegistryBuilder, TApizrExtendedProperOptionsBuilder).AddFor
- uid: Apizr.WebApiAttribute
  commentId: T:Apizr.WebApiAttribute
  name: WebApiAttribute
  nameWithType: WebApiAttribute
  fullName: Apizr.WebApiAttribute
