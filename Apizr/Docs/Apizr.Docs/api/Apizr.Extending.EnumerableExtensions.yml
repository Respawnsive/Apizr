### YamlMime:ManagedReference
items:
- uid: Apizr.Extending.EnumerableExtensions
  commentId: T:Apizr.Extending.EnumerableExtensions
  id: EnumerableExtensions
  parent: Apizr.Extending
  children:
  - Apizr.Extending.EnumerableExtensions.High(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  - Apizr.Extending.EnumerableExtensions.Low(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  - Apizr.Extending.EnumerableExtensions.Medium(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  langs:
  - csharp
  - vb
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Apizr.Extending.EnumerableExtensions
  type: Class
  source:
    id: EnumerableExtensions
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Extending\EnumerableExtensions.cs
    startLine: 9
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: "\nSome enumerable extensions\n"
  example: []
  syntax:
    content: public static class EnumerableExtensions
    content.vb: Public Module EnumerableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.Extending.EnumerableExtensions.Low(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  commentId: M:Apizr.Extending.EnumerableExtensions.Low(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  id: Low(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  isExtensionMethod: true
  parent: Apizr.Extending.EnumerableExtensions
  langs:
  - csharp
  - vb
  name: Low(IEnumerable<LogLevel>)
  nameWithType: EnumerableExtensions.Low(IEnumerable<LogLevel>)
  fullName: Apizr.Extending.EnumerableExtensions.Low(System.Collections.Generic.IEnumerable<Microsoft.Extensions.Logging.LogLevel>)
  type: Method
  source:
    id: Low
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Extending\EnumerableExtensions.cs
    startLine: 16
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: "\nReturn the lowest value\n"
  example: []
  syntax:
    content: public static LogLevel Low(this IEnumerable<LogLevel> enumerable)
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel}
      description: The source enumerable
    return:
      type: Microsoft.Extensions.Logging.LogLevel
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Low(enumerable As IEnumerable(Of LogLevel)) As LogLevel
  overload: Apizr.Extending.EnumerableExtensions.Low*
  nameWithType.vb: EnumerableExtensions.Low(IEnumerable(Of LogLevel))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Extending.EnumerableExtensions.Low(System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Logging.LogLevel))
  name.vb: Low(IEnumerable(Of LogLevel))
- uid: Apizr.Extending.EnumerableExtensions.Medium(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  commentId: M:Apizr.Extending.EnumerableExtensions.Medium(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  id: Medium(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  isExtensionMethod: true
  parent: Apizr.Extending.EnumerableExtensions
  langs:
  - csharp
  - vb
  name: Medium(IEnumerable<LogLevel>)
  nameWithType: EnumerableExtensions.Medium(IEnumerable<LogLevel>)
  fullName: Apizr.Extending.EnumerableExtensions.Medium(System.Collections.Generic.IEnumerable<Microsoft.Extensions.Logging.LogLevel>)
  type: Method
  source:
    id: Medium
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Extending\EnumerableExtensions.cs
    startLine: 26
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: "\nReturn the closest value to the middle\n"
  example: []
  syntax:
    content: public static LogLevel Medium(this IEnumerable<LogLevel> enumerable)
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel}
      description: The source enumerable
    return:
      type: Microsoft.Extensions.Logging.LogLevel
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Medium(enumerable As IEnumerable(Of LogLevel)) As LogLevel
  overload: Apizr.Extending.EnumerableExtensions.Medium*
  nameWithType.vb: EnumerableExtensions.Medium(IEnumerable(Of LogLevel))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Extending.EnumerableExtensions.Medium(System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Logging.LogLevel))
  name.vb: Medium(IEnumerable(Of LogLevel))
- uid: Apizr.Extending.EnumerableExtensions.High(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  commentId: M:Apizr.Extending.EnumerableExtensions.High(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  id: High(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel})
  isExtensionMethod: true
  parent: Apizr.Extending.EnumerableExtensions
  langs:
  - csharp
  - vb
  name: High(IEnumerable<LogLevel>)
  nameWithType: EnumerableExtensions.High(IEnumerable<LogLevel>)
  fullName: Apizr.Extending.EnumerableExtensions.High(System.Collections.Generic.IEnumerable<Microsoft.Extensions.Logging.LogLevel>)
  type: Method
  source:
    id: High
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Extending\EnumerableExtensions.cs
    startLine: 41
  assemblies:
  - Apizr
  namespace: Apizr.Extending
  summary: "\nReturn the highest value\n"
  example: []
  syntax:
    content: public static LogLevel High(this IEnumerable<LogLevel> enumerable)
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel}
      description: The source enumerable
    return:
      type: Microsoft.Extensions.Logging.LogLevel
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function High(enumerable As IEnumerable(Of LogLevel)) As LogLevel
  overload: Apizr.Extending.EnumerableExtensions.High*
  nameWithType.vb: EnumerableExtensions.High(IEnumerable(Of LogLevel))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Extending.EnumerableExtensions.High(System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Logging.LogLevel))
  name.vb: High(IEnumerable(Of LogLevel))
references:
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Extending.EnumerableExtensions.Low*
  commentId: Overload:Apizr.Extending.EnumerableExtensions.Low
  name: Low
  nameWithType: EnumerableExtensions.Low
  fullName: Apizr.Extending.EnumerableExtensions.Low
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.LogLevel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LogLevel>
  nameWithType: IEnumerable<LogLevel>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.Logging.LogLevel>
  nameWithType.vb: IEnumerable(Of LogLevel)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Logging.LogLevel)
  name.vb: IEnumerable(Of LogLevel)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Apizr.Extending.EnumerableExtensions.Medium*
  commentId: Overload:Apizr.Extending.EnumerableExtensions.Medium
  name: Medium
  nameWithType: EnumerableExtensions.Medium
  fullName: Apizr.Extending.EnumerableExtensions.Medium
- uid: Apizr.Extending.EnumerableExtensions.High*
  commentId: Overload:Apizr.Extending.EnumerableExtensions.High
  name: High
  nameWithType: EnumerableExtensions.High
  fullName: Apizr.Extending.EnumerableExtensions.High
