### YamlMime:ManagedReference
items:
- uid: Apizr.Extending.FileTransferRegistryExtensions
  commentId: T:Apizr.Extending.FileTransferRegistryExtensions
  id: FileTransferRegistryExtensions
  parent: Apizr.Extending
  children:
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{``0},``0}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1,``2}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{``0,``1},``0,``1}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0,``1}@)
  - Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{``0},``0}@)
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: FileTransferRegistryExtensions
  nameWithType: FileTransferRegistryExtensions
  fullName: Apizr.Extending.FileTransferRegistryExtensions
  type: Class
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: FileTransferRegistryExtensions
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 16
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  syntax:
    content: public static class FileTransferRegistryExtensions
    content.vb: Public Module FileTransferRegistryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetUploadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetUploadManager(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetUploadManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 25
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: public static IApizrUploadManager GetUploadManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager
      description: ''
    content.vb: Public Shared Function GetUploadManager(registry As IApizrEnumerableRegistry) As IApizrUploadManager
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager*
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetUploadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 35
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: 'public static IApizrUploadManager<TUploadApi> GetUploadManagerFor<TUploadApi>(this IApizrEnumerableRegistry registry) where TUploadApi : IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
      description: ''
    content.vb: Public Shared Function GetUploadManagerFor(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry) As IApizrUploadManager(Of TUploadApi)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.GetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor<TUploadApi, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetUploadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 47
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: 'public static IApizrUploadManager<TUploadApi, TUploadApiResultData> GetUploadManagerFor<TUploadApi, TUploadApiResultData>(this IApizrEnumerableRegistry registry) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi},{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function GetUploadManagerFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(registry As IApizrEnumerableRegistry) As IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.GetUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetUploadManagerWith<TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetUploadManagerWith<TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith<TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetUploadManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 58
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: public static IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData> GetUploadManagerWith<TUploadApiResultData>(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function GetUploadManagerWith(Of TUploadApiResultData)(registry As IApizrEnumerableRegistry) As IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.GetUploadManagerWith(Of TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith(Of TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetUploadManagerWith(Of TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetDownloadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetDownloadManager(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetDownloadManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 67
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: public static IApizrDownloadManager GetDownloadManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager
      description: ''
    content.vb: Public Shared Function GetDownloadManager(registry As IApizrEnumerableRegistry) As IApizrDownloadManager
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager*
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 76
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: 'public static IApizrDownloadManager<TDownloadApi> GetDownloadManagerFor<TDownloadApi>(this IApizrEnumerableRegistry registry) where TDownloadApi : IDownloadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
      description: ''
    content.vb: Public Shared Function GetDownloadManagerFor(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry) As IApizrDownloadManager(Of TDownloadApi)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.GetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 87
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: 'public static IApizrDownloadManager<TDownloadApi, TDownloadParams> GetDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry) where TDownloadApi : IDownloadApi<TDownloadParams>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
      description: ''
    content.vb: Public Shared Function GetDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry) As IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetDownloadManagerWith<TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetDownloadManagerWith<TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith<TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetDownloadManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 97
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: public static IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams> GetDownloadManagerWith<TDownloadParams>(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}
      description: ''
    content.vb: Public Shared Function GetDownloadManagerWith(Of TDownloadParams)(registry As IApizrEnumerableRegistry) As IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.GetDownloadManagerWith(Of TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith(Of TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetDownloadManagerWith(Of TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetTransferManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetTransferManager(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetTransferManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 105
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: public static IApizrTransferManager GetTransferManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager
      description: ''
    content.vb: Public Shared Function GetTransferManager(registry As IApizrEnumerableRegistry) As IApizrTransferManager
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager*
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 114
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: 'public static IApizrTransferManager<TTransferApi> GetTransferManagerFor<TTransferApi>(this IApizrEnumerableRegistry registry) where TTransferApi : ITransferApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
      description: ''
    content.vb: Public Shared Function GetTransferManagerFor(Of TTransferApi As ITransferApi)(registry As IApizrEnumerableRegistry) As IApizrTransferManager(Of TTransferApi)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.GetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 125
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: 'public static IApizrTransferManager<TTransferApi, TDownloadParams> GetTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrEnumerableRegistry registry) where TTransferApi : ITransferApi<TDownloadParams, HttpResponseMessage>, IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
      description: ''
    content.vb: Public Shared Function GetTransferManagerFor(Of TTransferApi As {ITransferApi(Of TDownloadParams, HttpResponseMessage), IUploadApi}, TDownloadParams)(registry As IApizrEnumerableRegistry) As IApizrTransferManager(Of TTransferApi, TDownloadParams)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 137
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: 'public static IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData> GetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(this IApizrEnumerableRegistry registry) where TTransferApi : ITransferApi<TDownloadParams, TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams},{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function GetTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)(registry As IApizrEnumerableRegistry) As IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: GetTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.GetTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith<TDownloadParams, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetTransferManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 148
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: public static IApizrTransferManager<ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData> GetTransferManagerWith<TDownloadParams, TUploadApiResultData>(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{{TDownloadParams},{TUploadApiResultData}},{TDownloadParams},{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function GetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(registry As IApizrEnumerableRegistry) As IApizrTransferManager(Of ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.GetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager@)
  id: TryGetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetUploadManager(IApizrEnumerableRegistry, out IApizrUploadManager)
  nameWithType: FileTransferRegistryExtensions.TryGetUploadManager(IApizrEnumerableRegistry, out IApizrUploadManager)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrUploadManager)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetUploadManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 161
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: public static bool TryGetUploadManager(this IApizrEnumerableRegistry registry, out IApizrUploadManager manager)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrUploadManager
      description: The upload manager instance
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetUploadManager(registry As IApizrEnumerableRegistry, manager As IApizrUploadManager) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetUploadManager(IApizrEnumerableRegistry, IApizrUploadManager)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrUploadManager)
  name.vb: TryGetUploadManager(IApizrEnumerableRegistry, IApizrUploadManager)
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  id: TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry, out IApizrUploadManager<TUploadApi>)
  nameWithType: FileTransferRegistryExtensions.TryGetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry, out IApizrUploadManager<TUploadApi>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetUploadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 172
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: 'public static bool TryGetUploadManagerFor<TUploadApi>(this IApizrEnumerableRegistry registry, out IApizrUploadManager<TUploadApi> manager) where TUploadApi : IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
      description: The upload manager instance
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetUploadManagerFor(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry, manager As IApizrUploadManager(Of TUploadApi)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry, IApizrUploadManager(Of TUploadApi))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi))
  name.vb: TryGetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry, IApizrUploadManager(Of TUploadApi))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0,``1}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0,``1}@)
  id: TryGetUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0,``1}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrUploadManager<TUploadApi, TUploadApiResultData>)
  nameWithType: FileTransferRegistryExtensions.TryGetUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrUploadManager<TUploadApi, TUploadApiResultData>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor<TUploadApi, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetUploadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 185
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: 'public static bool TryGetUploadManagerFor<TUploadApi, TUploadApiResultData>(this IApizrEnumerableRegistry registry, out IApizrUploadManager<TUploadApi, TUploadApiResultData> manager) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi},{TUploadApiResultData}}
      description: The upload manager instance
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetUploadManagerFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(registry As IApizrEnumerableRegistry, manager As IApizrUploadManager(Of TUploadApi, TUploadApiResultData)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, IApizrUploadManager(Of TUploadApi, TUploadApiResultData))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData))
  name.vb: TryGetUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, IApizrUploadManager(Of TUploadApi, TUploadApiResultData))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{``0},``0}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{``0},``0}@)
  id: TryGetUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{``0},``0}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetUploadManagerWith<TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>)
  nameWithType: FileTransferRegistryExtensions.TryGetUploadManagerWith<TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith<TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetUploadManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 197
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get an upload manager instance
  example: []
  syntax:
    content: public static bool TryGetUploadManagerWith<TUploadApiResultData>(this IApizrEnumerableRegistry registry, out IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData> manager)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}
      description: The upload manager instance
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetUploadManagerWith(Of TUploadApiResultData)(registry As IApizrEnumerableRegistry, manager As IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetUploadManagerWith(Of TUploadApiResultData)(IApizrEnumerableRegistry, IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith(Of TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData))
  name.vb: TryGetUploadManagerWith(Of TUploadApiResultData)(IApizrEnumerableRegistry, IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager@)
  id: TryGetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetDownloadManager(IApizrEnumerableRegistry, out IApizrDownloadManager)
  nameWithType: FileTransferRegistryExtensions.TryGetDownloadManager(IApizrEnumerableRegistry, out IApizrDownloadManager)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrDownloadManager)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetDownloadManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 207
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: public static bool TryGetDownloadManager(this IApizrEnumerableRegistry registry, out IApizrDownloadManager manager)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrDownloadManager
      description: The download manager instance
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetDownloadManager(registry As IApizrEnumerableRegistry, manager As IApizrDownloadManager) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetDownloadManager(IApizrEnumerableRegistry, IApizrDownloadManager)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager)
  name.vb: TryGetDownloadManager(IApizrEnumerableRegistry, IApizrDownloadManager)
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  id: TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi>)
  nameWithType: FileTransferRegistryExtensions.TryGetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 217
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: 'public static bool TryGetDownloadManagerFor<TDownloadApi>(this IApizrEnumerableRegistry registry, out IApizrDownloadManager<TDownloadApi> manager) where TDownloadApi : IDownloadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
      description: The download manager instance
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetDownloadManagerFor(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry, manager As IApizrDownloadManager(Of TDownloadApi)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  id: TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  nameWithType: FileTransferRegistryExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 229
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: 'public static bool TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry, out IApizrDownloadManager<TDownloadApi, TDownloadParams> manager) where TDownloadApi : IDownloadApi<TDownloadParams>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
      description: The download manager instance
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry, manager As IApizrDownloadManager(Of TDownloadApi, TDownloadParams)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{``0},``0}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{``0},``0}@)
  id: TryGetDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{``0},``0}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetDownloadManagerWith<TDownloadParams>(IApizrEnumerableRegistry, out IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>)
  nameWithType: FileTransferRegistryExtensions.TryGetDownloadManagerWith<TDownloadParams>(IApizrEnumerableRegistry, out IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith<TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>, TDownloadParams>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetDownloadManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 240
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a download manager instance
  example: []
  syntax:
    content: public static bool TryGetDownloadManagerWith<TDownloadParams>(this IApizrEnumerableRegistry registry, out IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams> manager)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}
      description: The download manager instance
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetDownloadManagerWith(Of TDownloadParams)(registry As IApizrEnumerableRegistry, manager As IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetDownloadManagerWith(Of TDownloadParams)(IApizrEnumerableRegistry, IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith(Of TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams), TDownloadParams))
  name.vb: TryGetDownloadManagerWith(Of TDownloadParams)(IApizrEnumerableRegistry, IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager@)
  id: TryGetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetTransferManager(IApizrEnumerableRegistry, out IApizrTransferManager)
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManager(IApizrEnumerableRegistry, out IApizrTransferManager)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrTransferManager)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetTransferManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 249
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: public static bool TryGetTransferManager(this IApizrEnumerableRegistry registry, out IApizrTransferManager manager)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrTransferManager
      description: The transfer manager instance
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetTransferManager(registry As IApizrEnumerableRegistry, manager As IApizrTransferManager) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetTransferManager(IApizrEnumerableRegistry, IApizrTransferManager)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager)
  name.vb: TryGetTransferManager(IApizrEnumerableRegistry, IApizrTransferManager)
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  id: TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi>)
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 259
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: 'public static bool TryGetTransferManagerFor<TTransferApi>(this IApizrEnumerableRegistry registry, out IApizrTransferManager<TTransferApi> manager) where TTransferApi : ITransferApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
      description: The transfer manager instance
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetTransferManagerFor(Of TTransferApi As ITransferApi)(registry As IApizrEnumerableRegistry, manager As IApizrTransferManager(Of TTransferApi)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi))
  name.vb: TryGetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  id: TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi, TDownloadParams>)
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi, TDownloadParams>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 271
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: 'public static bool TryGetTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrEnumerableRegistry registry, out IApizrTransferManager<TTransferApi, TDownloadParams> manager) where TTransferApi : ITransferApi<TDownloadParams, HttpResponseMessage>, IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
      description: The transfer manager instance
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetTransferManagerFor(Of TTransferApi As {ITransferApi(Of TDownloadParams, HttpResponseMessage), IUploadApi}, TDownloadParams)(registry As IApizrEnumerableRegistry, manager As IApizrTransferManager(Of TTransferApi, TDownloadParams)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi, TDownloadParams))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams))
  name.vb: TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi, TDownloadParams))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1,``2}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1,``2}@)
  id: TryGetTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1,``2}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>)
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 284
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: 'public static bool TryGetTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(this IApizrEnumerableRegistry registry, out IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData> manager) where TTransferApi : ITransferApi<TDownloadParams, TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams},{TUploadApiResultData}}
      description: The transfer manager instance
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)(registry As IApizrEnumerableRegistry, manager As IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData))
  name.vb: TryGetTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry, IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData))
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{``0,``1},``0,``1}@)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{``0,``1},``0,``1}@)
  id: TryGetTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{``0,``1},``0,``1}@)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryGetTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrTransferManager<ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData>)
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry, out IApizrTransferManager<ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith<TDownloadParams, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrTransferManager<Apizr.Transferring.Requesting.ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetTransferManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 297
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Get a transfer manager instance
  example: []
  syntax:
    content: public static bool TryGetTransferManagerWith<TDownloadParams, TUploadApiResultData>(this IApizrEnumerableRegistry registry, out IApizrTransferManager<ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData> manager)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{{TDownloadParams},{TUploadApiResultData}},{TDownloadParams},{TUploadApiResultData}}
      description: The transfer manager instance
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(registry As IApizrEnumerableRegistry, manager As IApizrTransferManager(Of ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.TryGetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry, IApizrTransferManager(Of ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Apizr.Transferring.Managing.IApizrTransferManager(Of Apizr.Transferring.Requesting.ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData))
  name.vb: TryGetTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry, IApizrTransferManager(Of ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData))
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsUploadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsUploadManager(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsUploadManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 309
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for the default <xref href="Apizr.Transferring.Requesting.IUploadApi" data-throw-if-not-resolved="false"></xref> api type
  example: []
  syntax:
    content: public static bool ContainsUploadManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsUploadManager(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager*
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsUploadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 319
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <code class="typeparamref">TUploadApi</code> api type
  example: []
  syntax:
    content: 'public static bool ContainsUploadManagerFor<TUploadApi>(this IApizrEnumerableRegistry registry) where TUploadApi : IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsUploadManagerFor(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsUploadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor<TUploadApi, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsUploadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 331
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <code class="typeparamref">TUploadApi</code> api type
  example: []
  syntax:
    content: 'public static bool ContainsUploadManagerFor<TUploadApi, TUploadApiResultData>(this IApizrEnumerableRegistry registry) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsUploadManagerFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsUploadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsUploadManagerWith<TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsUploadManagerWith<TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith<TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsUploadManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 342
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <xref href="Apizr.Transferring.Requesting.IUploadApi%601" data-throw-if-not-resolved="false"></xref> api type
  example: []
  syntax:
    content: public static bool ContainsUploadManagerWith<TUploadApiResultData>(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsUploadManagerWith(Of TUploadApiResultData)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsUploadManagerWith(Of TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith(Of TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsUploadManagerWith(Of TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsDownloadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsDownloadManager(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsDownloadManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 351
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for the default <xref href="Apizr.Transferring.Requesting.IDownloadApi" data-throw-if-not-resolved="false"></xref> api type
  example: []
  syntax:
    content: public static bool ContainsDownloadManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsDownloadManager(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager*
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 361
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <code class="typeparamref">TDownloadApi</code> api type
  example: []
  syntax:
    content: 'public static bool ContainsDownloadManagerFor<TDownloadApi>(this IApizrEnumerableRegistry registry) where TDownloadApi : IDownloadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsDownloadManagerFor(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 372
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <code class="typeparamref">TDownloadApi</code> api type
  example: []
  syntax:
    content: 'public static bool ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry) where TDownloadApi : IDownloadApi<TDownloadParams>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsDownloadManagerWith``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsDownloadManagerWith<TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsDownloadManagerWith<TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith<TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsDownloadManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 382
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <xref href="Apizr.Transferring.Requesting.IDownloadApi%601" data-throw-if-not-resolved="false"></xref> api type
  example: []
  syntax:
    content: public static bool ContainsDownloadManagerWith<TDownloadParams>(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsDownloadManagerWith(Of TDownloadParams)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsDownloadManagerWith(Of TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith(Of TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsDownloadManagerWith(Of TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManager(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsTransferManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 390
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for the default <xref href="Apizr.Transferring.Requesting.ITransferApi" data-throw-if-not-resolved="false"></xref> api type
  example: []
  syntax:
    content: public static bool ContainsTransferManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsTransferManager(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager*
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 400
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <code class="typeparamref">TTransferApi</code> api type
  example: []
  syntax:
    content: 'public static bool ContainsTransferManagerFor<TTransferApi>(this IApizrEnumerableRegistry registry) where TTransferApi : ITransferApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsTransferManagerFor(Of TTransferApi As ITransferApi)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 411
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <code class="typeparamref">TTransferApi</code> api type
  example: []
  syntax:
    content: 'public static bool ContainsTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrEnumerableRegistry registry) where TTransferApi : ITransferApi<TDownloadParams, HttpResponseMessage>, IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsTransferManagerFor(Of TTransferApi As {ITransferApi(Of TDownloadParams, HttpResponseMessage), IUploadApi}, TDownloadParams)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManagerFor``3(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsTransferManagerFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 423
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <code class="typeparamref">TTransferApi</code> api type
  example: []
  syntax:
    content: 'public static bool ContainsTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(this IApizrEnumerableRegistry registry) where TTransferApi : ITransferApi<TDownloadParams, TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManagerWith``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrEnumerableRegistry)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith<TDownloadParams, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsTransferManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 434
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Check if registry contains a manager for <xref href="Apizr.Transferring.Requesting.ITransferApi%602" data-throw-if-not-resolved="false"></xref> api type
  example: []
  syntax:
    content: public static bool ContainsTransferManagerWith<TDownloadParams, TUploadApiResultData>(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function ContainsTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith*
  nameWithType.vb: FileTransferRegistryExtensions.ContainsTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrEnumerableRegistry)
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 449
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its bytes data
  example: []
  syntax:
    content: public static Task<HttpResponseMessage> UploadAsync(this IApizrEnumerableRegistry registry, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Shared Function UploadAsync(registry As IApizrEnumerableRegistry, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync<TUploadApi>(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync<TUploadApi>(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 464
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its bytes data
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> UploadAsync<TUploadApi>(this IApizrEnumerableRegistry registry, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type to manage
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Shared Function UploadAsync(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(Of TUploadApi)(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(Of TUploadApi)(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync<TUploadApi, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 478
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its bytes data
  example: []
  syntax:
    content: 'public static Task<TUploadApiResultData> UploadAsync<TUploadApi, TUploadApiResultData>(this IApizrEnumerableRegistry registry, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Threading.Tasks.Task{{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function UploadAsync(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(registry As IApizrEnumerableRegistry, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Of TUploadApi, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 490
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its stream data
  example: []
  syntax:
    content: public static Task<HttpResponseMessage> UploadAsync(this IApizrEnumerableRegistry registry, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Shared Function UploadAsync(registry As IApizrEnumerableRegistry, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync<TUploadApi>(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync<TUploadApi>(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 504
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its stream data
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> UploadAsync<TUploadApi>(this IApizrEnumerableRegistry registry, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type to manage
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Shared Function UploadAsync(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(Of TUploadApi)(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(Of TUploadApi)(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync<TUploadApi, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 517
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its stream data
  example: []
  syntax:
    content: 'public static Task<TUploadApiResultData> UploadAsync<TUploadApi, TUploadApiResultData>(this IApizrEnumerableRegistry registry, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Threading.Tasks.Task{{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function UploadAsync(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(registry As IApizrEnumerableRegistry, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Of TUploadApi, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 528
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its file info data
  example: []
  syntax:
    content: public static Task<HttpResponseMessage> UploadAsync(this IApizrEnumerableRegistry registry, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Shared Function UploadAsync(registry As IApizrEnumerableRegistry, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync<TUploadApi>(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync<TUploadApi>(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 542
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its file info data
  example: []
  syntax:
    content: 'public static Task<HttpResponseMessage> UploadAsync<TUploadApi>(this IApizrEnumerableRegistry registry, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type to manage
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Shared Function UploadAsync(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(Of TUploadApi)(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(Of TUploadApi)(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadAsync<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadAsync<TUploadApi, TUploadApiResultData>(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync<TUploadApi, TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 555
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its file info data
  example: []
  syntax:
    content: 'public static Task<TUploadApiResultData> UploadAsync<TUploadApi, TUploadApiResultData>(this IApizrEnumerableRegistry registry, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Threading.Tasks.Task{{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function UploadAsync(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(registry As IApizrEnumerableRegistry, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadAsync(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync(Of TUploadApi, TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(Of TUploadApi, TUploadApiResultData)(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadWithAsync<TUploadApiResultData>(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadWithAsync<TUploadApiResultData>(IApizrEnumerableRegistry, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync<TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadWithAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 567
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its bytes data
  example: []
  syntax:
    content: public static Task<TUploadApiResultData> UploadWithAsync<TUploadApiResultData>(this IApizrEnumerableRegistry registry, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Threading.Tasks.Task{{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function UploadWithAsync(Of TUploadApiResultData)(registry As IApizrEnumerableRegistry, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadWithAsync(Of TUploadApiResultData)(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync(Of TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadWithAsync(Of TUploadApiResultData)(IApizrEnumerableRegistry, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadWithAsync<TUploadApiResultData>(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadWithAsync<TUploadApiResultData>(IApizrEnumerableRegistry, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync<TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadWithAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 580
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its stream data
  example: []
  syntax:
    content: public static Task<TUploadApiResultData> UploadWithAsync<TUploadApiResultData>(this IApizrEnumerableRegistry registry, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Threading.Tasks.Task{{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function UploadWithAsync(Of TUploadApiResultData)(registry As IApizrEnumerableRegistry, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadWithAsync(Of TUploadApiResultData)(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync(Of TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadWithAsync(Of TUploadApiResultData)(IApizrEnumerableRegistry, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: UploadWithAsync<TUploadApiResultData>(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.UploadWithAsync<TUploadApiResultData>(IApizrEnumerableRegistry, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync<TUploadApiResultData>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadWithAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 592
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Upload a file from its file info data
  example: []
  syntax:
    content: public static Task<TUploadApiResultData> UploadWithAsync<TUploadApiResultData>(this IApizrEnumerableRegistry registry, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: System.Threading.Tasks.Task{{TUploadApiResultData}}
      description: ''
    content.vb: Public Shared Function UploadWithAsync(Of TUploadApiResultData)(registry As IApizrEnumerableRegistry, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TUploadApiResultData)
  overload: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync*
  nameWithType.vb: FileTransferRegistryExtensions.UploadWithAsync(Of TUploadApiResultData)(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync(Of TUploadApiResultData)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadWithAsync(Of TUploadApiResultData)(IApizrEnumerableRegistry, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadAsync(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadAsync(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 607
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file
  example: []
  syntax:
    content: public static Task<FileInfo> DownloadAsync(this IApizrEnumerableRegistry registry, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadAsync(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadAsync(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadAsync(IApizrEnumerableRegistry, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadAsync(IApizrEnumerableRegistry, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Collections.Generic.IDictionary<string, object>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 621
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file with custom query parameters
  example: []
  syntax:
    content: public static Task<FileInfo> DownloadAsync(this IApizrEnumerableRegistry registry, FileInfo fileInfo, IDictionary<string, object> downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadAsync(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, downloadParams As IDictionary(Of String, Object), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadAsync(IApizrEnumerableRegistry, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Collections.Generic.IDictionary(Of String, Object), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(IApizrEnumerableRegistry, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadAsync<TDownloadApi>(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadAsync<TDownloadApi>(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 635
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file
  example: []
  syntax:
    content: 'public static Task<FileInfo> DownloadAsync<TDownloadApi>(this IApizrEnumerableRegistry registry, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type to manage
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadAsync(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi)(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(Of TDownloadApi)(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadAsync<TDownloadApi>(IApizrEnumerableRegistry, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadAsync<TDownloadApi>(IApizrEnumerableRegistry, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Collections.Generic.IDictionary<string, object>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 649
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file with custom query parameters
  example: []
  syntax:
    content: 'public static Task<FileInfo> DownloadAsync<TDownloadApi>(this IApizrEnumerableRegistry registry, FileInfo fileInfo, IDictionary<string, object> downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type to manage
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadAsync(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, downloadParams As IDictionary(Of String, Object), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi)(IApizrEnumerableRegistry, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Collections.Generic.IDictionary(Of String, Object), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(Of TDownloadApi)(IApizrEnumerableRegistry, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadAsync<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadAsync<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 663
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file
  example: []
  syntax:
    content: 'public static Task<FileInfo> DownloadAsync<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi<TDownloadParams>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type to manage
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadAsync(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadAsync<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadAsync<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 678
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file with custom query parameters
  example: []
  syntax:
    content: 'public static Task<FileInfo> DownloadAsync<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry, FileInfo fileInfo, TDownloadParams downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi<TDownloadParams>'
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: '{TDownloadParams}'
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type to manage
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadAsync(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, downloadParams As TDownloadParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadWithAsync<TDownloadParams>(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadWithAsync<TDownloadParams>(IApizrEnumerableRegistry, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync<TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadWithAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 692
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file
  example: []
  syntax:
    content: public static Task<FileInfo> DownloadWithAsync<TDownloadParams>(this IApizrEnumerableRegistry registry, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadWithAsync(Of TDownloadParams)(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadWithAsync(Of TDownloadParams)(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync(Of TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadWithAsync(Of TDownloadParams)(IApizrEnumerableRegistry, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadWithAsync``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Extending.FileTransferRegistryExtensions
  langs:
  - csharp
  - vb
  name: DownloadWithAsync<TDownloadParams>(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: FileTransferRegistryExtensions.DownloadWithAsync<TDownloadParams>(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync<TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadWithAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Extending/FileTransferRegistryExtensions.cs
    startLine: 705
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Extending
  summary: Download a file with custom query parameters
  example: []
  syntax:
    content: public static Task<FileInfo> DownloadWithAsync<TDownloadParams>(this IApizrEnumerableRegistry registry, FileInfo fileInfo, TDownloadParams downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: '{TDownloadParams}'
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Shared Function DownloadWithAsync(Of TDownloadParams)(registry As IApizrEnumerableRegistry, fileInfo As FileInfo, downloadParams As TDownloadParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync*
  nameWithType.vb: FileTransferRegistryExtensions.DownloadWithAsync(Of TDownloadParams)(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync(Of TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadWithAsync(Of TDownloadParams)(IApizrEnumerableRegistry, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  href: Apizr.html
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Extending
    name: Extending
    href: Apizr.Extending.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Extending
    name: Extending
    href: Apizr.Extending.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetUploadManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetUploadManager
  nameWithType: FileTransferRegistryExtensions.GetUploadManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManager
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistry
  parent: Apizr.Configuring.Registry
  href: Apizr.Configuring.Registry.IApizrEnumerableRegistry.html
  name: IApizrEnumerableRegistry
  nameWithType: IApizrEnumerableRegistry
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
- uid: Apizr.Transferring.Managing.IApizrUploadManager
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager
  parent: Apizr.Transferring.Managing
  href: Apizr.Transferring.Managing.IApizrUploadManager.html
  name: IApizrUploadManager
  nameWithType: IApizrUploadManager
  fullName: Apizr.Transferring.Managing.IApizrUploadManager
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  href: Apizr.html
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Configuring
    name: Configuring
    href: Apizr.Configuring.html
  - name: .
  - uid: Apizr.Configuring.Registry
    name: Registry
    href: Apizr.Configuring.Registry.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Configuring
    name: Configuring
    href: Apizr.Configuring.html
  - name: .
  - uid: Apizr.Configuring.Registry
    name: Registry
    href: Apizr.Configuring.Registry.html
- uid: Apizr.Transferring.Managing
  commentId: N:Apizr.Transferring.Managing
  href: Apizr.html
  name: Apizr.Transferring.Managing
  nameWithType: Apizr.Transferring.Managing
  fullName: Apizr.Transferring.Managing
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Transferring
    name: Transferring
    href: Apizr.Transferring.html
  - name: .
  - uid: Apizr.Transferring.Managing
    name: Managing
    href: Apizr.Transferring.Managing.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Transferring
    name: Transferring
    href: Apizr.Transferring.html
  - name: .
  - uid: Apizr.Transferring.Managing
    name: Managing
    href: Apizr.Transferring.Managing.html
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetUploadManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetUploadManagerFor
  nameWithType: FileTransferRegistryExtensions.GetUploadManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerFor
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`1
  href: Apizr.Transferring.Managing.IApizrUploadManager-1.html
  name: IApizrUploadManager<TUploadApi>
  nameWithType: IApizrUploadManager<TUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi)
  name.vb: IApizrUploadManager(Of TUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-1.html
  - name: <
  - name: TUploadApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TUploadApi
  - name: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`1
  href: Apizr.Transferring.Managing.IApizrUploadManager-1.html
  name: IApizrUploadManager<TUploadApi>
  nameWithType: IApizrUploadManager<TUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi)
  name.vb: IApizrUploadManager(Of TUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-1.html
  - name: <
  - name: TUploadApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TUploadApi
  - name: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi},{TUploadApiResultData}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2
  href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  name: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  name.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  - name: <
  - name: TUploadApi
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TUploadApi
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`2
  href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  name: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  name.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  - name: <
  - name: TUploadApi
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TUploadApi
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetUploadManagerWith__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetUploadManagerWith
  nameWithType: FileTransferRegistryExtensions.GetUploadManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetUploadManagerWith
- uid: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{``0},``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2
  href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  name: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>
  nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  name.vb: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  - name: <
  - uid: Apizr.Transferring.Requesting.IUploadApi`1
    name: IUploadApi
    href: Apizr.Transferring.Requesting.IUploadApi-1.html
  - name: <
  - name: TUploadApiResultData
  - name: '>'
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    href: Apizr.Transferring.Managing.IApizrUploadManager-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Transferring.Requesting.IUploadApi`1
    name: IUploadApi
    href: Apizr.Transferring.Requesting.IUploadApi-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TUploadApiResultData
  - name: )
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetDownloadManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetDownloadManager
  nameWithType: FileTransferRegistryExtensions.GetDownloadManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManager
- uid: Apizr.Transferring.Managing.IApizrDownloadManager
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager
  parent: Apizr.Transferring.Managing
  href: Apizr.Transferring.Managing.IApizrDownloadManager.html
  name: IApizrDownloadManager
  nameWithType: IApizrDownloadManager
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetDownloadManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetDownloadManagerFor
  nameWithType: FileTransferRegistryExtensions.GetDownloadManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerFor
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`1
  href: Apizr.Transferring.Managing.IApizrDownloadManager-1.html
  name: IApizrDownloadManager<TDownloadApi>
  nameWithType: IApizrDownloadManager<TDownloadApi>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi)
  name.vb: IApizrDownloadManager(Of TDownloadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-1.html
  - name: <
  - name: TDownloadApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadApi
  - name: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`1
  href: Apizr.Transferring.Managing.IApizrDownloadManager-1.html
  name: IApizrDownloadManager<TDownloadApi>
  nameWithType: IApizrDownloadManager<TDownloadApi>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi)
  name.vb: IApizrDownloadManager(Of TDownloadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-1.html
  - name: <
  - name: TDownloadApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadApi
  - name: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2
  href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  - name: <
  - name: TDownloadApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`2
  href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  - name: <
  - name: TDownloadApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetDownloadManagerWith__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetDownloadManagerWith
  nameWithType: FileTransferRegistryExtensions.GetDownloadManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetDownloadManagerWith
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{``0},``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2
  href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  name: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>
  nameWithType: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams), TDownloadParams)
  name.vb: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  - name: <
  - uid: Apizr.Transferring.Requesting.IDownloadApi`1
    name: IDownloadApi
    href: Apizr.Transferring.Requesting.IDownloadApi-1.html
  - name: <
  - name: TDownloadParams
  - name: '>'
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    href: Apizr.Transferring.Managing.IApizrDownloadManager-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Transferring.Requesting.IDownloadApi`1
    name: IDownloadApi
    href: Apizr.Transferring.Requesting.IDownloadApi-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadParams
  - name: )
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetTransferManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetTransferManager
  nameWithType: FileTransferRegistryExtensions.GetTransferManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManager
- uid: Apizr.Transferring.Managing.IApizrTransferManager
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager
  parent: Apizr.Transferring.Managing
  href: Apizr.Transferring.Managing.IApizrTransferManager.html
  name: IApizrTransferManager
  nameWithType: IApizrTransferManager
  fullName: Apizr.Transferring.Managing.IApizrTransferManager
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetTransferManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetTransferManagerFor
  nameWithType: FileTransferRegistryExtensions.GetTransferManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerFor
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`1
  href: Apizr.Transferring.Managing.IApizrTransferManager-1.html
  name: IApizrTransferManager<TTransferApi>
  nameWithType: IApizrTransferManager<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi)
  name.vb: IApizrTransferManager(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-1.html
  - name: <
  - name: TTransferApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TTransferApi
  - name: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`1
  href: Apizr.Transferring.Managing.IApizrTransferManager-1.html
  name: IApizrTransferManager<TTransferApi>
  nameWithType: IApizrTransferManager<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi)
  name.vb: IApizrTransferManager(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-1.html
  - name: <
  - name: TTransferApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TTransferApi
  - name: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`2
  href: Apizr.Transferring.Managing.IApizrTransferManager-2.html
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-2.html
  - name: <
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`2
  href: Apizr.Transferring.Managing.IApizrTransferManager-2.html
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-2.html
  - name: <
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams},{TUploadApiResultData}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0,``1,``2}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`3
  href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  name: IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`3
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  - name: <
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`3
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager`3
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`3
  href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  name: IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams, TUploadApiResultData>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`3
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  - name: <
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`3
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TTransferApi
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_GetTransferManagerWith__2_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: GetTransferManagerWith
  nameWithType: FileTransferRegistryExtensions.GetTransferManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.GetTransferManagerWith
- uid: Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{{TDownloadParams},{TUploadApiResultData}},{TDownloadParams},{TUploadApiResultData}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi{``0,``1},``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`3
  href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  name: IApizrTransferManager<ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData>
  nameWithType: IApizrTransferManager<ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<Apizr.Transferring.Requesting.ITransferApi<TDownloadParams, TUploadApiResultData>, TDownloadParams, TUploadApiResultData>
  nameWithType.vb: IApizrTransferManager(Of ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of Apizr.Transferring.Requesting.ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)
  name.vb: IApizrTransferManager(Of ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`3
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  - name: <
  - uid: Apizr.Transferring.Requesting.ITransferApi`2
    name: ITransferApi
    href: Apizr.Transferring.Requesting.ITransferApi-2.html
  - name: <
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`3
    name: IApizrTransferManager
    href: Apizr.Transferring.Managing.IApizrTransferManager-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Transferring.Requesting.ITransferApi`2
    name: ITransferApi
    href: Apizr.Transferring.Requesting.ITransferApi-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
  - name: ','
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetUploadManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrUploadManager__
  name: TryGetUploadManager
  nameWithType: FileTransferRegistryExtensions.TryGetUploadManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManager
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetUploadManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrUploadManager___0___
  name: TryGetUploadManagerFor
  nameWithType: FileTransferRegistryExtensions.TryGetUploadManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerFor
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetUploadManagerWith__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrUploadManager_Apizr_Transferring_Requesting_IUploadApi___0____0___
  name: TryGetUploadManagerWith
  nameWithType: FileTransferRegistryExtensions.TryGetUploadManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetUploadManagerWith
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetDownloadManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrDownloadManager__
  name: TryGetDownloadManager
  nameWithType: FileTransferRegistryExtensions.TryGetDownloadManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManager
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetDownloadManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrDownloadManager___0___
  name: TryGetDownloadManagerFor
  nameWithType: FileTransferRegistryExtensions.TryGetDownloadManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerFor
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetDownloadManagerWith__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrDownloadManager_Apizr_Transferring_Requesting_IDownloadApi___0____0___
  name: TryGetDownloadManagerWith
  nameWithType: FileTransferRegistryExtensions.TryGetDownloadManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetDownloadManagerWith
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetTransferManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrTransferManager__
  name: TryGetTransferManager
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManager
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetTransferManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrTransferManager___0___
  name: TryGetTransferManagerFor
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerFor
- uid: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_TryGetTransferManagerWith__2_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Apizr_Transferring_Managing_IApizrTransferManager_Apizr_Transferring_Requesting_ITransferApi___0___1____0___1___
  name: TryGetTransferManagerWith
  nameWithType: FileTransferRegistryExtensions.TryGetTransferManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.TryGetTransferManagerWith
- uid: Apizr.Transferring.Requesting.IUploadApi
  commentId: T:Apizr.Transferring.Requesting.IUploadApi
  href: Apizr.Transferring.Requesting.IUploadApi.html
  name: IUploadApi
  nameWithType: IUploadApi
  fullName: Apizr.Transferring.Requesting.IUploadApi
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsUploadManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsUploadManager
  nameWithType: FileTransferRegistryExtensions.ContainsUploadManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManager
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsUploadManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsUploadManagerFor
  nameWithType: FileTransferRegistryExtensions.ContainsUploadManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerFor
- uid: Apizr.Transferring.Requesting.IUploadApi`1
  commentId: T:Apizr.Transferring.Requesting.IUploadApi`1
  href: Apizr.Transferring.Requesting.IUploadApi-1.html
  name: IUploadApi<TApiResultData>
  nameWithType: IUploadApi<TApiResultData>
  fullName: Apizr.Transferring.Requesting.IUploadApi<TApiResultData>
  nameWithType.vb: IUploadApi(Of TApiResultData)
  fullName.vb: Apizr.Transferring.Requesting.IUploadApi(Of TApiResultData)
  name.vb: IUploadApi(Of TApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Requesting.IUploadApi`1
    name: IUploadApi
    href: Apizr.Transferring.Requesting.IUploadApi-1.html
  - name: <
  - name: TApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Requesting.IUploadApi`1
    name: IUploadApi
    href: Apizr.Transferring.Requesting.IUploadApi-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TApiResultData
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsUploadManagerWith__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsUploadManagerWith
  nameWithType: FileTransferRegistryExtensions.ContainsUploadManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsUploadManagerWith
- uid: Apizr.Transferring.Requesting.IDownloadApi
  commentId: T:Apizr.Transferring.Requesting.IDownloadApi
  href: Apizr.Transferring.Requesting.IDownloadApi.html
  name: IDownloadApi
  nameWithType: IDownloadApi
  fullName: Apizr.Transferring.Requesting.IDownloadApi
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsDownloadManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsDownloadManager
  nameWithType: FileTransferRegistryExtensions.ContainsDownloadManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManager
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsDownloadManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsDownloadManagerFor
  nameWithType: FileTransferRegistryExtensions.ContainsDownloadManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerFor
- uid: Apizr.Transferring.Requesting.IDownloadApi`1
  commentId: T:Apizr.Transferring.Requesting.IDownloadApi`1
  href: Apizr.Transferring.Requesting.IDownloadApi-1.html
  name: IDownloadApi<TDownloadParams>
  nameWithType: IDownloadApi<TDownloadParams>
  fullName: Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>
  nameWithType.vb: IDownloadApi(Of TDownloadParams)
  fullName.vb: Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams)
  name.vb: IDownloadApi(Of TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Requesting.IDownloadApi`1
    name: IDownloadApi
    href: Apizr.Transferring.Requesting.IDownloadApi-1.html
  - name: <
  - name: TDownloadParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Requesting.IDownloadApi`1
    name: IDownloadApi
    href: Apizr.Transferring.Requesting.IDownloadApi-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadParams
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsDownloadManagerWith__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsDownloadManagerWith
  nameWithType: FileTransferRegistryExtensions.ContainsDownloadManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsDownloadManagerWith
- uid: Apizr.Transferring.Requesting.ITransferApi
  commentId: T:Apizr.Transferring.Requesting.ITransferApi
  href: Apizr.Transferring.Requesting.ITransferApi.html
  name: ITransferApi
  nameWithType: ITransferApi
  fullName: Apizr.Transferring.Requesting.ITransferApi
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsTransferManager_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsTransferManager
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManager
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManager
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsTransferManagerFor__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsTransferManagerFor
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManagerFor
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerFor
- uid: Apizr.Transferring.Requesting.ITransferApi`2
  commentId: T:Apizr.Transferring.Requesting.ITransferApi`2
  href: Apizr.Transferring.Requesting.ITransferApi-2.html
  name: ITransferApi<TDownloadParams, TUploadApiResultData>
  nameWithType: ITransferApi<TDownloadParams, TUploadApiResultData>
  fullName: Apizr.Transferring.Requesting.ITransferApi<TDownloadParams, TUploadApiResultData>
  nameWithType.vb: ITransferApi(Of TDownloadParams, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Requesting.ITransferApi(Of TDownloadParams, TUploadApiResultData)
  name.vb: ITransferApi(Of TDownloadParams, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Requesting.ITransferApi`2
    name: ITransferApi
    href: Apizr.Transferring.Requesting.ITransferApi-2.html
  - name: <
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: Apizr.Transferring.Requesting.ITransferApi`2
    name: ITransferApi
    href: Apizr.Transferring.Requesting.ITransferApi-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TDownloadParams
  - name: ','
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_ContainsTransferManagerWith__2_Apizr_Configuring_Registry_IApizrEnumerableRegistry_
  name: ContainsTransferManagerWith
  nameWithType: FileTransferRegistryExtensions.ContainsTransferManagerWith
  fullName: Apizr.Extending.FileTransferRegistryExtensions.ContainsTransferManagerWith
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.UploadAsync
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_UploadAsync_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Refit_ByteArrayPart_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: UploadAsync
  nameWithType: FileTransferRegistryExtensions.UploadAsync
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadAsync
- uid: Refit.ByteArrayPart
  commentId: T:Refit.ByteArrayPart
  parent: Refit
  isExternal: true
  name: ByteArrayPart
  nameWithType: ByteArrayPart
  fullName: Refit.ByteArrayPart
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: )
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: )
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading.Tasks.Task{{TUploadApiResultData}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TUploadApiResultData>
  nameWithType: Task<TUploadApiResultData>
  fullName: System.Threading.Tasks.Task<TUploadApiResultData>
  nameWithType.vb: Task(Of TUploadApiResultData)
  fullName.vb: System.Threading.Tasks.Task(Of TUploadApiResultData)
  name.vb: Task(Of TUploadApiResultData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TUploadApiResultData
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TUploadApiResultData
  - name: )
- uid: Refit.StreamPart
  commentId: T:Refit.StreamPart
  parent: Refit
  isExternal: true
  name: StreamPart
  nameWithType: StreamPart
  fullName: Refit.StreamPart
- uid: Refit.FileInfoPart
  commentId: T:Refit.FileInfoPart
  parent: Refit
  isExternal: true
  name: FileInfoPart
  nameWithType: FileInfoPart
  fullName: Refit.FileInfoPart
- uid: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_UploadWithAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_Refit_ByteArrayPart_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: UploadWithAsync
  nameWithType: FileTransferRegistryExtensions.UploadWithAsync
  fullName: Apizr.Extending.FileTransferRegistryExtensions.UploadWithAsync
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_DownloadAsync_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_IO_FileInfo_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: DownloadAsync
  nameWithType: FileTransferRegistryExtensions.DownloadAsync
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadAsync
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.Threading.Tasks.Task{System.IO.FileInfo}
  commentId: T:System.Threading.Tasks.Task{System.IO.FileInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FileInfo>
  nameWithType: Task<FileInfo>
  fullName: System.Threading.Tasks.Task<System.IO.FileInfo>
  nameWithType.vb: Task(Of FileInfo)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.FileInfo)
  name.vb: Task(Of FileInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: '{TDownloadParams}'
  commentId: '!:TDownloadParams'
  definition: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync*
  commentId: Overload:Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync
  href: Apizr.Extending.FileTransferRegistryExtensions.html#Apizr_Extending_FileTransferRegistryExtensions_DownloadWithAsync__1_Apizr_Configuring_Registry_IApizrEnumerableRegistry_System_IO_FileInfo_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: DownloadWithAsync
  nameWithType: FileTransferRegistryExtensions.DownloadWithAsync
  fullName: Apizr.Extending.FileTransferRegistryExtensions.DownloadWithAsync
