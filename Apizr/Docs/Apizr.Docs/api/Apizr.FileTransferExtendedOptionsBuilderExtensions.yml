### YamlMime:ManagedReference
items:
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions
  commentId: T:Apizr.FileTransferExtendedOptionsBuilderExtensions
  id: FileTransferExtendedOptionsBuilderExtensions
  parent: Apizr
  children:
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``3(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``3(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  - Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  langs:
  - csharp
  - vb
  name: FileTransferExtendedOptionsBuilderExtensions
  nameWithType: FileTransferExtendedOptionsBuilderExtensions
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions
  type: Class
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: FileTransferExtendedOptionsBuilderExtensions
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 16
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nFile transfer options builder extensions\n"
  example: []
  syntax:
    content: public static class FileTransferExtendedOptionsBuilderExtensions
    content.vb: Public Module FileTransferExtendedOptionsBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrUploadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrUploadManager(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrUploadManager
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 28
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for IUploadApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IServiceCollection AddApizrUploadManager(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrUploadManager(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder)) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrUploadManager(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrUploadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrUploadManagerFor<TUploadApi>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor<TUploadApi>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor<TUploadApi>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrUploadManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 39
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddApizrUploadManagerFor<TUploadApi>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrUploadManagerFor(Of TUploadApi As IUploadApi)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor(Of TUploadApi)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor(Of TUploadApi)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrUploadManagerFor(Of TUploadApi)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrUploadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrUploadManagerFor<TUploadApi, TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor<TUploadApi, TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor<TUploadApi, TUploadApiResultData>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrUploadManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 63
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddApizrUploadManagerFor<TUploadApi, TUploadApiResultData>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi<TUploadApiResultData>
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrUploadManagerFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrUploadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrUploadManagerWith<TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith<TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith<TUploadApiResultData>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrUploadManagerWith
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 80
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: public static IServiceCollection AddApizrUploadManagerWith<TUploadApiResultData>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrUploadManagerWith(Of TUploadApiResultData)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith(Of TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith(Of TUploadApiResultData)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrUploadManagerWith(Of TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrDownloadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrDownloadManager(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrDownloadManager
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 95
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for IDownloadApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IServiceCollection AddApizrDownloadManager(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrDownloadManager(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrDownloadManager(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrDownloadManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrDownloadManagerFor<TDownloadApi>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor<TDownloadApi>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor<TDownloadApi>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 106
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddApizrDownloadManagerFor<TDownloadApi>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrDownloadManagerFor(Of TDownloadApi As IDownloadApi)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor(Of TDownloadApi)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor(Of TDownloadApi)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrDownloadManagerFor(Of TDownloadApi)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrDownloadManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrDownloadManagerFor<TDownloadApi, TDownloadParams>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor<TDownloadApi, TDownloadParams>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor<TDownloadApi, TDownloadParams>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 130
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddApizrDownloadManagerFor<TDownloadApi, TDownloadParams>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrDownloadManagerWith``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrDownloadManagerWith<TDownloadParams>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith<TDownloadParams>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith<TDownloadParams>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrDownloadManagerWith
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 144
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi{TDownloadParams}\n"
  example: []
  syntax:
    content: public static IServiceCollection AddApizrDownloadManagerWith<TDownloadParams>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrDownloadManagerWith(Of TDownloadParams)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith(Of TDownloadParams)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith(Of TDownloadParams)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrDownloadManagerWith(Of TDownloadParams)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrTransferManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrTransferManager(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrTransferManager
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 156
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for ITransferApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IServiceCollection AddApizrTransferManager(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrTransferManager(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrTransferManager(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrTransferManagerFor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrTransferManagerFor<TTransferApi>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor<TTransferApi>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor<TTransferApi>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrTransferManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 167
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddApizrTransferManagerFor<TTransferApi>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrTransferManagerFor(Of TTransferApi As ITransferApi)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor(Of TTransferApi)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor(Of TTransferApi)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrTransferManagerFor(Of TTransferApi)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrTransferManagerFor``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrTransferManagerFor<TTransferApi, TDownloadParams>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor<TTransferApi, TDownloadParams>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor<TTransferApi, TDownloadParams>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrTransferManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 194
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddApizrTransferManagerFor<TTransferApi, TDownloadParams>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi<TDownloadParams, HttpResponseMessage>, IUploadApi
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrTransferManagerFor(Of TTransferApi As {ITransferApi(Of TDownloadParams, HttpResponseMessage), IUploadApi}, TDownloadParams)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor(Of TTransferApi, TDownloadParams)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor(Of TTransferApi, TDownloadParams)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrTransferManagerFor(Of TTransferApi, TDownloadParams)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``3(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor``3(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrTransferManagerFor``3(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrTransferManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 214
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddApizrTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi<TDownloadParams, TUploadApiResultData>
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  id: AddApizrTransferManagerWith``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddApizrTransferManagerWith<TDownloadParams, TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith<TDownloadParams, TUploadApiResultData>(IServiceCollection, Action<IApizrExtendedManagerOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith<TDownloadParams, TUploadApiResultData>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddApizrTransferManagerWith
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 233
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: public static IServiceCollection AddApizrTransferManagerWith<TDownloadParams, TUploadApiResultData>(this IServiceCollection services, Action<IApizrExtendedManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection where to add the manager
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(services As IServiceCollection, optionsBuilder As Action(Of IApizrExtendedManagerOptionsBuilder) = Nothing) As IServiceCollection
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder))
  name.vb: AddApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IServiceCollection, Action(Of IApizrExtendedManagerOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddUploadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManager(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddUploadManager(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddUploadManager
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 253
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for IUploadApi\n"
  example: []
  syntax:
    content: public static IApizrExtendedRegistryBuilder AddUploadManager(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManager(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddUploadManager(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddUploadManager(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddUploadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManagerFor<TUploadApi>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor<TUploadApi>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor<TUploadApi>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddUploadManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 264
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrExtendedRegistryBuilder AddUploadManagerFor<TUploadApi>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManagerFor(Of TUploadApi As IUploadApi)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor(Of TUploadApi)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor(Of TUploadApi)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddUploadManagerFor(Of TUploadApi)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddUploadManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor<TUploadApi, TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor<TUploadApi, TUploadApiResultData>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddUploadManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 294
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrExtendedRegistryBuilder AddUploadManagerFor<TUploadApi, TUploadApiResultData>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi<TUploadApiResultData>
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManagerFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor(Of TUploadApi, TUploadApiResultData)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddUploadManagerFor(Of TUploadApi, TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddUploadManagerWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManagerWith<TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith<TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith<TUploadApiResultData>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddUploadManagerWith
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 315
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: public static IApizrExtendedRegistryBuilder AddUploadManagerWith<TUploadApiResultData>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManagerWith(Of TUploadApiResultData)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith(Of TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith(Of TUploadApiResultData)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddUploadManagerWith(Of TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddDownloadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadManager(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDownloadManager
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 334
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for IDownloadApi\n"
  example: []
  syntax:
    content: public static IApizrExtendedRegistryBuilder AddDownloadManager(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadManager(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddDownloadManager(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddDownloadManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadManagerFor<TDownloadApi>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor<TDownloadApi>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor<TDownloadApi>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDownloadManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 347
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrExtendedRegistryBuilder AddDownloadManagerFor<TDownloadApi>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadManagerFor(Of TDownloadApi As IDownloadApi)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor(Of TDownloadApi)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor(Of TDownloadApi)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddDownloadManagerFor(Of TDownloadApi)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddDownloadFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadFor<TDownloadApi, TDownloadParams>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor<TDownloadApi, TDownloadParams>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor<TDownloadApi, TDownloadParams>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDownloadFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 378
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrExtendedRegistryBuilder AddDownloadFor<TDownloadApi, TDownloadParams>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor(Of TDownloadApi, TDownloadParams)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor(Of TDownloadApi, TDownloadParams)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddDownloadFor(Of TDownloadApi, TDownloadParams)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddDownloadWith``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadWith<TDownloadParams>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith<TDownloadParams>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith<TDownloadParams>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddDownloadWith
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 400
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi{TDownloadParams}\n"
  example: []
  syntax:
    content: public static IApizrExtendedRegistryBuilder AddDownloadWith<TDownloadParams>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadWith(Of TDownloadParams)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith(Of TDownloadParams)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith(Of TDownloadParams)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddDownloadWith(Of TDownloadParams)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddTransferManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManager(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManager(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddTransferManager
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 420
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for ITransferApi\n"
  example: []
  syntax:
    content: public static IApizrExtendedRegistryBuilder AddTransferManager(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManager(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddTransferManager(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddTransferManager(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddTransferManagerFor``1(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManagerFor<TTransferApi>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddTransferManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 453
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrExtendedRegistryBuilder AddTransferManagerFor<TTransferApi>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManagerFor(Of TTransferApi As ITransferApi)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddTransferManagerFor(Of TTransferApi)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddTransferManagerFor``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManagerFor<TTransferApi, TDownloadParams>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi, TDownloadParams>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddTransferManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 504
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrExtendedRegistryBuilder AddTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi<TDownloadParams, HttpResponseMessage>, IUploadApi
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManagerFor(Of TTransferApi As {ITransferApi(Of TDownloadParams, HttpResponseMessage), IUploadApi}, TDownloadParams)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``3(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor``3(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddTransferManagerFor``3(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddTransferManagerFor
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 541
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrExtendedRegistryBuilder AddTransferManagerFor<TTransferApi, TDownloadParams, TUploadApiResultData>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi<TDownloadParams, TUploadApiResultData>
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams, TUploadApiResultData), TDownloadParams, TUploadApiResultData)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddTransferManagerFor(Of TTransferApi, TDownloadParams, TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  commentId: M:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  id: AddTransferManagerWith``2(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder,System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferExtendedOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith<TDownloadParams, TUploadApiResultData>(IApizrExtendedRegistryBuilder, Action<IApizrExtendedProperOptionsBuilder>)
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith<TDownloadParams, TUploadApiResultData>(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: AddTransferManagerWith
    path: ../../Src/Transferring/Apizr.Extensions.Microsoft.FileTransfer/FileTransferExtendedOptionsBuilderExtensions.cs
    startLine: 577
  assemblies:
  - Apizr.Extensions.Microsoft.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: public static IApizrExtendedRegistryBuilder AddTransferManagerWith<TDownloadParams, TUploadApiResultData>(this IApizrExtendedRegistryBuilder builder, Action<IApizrExtendedProperOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadParams
      description: The download query parameters type
    - id: TUploadApiResultData
      description: The upload api return type
    return:
      type: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(builder As IApizrExtendedRegistryBuilder, optionsBuilder As Action(Of IApizrExtendedProperOptionsBuilder) = Nothing) As IApizrExtendedRegistryBuilder
  overload: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith*
  nameWithType.vb: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder, System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder))
  name.vb: AddTransferManagerWith(Of TDownloadParams, TUploadApiResultData)(IApizrExtendedRegistryBuilder, Action(Of IApizrExtendedProperOptionsBuilder))
references:
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager
  name: AddApizrUploadManager
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManager
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  commentId: T:System.Action{Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrExtendedManagerOptionsBuilder>
  nameWithType: Action<IApizrExtendedManagerOptionsBuilder>
  fullName: System.Action<Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder>
  nameWithType.vb: Action(Of IApizrExtendedManagerOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)
  name.vb: Action(Of IApizrExtendedManagerOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
    name: IApizrExtendedManagerOptionsBuilder
    nameWithType: IApizrExtendedManagerOptionsBuilder
    fullName: Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor
  name: AddApizrUploadManagerFor
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerFor
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith
  name: AddApizrUploadManagerWith
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrUploadManagerWith
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager
  name: AddApizrDownloadManager
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManager
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor
  name: AddApizrDownloadManagerFor
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerFor
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith
  name: AddApizrDownloadManagerWith
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrDownloadManagerWith
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager
  name: AddApizrTransferManager
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManager
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor
  name: AddApizrTransferManagerFor
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerFor
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith
  name: AddApizrTransferManagerWith
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddApizrTransferManagerWith
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager
  name: AddUploadManager
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddUploadManager
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManager
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
  commentId: T:Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
  parent: Apizr.Extending.Configuring.Registry
  name: IApizrExtendedRegistryBuilder
  nameWithType: IApizrExtendedRegistryBuilder
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedRegistryBuilder
- uid: System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
  commentId: T:System.Action{Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrExtendedProperOptionsBuilder>
  nameWithType: Action<IApizrExtendedProperOptionsBuilder>
  fullName: System.Action<Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder>
  nameWithType.vb: Action(Of IApizrExtendedProperOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder)
  name.vb: Action(Of IApizrExtendedProperOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
    name: IApizrExtendedProperOptionsBuilder
    nameWithType: IApizrExtendedProperOptionsBuilder
    fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
    name: IApizrExtendedProperOptionsBuilder
    nameWithType: IApizrExtendedProperOptionsBuilder
    fullName: Apizr.Extending.Configuring.Proper.IApizrExtendedProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Registry
  commentId: N:Apizr.Extending.Configuring.Registry
  name: Apizr.Extending.Configuring.Registry
  nameWithType: Apizr.Extending.Configuring.Registry
  fullName: Apizr.Extending.Configuring.Registry
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor
  name: AddUploadManagerFor
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerFor
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith
  name: AddUploadManagerWith
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddUploadManagerWith
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager
  name: AddDownloadManager
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManager
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor
  name: AddDownloadManagerFor
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadManagerFor
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor
  name: AddDownloadFor
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadFor
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith
  name: AddDownloadWith
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddDownloadWith
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager
  name: AddTransferManager
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManager
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManager
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor
  name: AddTransferManagerFor
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerFor
- uid: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith*
  commentId: Overload:Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith
  name: AddTransferManagerWith
  nameWithType: FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith
  fullName: Apizr.FileTransferExtendedOptionsBuilderExtensions.AddTransferManagerWith
