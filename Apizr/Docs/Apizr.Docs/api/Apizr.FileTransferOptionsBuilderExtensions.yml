### YamlMime:ManagedReference
items:
- uid: Apizr.FileTransferOptionsBuilderExtensions
  commentId: T:Apizr.FileTransferOptionsBuilderExtensions
  id: FileTransferOptionsBuilderExtensions
  parent: Apizr
  children:
  - Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrTransferRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrUploadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  - Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  - Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  - Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  - Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  - Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  - Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  - Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  - Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  langs:
  - csharp
  - vb
  name: FileTransferOptionsBuilderExtensions
  nameWithType: FileTransferOptionsBuilderExtensions
  fullName: Apizr.FileTransferOptionsBuilderExtensions
  type: Class
  source:
    id: FileTransferOptionsBuilderExtensions
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 15
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nFile transfer options builder extensions\n"
  example: []
  syntax:
    content: public static class FileTransferOptionsBuilderExtensions
    content.vb: Public Module FileTransferOptionsBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateUploadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateUploadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 27
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate an upload manager for IUploadApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IApizrUploadManager<IUploadApi> CreateUploadManager(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateUploadManager(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder)) As IApizrUploadManager(Of IUploadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateUploadManagerFor<TUploadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateUploadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 38
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrUploadManager<TUploadApi> CreateUploadManagerFor<TUploadApi>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateUploadManagerFor(Of TUploadApi As IUploadApi)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrUploadManager(Of TUploadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerFor(Of TUploadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateDownloadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateDownloadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 49
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a download manager for IDownloadApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IApizrDownloadManager<IDownloadApi> CreateDownloadManager(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDownloadManager(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrDownloadManager(Of IDownloadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateDownloadManagerFor<TDownloadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 60
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a download manager for the provided download api derived from IDownloadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrDownloadManager<TDownloadApi> CreateDownloadManagerFor<TDownloadApi>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDownloadManagerFor(Of TDownloadApi As IDownloadApi)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrDownloadManager(Of TDownloadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 73
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a download manager for the provided download api derived from IDownloadApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrDownloadManager<TDownloadApi, TDownloadParams> CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateTransferManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateTransferManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 84
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a transfer manager for ITransferApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IApizrTransferManager<ITransferApi> CreateTransferManager(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateTransferManager(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrTransferManager(Of ITransferApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateTransferManagerFor<TTransferApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 95
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a transfer manager for the provided transfer api derived from ITransferApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrTransferManager<TTransferApi> CreateTransferManagerFor<TTransferApi>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateTransferManagerFor(Of TTransferApi As ITransferApi)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrTransferManager(Of TTransferApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateTransferManagerFor<TTransferApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 109
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrTransferManager<TTransferApi, TDownloadParams> CreateTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi<TDownloadParams>
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams), TDownloadParams)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrTransferManager(Of TTransferApi, TDownloadParams)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddUploadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddUploadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 127
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for IUploadApi (you must at least provide a base url)\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddUploadManager(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManager(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder)) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddUploadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddUploadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrUploadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrUploadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  id: AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrUploadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManager(IApizrRegistryBuilder, Action<IApizrUploadRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddUploadManager(IApizrRegistryBuilder, Action<IApizrUploadRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Registry.IApizrUploadRegistryBuilder>, System.Action<Apizr.Configuring.Common.IApizrCommonOptionsBuilder>)
  type: Method
  source:
    id: AddUploadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 143
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for each provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddUploadManager(this IApizrRegistryBuilder builder, Action<IApizrUploadRegistryBuilder> uploadRegistry, Action<IApizrCommonOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: uploadRegistry
      type: System.Action{Apizr.Configuring.Registry.IApizrUploadRegistryBuilder}
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManager(builder As IApizrRegistryBuilder, uploadRegistry As Action(Of IApizrUploadRegistryBuilder), optionsBuilder As Action(Of IApizrCommonOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddUploadManager(IApizrRegistryBuilder, Action(Of IApizrUploadRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Registry.IApizrUploadRegistryBuilder), System.Action(Of Apizr.Configuring.Common.IApizrCommonOptionsBuilder))
  name.vb: AddUploadManager(IApizrRegistryBuilder, Action(Of IApizrUploadRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddDownloadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 162
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for IDownloadApi (you must at least provide a base url)\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddDownloadManager(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadManager(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder)) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddDownloadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddDownloadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  id: AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadManager(IApizrRegistryBuilder, Action<IApizrDownloadRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManager(IApizrRegistryBuilder, Action<IApizrDownloadRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder>, System.Action<Apizr.Configuring.Common.IApizrCommonOptionsBuilder>)
  type: Method
  source:
    id: AddDownloadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 180
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for each provided download api derived from IDownloadApi\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddDownloadManager(this IApizrRegistryBuilder builder, Action<IApizrDownloadRegistryBuilder> downloadRegistry, Action<IApizrCommonOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: downloadRegistry
      type: System.Action{Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder}
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadManager(builder As IApizrRegistryBuilder, downloadRegistry As Action(Of IApizrDownloadRegistryBuilder), optionsBuilder As Action(Of IApizrCommonOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddDownloadManager(IApizrRegistryBuilder, Action(Of IApizrDownloadRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder), System.Action(Of Apizr.Configuring.Common.IApizrCommonOptionsBuilder))
  name.vb: AddDownloadManager(IApizrRegistryBuilder, Action(Of IApizrDownloadRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddTransferManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 199
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for ITransferApi (you must at least provide a base url)\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddTransferManager(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManager(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder)) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddTransferManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddTransferManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrTransferRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrTransferRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  id: AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Registry.IApizrTransferRegistryBuilder},System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManager(IApizrRegistryBuilder, Action<IApizrTransferRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManager(IApizrRegistryBuilder, Action<IApizrTransferRegistryBuilder>, Action<IApizrCommonOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Registry.IApizrTransferRegistryBuilder>, System.Action<Apizr.Configuring.Common.IApizrCommonOptionsBuilder>)
  type: Method
  source:
    id: AddTransferManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 219
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for each provided transfer api derived from ITransferApi\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddTransferManager(this IApizrRegistryBuilder builder, Action<IApizrTransferRegistryBuilder> transferRegistry, Action<IApizrCommonOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: transferRegistry
      type: System.Action{Apizr.Configuring.Registry.IApizrTransferRegistryBuilder}
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManager(builder As IApizrRegistryBuilder, transferRegistry As Action(Of IApizrTransferRegistryBuilder), optionsBuilder As Action(Of IApizrCommonOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddTransferManager(IApizrRegistryBuilder, Action(Of IApizrTransferRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Registry.IApizrTransferRegistryBuilder), System.Action(Of Apizr.Configuring.Common.IApizrCommonOptionsBuilder))
  name.vb: AddTransferManager(IApizrRegistryBuilder, Action(Of IApizrTransferRegistryBuilder), Action(Of IApizrCommonOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: GetUploadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 242
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet an upload manager instance\n"
  example: []
  syntax:
    content: >-
      public static IApizrUploadManager<TUploadApi> GetUploadManagerFor<TUploadApi>(this IApizrEnumerableRegistry registry)
          where TUploadApi : IUploadApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUploadManagerFor(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry) As IApizrUploadManager(Of TUploadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: GetDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 253
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a download manager instance\n"
  example: []
  syntax:
    content: >-
      public static IApizrDownloadManager<TDownloadApi> GetDownloadManagerFor<TDownloadApi>(this IApizrEnumerableRegistry registry)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDownloadManagerFor(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry) As IApizrDownloadManager(Of TDownloadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: GetDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 264
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a download manager instance\n"
  example: []
  syntax:
    content: >-
      public static IApizrDownloadManager<TDownloadApi, TDownloadParams> GetDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry) As IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  overload: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: GetTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 274
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a transfer manager instance\n"
  example: []
  syntax:
    content: >-
      public static IApizrTransferManager<TTransferApi> GetTransferManagerFor<TTransferApi>(this IApizrEnumerableRegistry registry)
          where TTransferApi : ITransferApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTransferManagerFor(Of TTransferApi As ITransferApi)(registry As IApizrEnumerableRegistry) As IApizrTransferManager(Of TTransferApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: GetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: GetTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 285
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a transfer manager instance\n"
  example: []
  syntax:
    content: >-
      public static IApizrTransferManager<TTransferApi, TDownloadParams> GetTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrEnumerableRegistry registry)
          where TTransferApi : ITransferApi<TDownloadParams>
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry) As IApizrTransferManager(Of TTransferApi, TDownloadParams)
  overload: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: GetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  id: TryGetUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrUploadManager{``0}@)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: TryGetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry, out IApizrUploadManager<TUploadApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry, out IApizrUploadManager<TUploadApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>)
  type: Method
  source:
    id: TryGetUploadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 300
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet an upload manager instance\n"
  example: []
  syntax:
    content: >-
      public static bool TryGetUploadManagerFor<TUploadApi>(this IApizrEnumerableRegistry registry, out IApizrUploadManager<TUploadApi> manager)
          where TUploadApi : IUploadApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetUploadManagerFor(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry, ByRef manager As IApizrUploadManager(Of TUploadApi)) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry, ByRef IApizrUploadManager(Of TUploadApi))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, ByRef Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi))
  name.vb: TryGetUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry, ByRef IApizrUploadManager(Of TUploadApi))
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  id: TryGetDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0}@)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: TryGetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>)
  type: Method
  source:
    id: TryGetDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 311
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a download manager instance\n"
  example: []
  syntax:
    content: >-
      public static bool TryGetDownloadManagerFor<TDownloadApi>(this IApizrEnumerableRegistry registry, out IApizrDownloadManager<TDownloadApi> manager)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetDownloadManagerFor(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry, ByRef manager As IApizrDownloadManager(Of TDownloadApi)) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry, ByRef IApizrDownloadManager(Of TDownloadApi))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, ByRef Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry, ByRef IApizrDownloadManager(Of TDownloadApi))
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  id: TryGetDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}@)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>)
  type: Method
  source:
    id: TryGetDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 322
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a download manager instance\n"
  example: []
  syntax:
    content: >-
      public static bool TryGetDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry, out IApizrDownloadManager<TDownloadApi, TDownloadParams> manager)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry, ByRef manager As IApizrDownloadManager(Of TDownloadApi, TDownloadParams)) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, ByRef IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, ByRef Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
  name.vb: TryGetDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry, ByRef IApizrDownloadManager(Of TDownloadApi, TDownloadParams))
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  id: TryGetTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0}@)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: TryGetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>)
  type: Method
  source:
    id: TryGetTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 332
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a transfer manager instance\n"
  example: []
  syntax:
    content: >-
      public static bool TryGetTransferManagerFor<TTransferApi>(this IApizrEnumerableRegistry registry, out IApizrTransferManager<TTransferApi> manager)
          where TTransferApi : ITransferApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetTransferManagerFor(Of TTransferApi As ITransferApi)(registry As IApizrEnumerableRegistry, ByRef manager As IApizrTransferManager(Of TTransferApi)) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry, ByRef IApizrTransferManager(Of TTransferApi))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, ByRef Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi))
  name.vb: TryGetTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry, ByRef IApizrTransferManager(Of TTransferApi))
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  id: TryGetTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry,Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}@)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi, TDownloadParams>)
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry, out IApizrTransferManager<TTransferApi, TDownloadParams>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry, out Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>)
  type: Method
  source:
    id: TryGetTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 343
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nGet a transfer manager instance\n"
  example: []
  syntax:
    content: >-
      public static bool TryGetTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrEnumerableRegistry registry, out IApizrTransferManager<TTransferApi, TDownloadParams> manager)
          where TTransferApi : ITransferApi<TDownloadParams>
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    - id: manager
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry, ByRef manager As IApizrTransferManager(Of TTransferApi, TDownloadParams)) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry, ByRef IApizrTransferManager(Of TTransferApi, TDownloadParams))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry, ByRef Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams))
  name.vb: TryGetTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry, ByRef IApizrTransferManager(Of TTransferApi, TDownloadParams))
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsUploadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsUploadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 357
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for the default <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">IUploadApi</code> api type\n"
  example: []
  syntax:
    content: public static bool ContainsUploadManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsUploadManager(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsUploadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsUploadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 367
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TUploadApi</code> api type\n"
  example: []
  syntax:
    content: >-
      public static bool ContainsUploadManagerFor<TUploadApi>(this IApizrEnumerableRegistry registry)
          where TUploadApi : IUploadApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsUploadManagerFor(Of TUploadApi As IUploadApi)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsUploadManagerFor(Of TUploadApi)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsDownloadManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsDownloadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 377
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for the default <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">IDownloadApi</code> api type\n"
  example: []
  syntax:
    content: public static bool ContainsDownloadManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsDownloadManager(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 387
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TDownloadApi</code> api type\n"
  example: []
  syntax:
    content: >-
      public static bool ContainsDownloadManagerFor<TDownloadApi>(this IApizrEnumerableRegistry registry)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsDownloadManagerFor(Of TDownloadApi As IDownloadApi)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 398
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TDownloadApi</code> api type\n"
  example: []
  syntax:
    content: >-
      public static bool ContainsDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrEnumerableRegistry registry)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManager(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsTransferManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 407
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for the default <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">ITransferApi</code> api type\n"
  example: []
  syntax:
    content: public static bool ContainsTransferManager(this IApizrEnumerableRegistry registry)
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsTransferManager(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManagerFor``1(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 417
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTransferApi</code> api type\n"
  example: []
  syntax:
    content: >-
      public static bool ContainsTransferManagerFor<TTransferApi>(this IApizrEnumerableRegistry registry)
          where TTransferApi : ITransferApi
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsTransferManagerFor(Of TTransferApi As ITransferApi)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerFor(Of TTransferApi)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  id: ContainsTransferManagerFor``2(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: ContainsTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>(IApizrEnumerableRegistry)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  type: Method
  source:
    id: ContainsTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 428
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCheck if registry contains a manager for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TTransferApi</code> api type\n"
  example: []
  syntax:
    content: >-
      public static bool ContainsTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrEnumerableRegistry registry)
          where TTransferApi : ITransferApi<TDownloadParams>
    parameters:
    - id: registry
      type: Apizr.Configuring.Registry.IApizrEnumerableRegistry
      description: The registry to get the manager from
    typeParameters:
    - id: TTransferApi
      description: The Transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams), TDownloadParams)(registry As IApizrEnumerableRegistry) As Boolean
  overload: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrEnumerableRegistry)
  name.vb: ContainsTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrEnumerableRegistry)
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  id: WithProgress``1(``0)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithProgress<T>(T)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<T>(T)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<T>(T)
  type: Method
  source:
    id: WithProgress
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 448
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nEnables transfer progress reporting with Apizr\n(you should provide a progress callback or reporter at request time)\n"
  example: []
  syntax:
    content: >-
      public static T WithProgress<T>(this T builder)
          where T : IApizrGlobalSharedOptionsBuilderBase
    parameters:
    - id: builder
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithProgress(Of T As IApizrGlobalSharedOptionsBuilderBase)(builder As T) As T
  overload: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of T)(T)
  name.vb: WithProgress(Of T)(T)
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  id: WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithProgress<T>(T, Action<ApizrProgressEventArgs>)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<T>(T, Action<ApizrProgressEventArgs>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<T>(T, System.Action<Apizr.Progressing.ApizrProgressEventArgs>)
  type: Method
  source:
    id: WithProgress
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 465
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nTells Apizr to report any transfer progress\n"
  example: []
  syntax:
    content: >-
      public static T WithProgress<T>(this T builder, Action<ApizrProgressEventArgs> onProgress)
          where T : IApizrGlobalSharedOptionsBuilderBase
    parameters:
    - id: builder
      type: '{T}'
      description: ''
    - id: onProgress
      type: System.Action{Apizr.Progressing.ApizrProgressEventArgs}
      description: The action called back on any progress
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithProgress(Of T As IApizrGlobalSharedOptionsBuilderBase)(builder As T, onProgress As Action(Of ApizrProgressEventArgs)) As T
  overload: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of T)(T, Action(Of ApizrProgressEventArgs))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of T)(T, System.Action(Of Apizr.Progressing.ApizrProgressEventArgs))
  name.vb: WithProgress(Of T)(T, Action(Of ApizrProgressEventArgs))
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  id: WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithProgress<T>(T, IApizrProgress)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<T>(T, IApizrProgress)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<T>(T, Apizr.Progressing.IApizrProgress)
  type: Method
  source:
    id: WithProgress
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 476
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nTells Apizr to report any transfer progress\n"
  example: []
  syntax:
    content: >-
      public static T WithProgress<T>(this T builder, IApizrProgress progress)
          where T : IApizrGlobalSharedOptionsBuilderBase
    parameters:
    - id: builder
      type: '{T}'
      description: ''
    - id: progress
      type: Apizr.Progressing.IApizrProgress
      description: The progress reporter
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithProgress(Of T As IApizrGlobalSharedOptionsBuilderBase)(builder As T, progress As IApizrProgress) As T
  overload: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of T)(T, IApizrProgress)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of T)(T, Apizr.Progressing.IApizrProgress)
  name.vb: WithProgress(Of T)(T, IApizrProgress)
references:
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
  name: CreateUploadManager
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
- uid: Apizr.IApizrBuilder
  commentId: T:Apizr.IApizrBuilder
  parent: Apizr
  name: IApizrBuilder
  nameWithType: IApizrBuilder
  fullName: Apizr.IApizrBuilder
- uid: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrManagerOptionsBuilder>
  nameWithType: Action<IApizrManagerOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: Action(Of IApizrManagerOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: Action(Of IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`1
  name: IApizrUploadManager<IUploadApi>
  nameWithType: IApizrUploadManager<IUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi>
  nameWithType.vb: IApizrUploadManager(Of IUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi)
  name.vb: IApizrUploadManager(Of IUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Transferring.Requesting.IUploadApi
    name: IUploadApi
    nameWithType: IUploadApi
    fullName: Apizr.Transferring.Requesting.IUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Transferring.Requesting.IUploadApi
    name: IUploadApi
    nameWithType: IUploadApi
    fullName: Apizr.Transferring.Requesting.IUploadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`1
  name: IApizrUploadManager<TUploadApi>
  nameWithType: IApizrUploadManager<TUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi)
  name.vb: IApizrUploadManager(Of TUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing
  commentId: N:Apizr.Transferring.Managing
  name: Apizr.Transferring.Managing
  nameWithType: Apizr.Transferring.Managing
  fullName: Apizr.Transferring.Managing
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor
  name: CreateUploadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`1
  name: IApizrUploadManager<TUploadApi>
  nameWithType: IApizrUploadManager<TUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi)
  name.vb: IApizrUploadManager(Of TUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
  name: CreateDownloadManager
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`1
  name: IApizrDownloadManager<IDownloadApi>
  nameWithType: IApizrDownloadManager<IDownloadApi>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi>
  nameWithType.vb: IApizrDownloadManager(Of IDownloadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi)
  name.vb: IApizrDownloadManager(Of IDownloadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Transferring.Requesting.IDownloadApi
    name: IDownloadApi
    nameWithType: IDownloadApi
    fullName: Apizr.Transferring.Requesting.IDownloadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Transferring.Requesting.IDownloadApi
    name: IDownloadApi
    nameWithType: IDownloadApi
    fullName: Apizr.Transferring.Requesting.IDownloadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`1
  name: IApizrDownloadManager<TDownloadApi>
  nameWithType: IApizrDownloadManager<TDownloadApi>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi)
  name.vb: IApizrDownloadManager(Of TDownloadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor
  name: CreateDownloadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`1
  name: IApizrDownloadManager<TDownloadApi>
  nameWithType: IApizrDownloadManager<TDownloadApi>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi)
  name.vb: IApizrDownloadManager(Of TDownloadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
  name: CreateTransferManager
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
- uid: Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{Apizr.Transferring.Requesting.ITransferApi}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`1
  name: IApizrTransferManager<ITransferApi>
  nameWithType: IApizrTransferManager<ITransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<Apizr.Transferring.Requesting.ITransferApi>
  nameWithType.vb: IApizrTransferManager(Of ITransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of Apizr.Transferring.Requesting.ITransferApi)
  name.vb: IApizrTransferManager(Of ITransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Transferring.Requesting.ITransferApi
    name: ITransferApi
    nameWithType: ITransferApi
    fullName: Apizr.Transferring.Requesting.ITransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Transferring.Requesting.ITransferApi
    name: ITransferApi
    nameWithType: ITransferApi
    fullName: Apizr.Transferring.Requesting.ITransferApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`1
  name: IApizrTransferManager<TTransferApi>
  nameWithType: IApizrTransferManager<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi)
  name.vb: IApizrTransferManager(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor
  name: CreateTransferManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`1
  name: IApizrTransferManager<TTransferApi>
  nameWithType: IApizrTransferManager<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi)
  name.vb: IApizrTransferManager(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`2
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`2
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager
  name: AddUploadManager
  nameWithType: FileTransferOptionsBuilderExtensions.AddUploadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilder
  commentId: T:Apizr.Configuring.Registry.IApizrRegistryBuilder
  parent: Apizr.Configuring.Registry
  name: IApizrRegistryBuilder
  nameWithType: IApizrRegistryBuilder
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilder
- uid: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrProperOptionsBuilder>
  nameWithType: Action<IApizrProperOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>
  nameWithType.vb: Action(Of IApizrProperOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder)
  name.vb: Action(Of IApizrProperOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: System.Action{Apizr.Configuring.Registry.IApizrUploadRegistryBuilder}
  commentId: T:System.Action{Apizr.Configuring.Registry.IApizrUploadRegistryBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrUploadRegistryBuilder>
  nameWithType: Action<IApizrUploadRegistryBuilder>
  fullName: System.Action<Apizr.Configuring.Registry.IApizrUploadRegistryBuilder>
  nameWithType.vb: Action(Of IApizrUploadRegistryBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Registry.IApizrUploadRegistryBuilder)
  name.vb: Action(Of IApizrUploadRegistryBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Registry.IApizrUploadRegistryBuilder
    name: IApizrUploadRegistryBuilder
    nameWithType: IApizrUploadRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrUploadRegistryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Registry.IApizrUploadRegistryBuilder
    name: IApizrUploadRegistryBuilder
    nameWithType: IApizrUploadRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrUploadRegistryBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Common.IApizrCommonOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrCommonOptionsBuilder>
  nameWithType: Action<IApizrCommonOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Common.IApizrCommonOptionsBuilder>
  nameWithType.vb: Action(Of IApizrCommonOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Common.IApizrCommonOptionsBuilder)
  name.vb: Action(Of IApizrCommonOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
    name: IApizrCommonOptionsBuilder
    nameWithType: IApizrCommonOptionsBuilder
    fullName: Apizr.Configuring.Common.IApizrCommonOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager
  name: AddDownloadManager
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager
- uid: System.Action{Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder}
  commentId: T:System.Action{Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrDownloadRegistryBuilder>
  nameWithType: Action<IApizrDownloadRegistryBuilder>
  fullName: System.Action<Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder>
  nameWithType.vb: Action(Of IApizrDownloadRegistryBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder)
  name.vb: Action(Of IApizrDownloadRegistryBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder
    name: IApizrDownloadRegistryBuilder
    nameWithType: IApizrDownloadRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder
    name: IApizrDownloadRegistryBuilder
    nameWithType: IApizrDownloadRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrDownloadRegistryBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager
  name: AddTransferManager
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager
- uid: System.Action{Apizr.Configuring.Registry.IApizrTransferRegistryBuilder}
  commentId: T:System.Action{Apizr.Configuring.Registry.IApizrTransferRegistryBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrTransferRegistryBuilder>
  nameWithType: Action<IApizrTransferRegistryBuilder>
  fullName: System.Action<Apizr.Configuring.Registry.IApizrTransferRegistryBuilder>
  nameWithType.vb: Action(Of IApizrTransferRegistryBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Registry.IApizrTransferRegistryBuilder)
  name.vb: Action(Of IApizrTransferRegistryBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Registry.IApizrTransferRegistryBuilder
    name: IApizrTransferRegistryBuilder
    nameWithType: IApizrTransferRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrTransferRegistryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Registry.IApizrTransferRegistryBuilder
    name: IApizrTransferRegistryBuilder
    nameWithType: IApizrTransferRegistryBuilder
    fullName: Apizr.Configuring.Registry.IApizrTransferRegistryBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor
  name: GetUploadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.GetUploadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetUploadManagerFor
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistry
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistry
  parent: Apizr.Configuring.Registry
  name: IApizrEnumerableRegistry
  nameWithType: IApizrEnumerableRegistry
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistry
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor
  name: GetDownloadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.GetDownloadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetDownloadManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor
  name: GetTransferManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.GetTransferManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.GetTransferManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor
  name: TryGetUploadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetUploadManagerFor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor
  name: TryGetDownloadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetDownloadManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor
  name: TryGetTransferManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.TryGetTransferManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
  name: ContainsUploadManager
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManager
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor
  name: ContainsUploadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsUploadManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  name: ContainsDownloadManager
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManager
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor
  name: ContainsDownloadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsDownloadManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
  name: ContainsTransferManager
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManager
- uid: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor
  name: ContainsTransferManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.ContainsTransferManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.WithProgress
  name: WithProgress
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Action{Apizr.Progressing.ApizrProgressEventArgs}
  commentId: T:System.Action{Apizr.Progressing.ApizrProgressEventArgs}
  parent: System
  definition: System.Action`1
  name: Action<ApizrProgressEventArgs>
  nameWithType: Action<ApizrProgressEventArgs>
  fullName: System.Action<Apizr.Progressing.ApizrProgressEventArgs>
  nameWithType.vb: Action(Of ApizrProgressEventArgs)
  fullName.vb: System.Action(Of Apizr.Progressing.ApizrProgressEventArgs)
  name.vb: Action(Of ApizrProgressEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Progressing.IApizrProgress
  commentId: T:Apizr.Progressing.IApizrProgress
  parent: Apizr.Progressing
  name: IApizrProgress
  nameWithType: IApizrProgress
  fullName: Apizr.Progressing.IApizrProgress
- uid: Apizr.Progressing
  commentId: N:Apizr.Progressing
  name: Apizr.Progressing
  nameWithType: Apizr.Progressing
  fullName: Apizr.Progressing
