### YamlMime:ManagedReference
items:
- uid: Apizr.FileTransferOptionsBuilderExtensions
  commentId: T:Apizr.FileTransferOptionsBuilderExtensions
  id: FileTransferOptionsBuilderExtensions
  parent: Apizr
  children:
  - Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  - Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath``1(``0,System.String)
  - Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  - Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  - Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  langs:
  - csharp
  - vb
  name: FileTransferOptionsBuilderExtensions
  nameWithType: FileTransferOptionsBuilderExtensions
  fullName: Apizr.FileTransferOptionsBuilderExtensions
  type: Class
  source:
    id: FileTransferOptionsBuilderExtensions
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nFile transfer builder extensions\n"
  example: []
  syntax:
    content: public static class FileTransferOptionsBuilderExtensions
    content.vb: Public Module FileTransferOptionsBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateUploadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateUploadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateUploadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 33
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate an upload manager for IUploadApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IApizrUploadManager CreateUploadManager(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateUploadManager(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder)) As IApizrUploadManager
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateUploadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateUploadManagerFor<TUploadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor<TUploadApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateUploadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 45
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrUploadManager<TUploadApi> CreateUploadManagerFor<TUploadApi>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateUploadManagerFor(Of TUploadApi As IUploadApi)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrUploadManager(Of TUploadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor(Of TUploadApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateUploadManagerFor(Of TUploadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateDownloadManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateDownloadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateDownloadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 57
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a download manager for IDownloadApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IApizrDownloadManager CreateDownloadManager(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDownloadManager(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrDownloadManager
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateDownloadManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateDownloadManagerFor<TDownloadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 69
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a download manager for the provided download api derived from IDownloadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrDownloadManager<TDownloadApi> CreateDownloadManagerFor<TDownloadApi>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDownloadManagerFor(Of TDownloadApi As IDownloadApi)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrDownloadManager(Of TDownloadApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateDownloadManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 83
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a download manager for the provided download api derived from IDownloadApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrDownloadManager<TDownloadApi, TDownloadParams> CreateDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateTransferManager(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateTransferManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateTransferManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 96
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a transfer manager for ITransferApi (you must at least provide a base url thanks to the options builder)\n"
  example: []
  syntax:
    content: public static IApizrTransferManager CreateTransferManager(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateTransferManager(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrTransferManager
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManager(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateTransferManagerFor``1(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateTransferManagerFor<TTransferApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 111
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a transfer manager for the provided transfer api derived from ITransferApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrTransferManager<TTransferApi> CreateTransferManagerFor<TTransferApi>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateTransferManagerFor(Of TTransferApi As ITransferApi)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrTransferManager(Of TTransferApi)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  id: CreateTransferManagerFor``2(Apizr.IApizrBuilder,System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: CreateTransferManagerFor<TTransferApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(IApizrBuilder, Action<IApizrManagerOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.IApizrBuilder, System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>)
  type: Method
  source:
    id: CreateTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 128
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nCreate a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrTransferManager<TTransferApi, TDownloadParams> CreateTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrBuilder builder, Action<IApizrManagerOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi<TDownloadParams>
    parameters:
    - id: builder
      type: Apizr.IApizrBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams), TDownloadParams)(builder As IApizrBuilder, optionsBuilder As Action(Of IApizrManagerOptionsBuilder) = Nothing) As IApizrTransferManager(Of TTransferApi, TDownloadParams)
  overload: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.IApizrBuilder, System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder))
  name.vb: CreateTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrBuilder, Action(Of IApizrManagerOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddUploadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddUploadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 148
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for IUploadApi (you must at least provide a base url)\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddUploadManager(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManager(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder)) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddUploadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddUploadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddUploadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddUploadManagerFor<TUploadApi>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddUploadManagerFor<TUploadApi>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor<TUploadApi>(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddUploadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 159
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd an upload manager for the provided upload api derived from IUploadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrRegistryBuilder AddUploadManagerFor<TUploadApi>(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TUploadApi
      description: The upload api interface to manage
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddUploadManagerFor(Of TUploadApi As IUploadApi)(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddUploadManagerFor(Of TUploadApi)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor(Of TUploadApi)(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddUploadManagerFor(Of TUploadApi)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddDownloadManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 187
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for IDownloadApi (you must at least provide a base url)\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddDownloadManager(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadManager(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder)) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddDownloadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddDownloadManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddDownloadManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadManagerFor<TDownloadApi>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManagerFor<TDownloadApi>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor<TDownloadApi>(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 200
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrRegistryBuilder AddDownloadManagerFor<TDownloadApi>(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadManagerFor(Of TDownloadApi As IDownloadApi)(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddDownloadManagerFor(Of TDownloadApi)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor(Of TDownloadApi)(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddDownloadManagerFor(Of TDownloadApi)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddDownloadManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManagerFor<TDownloadApi, TDownloadParams>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor<TDownloadApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddDownloadManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 233
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a download manager for the provided download api derived from IDownloadApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrRegistryBuilder AddDownloadManagerFor<TDownloadApi, TDownloadParams>(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TDownloadApi
      description: The download api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDownloadManagerFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor(Of TDownloadApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddDownloadManagerFor(Of TDownloadApi, TDownloadParams)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManager(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddTransferManager
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 255
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for ITransferApi (you must at least provide a base url)\n"
  example: []
  syntax:
    content: public static IApizrRegistryBuilder AddTransferManager(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder)
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManager(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder)) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddTransferManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddTransferManager(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddTransferManagerFor``1(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManagerFor<TTransferApi>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi>(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 268
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi\n"
  example: []
  syntax:
    content: >-
      public static IApizrRegistryBuilder AddTransferManagerFor<TTransferApi>(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManagerFor(Of TTransferApi As ITransferApi)(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi)(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddTransferManagerFor(Of TTransferApi)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  id: AddTransferManagerFor``2(Apizr.Configuring.Registry.IApizrRegistryBuilder,System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddTransferManagerFor<TTransferApi, TDownloadParams>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi, TDownloadParams>(IApizrRegistryBuilder, Action<IApizrProperOptionsBuilder>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor<TTransferApi, TDownloadParams>(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>)
  type: Method
  source:
    id: AddTransferManagerFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 333
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nAdd a transfer manager for the provided transfer api derived from ITransferApi{TDownloadParams}\n"
  example: []
  syntax:
    content: >-
      public static IApizrRegistryBuilder AddTransferManagerFor<TTransferApi, TDownloadParams>(this IApizrRegistryBuilder builder, Action<IApizrProperOptionsBuilder> optionsBuilder = null)
          where TTransferApi : ITransferApi<TDownloadParams>
    parameters:
    - id: builder
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: The builder to create the manager from
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
      description: The builder defining some options
    typeParameters:
    - id: TTransferApi
      description: The transfer api interface to manage
    - id: TDownloadParams
      description: The download query parameters type
    return:
      type: Apizr.Configuring.Registry.IApizrRegistryBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddTransferManagerFor(Of TTransferApi As ITransferApi(Of TDownloadParams), TDownloadParams)(builder As IApizrRegistryBuilder, optionsBuilder As Action(Of IApizrProperOptionsBuilder) = Nothing) As IApizrRegistryBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor(Of TTransferApi, TDownloadParams)(Apizr.Configuring.Registry.IApizrRegistryBuilder, System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder))
  name.vb: AddTransferManagerFor(Of TTransferApi, TDownloadParams)(IApizrRegistryBuilder, Action(Of IApizrProperOptionsBuilder))
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0)
  id: WithProgress``1(``0)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithProgress<TBuilder>(TBuilder)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder)
  type: Method
  source:
    id: WithProgress
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 374
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nEnables transfer progress reporting with Apizr\n(you should provide a progress callback or reporter at request time)\n"
  example: []
  syntax:
    content: >-
      public static TBuilder WithProgress<TBuilder>(this TBuilder builder)
          where TBuilder : IApizrGlobalSharedOptionsBuilderBase
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithProgress(Of TBuilder As IApizrGlobalSharedOptionsBuilderBase)(builder As TBuilder) As TBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder)
  name.vb: WithProgress(Of TBuilder)(TBuilder)
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  id: WithProgress``1(``0,System.Action{Apizr.Progressing.ApizrProgressEventArgs})
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithProgress<TBuilder>(TBuilder, Action<ApizrProgressEventArgs>)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, Action<ApizrProgressEventArgs>)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, System.Action<Apizr.Progressing.ApizrProgressEventArgs>)
  type: Method
  source:
    id: WithProgress
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 391
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nTells Apizr to report any transfer progress\n"
  example: []
  syntax:
    content: >-
      public static TBuilder WithProgress<TBuilder>(this TBuilder builder, Action<ApizrProgressEventArgs> onProgress)
          where TBuilder : IApizrGlobalSharedOptionsBuilderBase
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: onProgress
      type: System.Action{Apizr.Progressing.ApizrProgressEventArgs}
      description: The action called back on any progress
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithProgress(Of TBuilder As IApizrGlobalSharedOptionsBuilderBase)(builder As TBuilder, onProgress As Action(Of ApizrProgressEventArgs)) As TBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, Action(Of ApizrProgressEventArgs))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, System.Action(Of Apizr.Progressing.ApizrProgressEventArgs))
  name.vb: WithProgress(Of TBuilder)(TBuilder, Action(Of ApizrProgressEventArgs))
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  id: WithProgress``1(``0,Apizr.Progressing.IApizrProgress)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithProgress<TBuilder>(TBuilder, IApizrProgress)
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, IApizrProgress)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress<TBuilder>(TBuilder, Apizr.Progressing.IApizrProgress)
  type: Method
  source:
    id: WithProgress
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 402
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nTells Apizr to report any transfer progress\n"
  example: []
  syntax:
    content: >-
      public static TBuilder WithProgress<TBuilder>(this TBuilder builder, IApizrProgress progress)
          where TBuilder : IApizrGlobalSharedOptionsBuilderBase
    parameters:
    - id: builder
      type: '{TBuilder}'
      description: ''
    - id: progress
      type: Apizr.Progressing.IApizrProgress
      description: The progress reporter
    typeParameters:
    - id: TBuilder
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithProgress(Of TBuilder As IApizrGlobalSharedOptionsBuilderBase)(builder As TBuilder, progress As IApizrProgress) As TBuilder
  overload: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, IApizrProgress)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithProgress(Of TBuilder)(TBuilder, Apizr.Progressing.IApizrProgress)
  name.vb: WithProgress(Of TBuilder)(TBuilder, IApizrProgress)
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath``1(``0,System.String)
  commentId: M:Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath``1(``0,System.String)
  id: WithDynamicPath``1(``0,System.String)
  isExtensionMethod: true
  parent: Apizr.FileTransferOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithDynamicPath<T>(T, String)
  nameWithType: FileTransferOptionsBuilderExtensions.WithDynamicPath<T>(T, String)
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath<T>(T, System.String)
  type: Method
  source:
    id: WithDynamicPath
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer\FileTransferOptionsBuilderExtensions.cs
    startLine: 426
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr
  summary: "\nTells Apizr to set the ending of the request uri with the provided path\n"
  example: []
  syntax:
    content: >-
      public static T WithDynamicPath<T>(this T builder, string dynamicPath)
          where T : IApizrRequestOptionsBuilderBase
    parameters:
    - id: builder
      type: '{T}'
      description: ''
    - id: dynamicPath
      type: System.String
      description: The path ending the request uri
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithDynamicPath(Of T As IApizrRequestOptionsBuilderBase)(builder As T, dynamicPath As String) As T
  overload: Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath*
  nameWithType.vb: FileTransferOptionsBuilderExtensions.WithDynamicPath(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath(Of T)(T, System.String)
  name.vb: WithDynamicPath(Of T)(T, String)
references:
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
  name: CreateUploadManager
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManager
- uid: Apizr.IApizrBuilder
  commentId: T:Apizr.IApizrBuilder
  parent: Apizr
  name: IApizrBuilder
  nameWithType: IApizrBuilder
  fullName: Apizr.IApizrBuilder
- uid: System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Manager.IApizrManagerOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrManagerOptionsBuilder>
  nameWithType: Action<IApizrManagerOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Manager.IApizrManagerOptionsBuilder>
  nameWithType.vb: Action(Of IApizrManagerOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Manager.IApizrManagerOptionsBuilder)
  name.vb: Action(Of IApizrManagerOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
    name: IApizrManagerOptionsBuilder
    nameWithType: IApizrManagerOptionsBuilder
    fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager
  parent: Apizr.Transferring.Managing
  name: IApizrUploadManager
  nameWithType: IApizrUploadManager
  fullName: Apizr.Transferring.Managing.IApizrUploadManager
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing
  commentId: N:Apizr.Transferring.Managing
  name: Apizr.Transferring.Managing
  nameWithType: Apizr.Transferring.Managing
  fullName: Apizr.Transferring.Managing
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor
  name: CreateUploadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.CreateUploadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateUploadManagerFor
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`1
  name: IApizrUploadManager<TUploadApi>
  nameWithType: IApizrUploadManager<TUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi)
  name.vb: IApizrUploadManager(Of TUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`1
  name: IApizrUploadManager<TUploadApi>
  nameWithType: IApizrUploadManager<TUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi)
  name.vb: IApizrUploadManager(Of TUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
  name: CreateDownloadManager
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManager
- uid: Apizr.Transferring.Managing.IApizrDownloadManager
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager
  parent: Apizr.Transferring.Managing
  name: IApizrDownloadManager
  nameWithType: IApizrDownloadManager
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor
  name: CreateDownloadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateDownloadManagerFor
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`1
  name: IApizrDownloadManager<TDownloadApi>
  nameWithType: IApizrDownloadManager<TDownloadApi>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi)
  name.vb: IApizrDownloadManager(Of TDownloadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`1
  name: IApizrDownloadManager<TDownloadApi>
  nameWithType: IApizrDownloadManager<TDownloadApi>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi)
  name.vb: IApizrDownloadManager(Of TDownloadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`1
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TDownloadApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
  name: CreateTransferManager
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManager
- uid: Apizr.Transferring.Managing.IApizrTransferManager
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager
  parent: Apizr.Transferring.Managing
  name: IApizrTransferManager
  nameWithType: IApizrTransferManager
  fullName: Apizr.Transferring.Managing.IApizrTransferManager
- uid: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor
  name: CreateTransferManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.CreateTransferManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.CreateTransferManagerFor
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`1
  name: IApizrTransferManager<TTransferApi>
  nameWithType: IApizrTransferManager<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi)
  name.vb: IApizrTransferManager(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`1
  name: IApizrTransferManager<TTransferApi>
  nameWithType: IApizrTransferManager<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi)
  name.vb: IApizrTransferManager(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`1
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`2
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`2
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager
  name: AddUploadManager
  nameWithType: FileTransferOptionsBuilderExtensions.AddUploadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManager
- uid: Apizr.Configuring.Registry.IApizrRegistryBuilder
  commentId: T:Apizr.Configuring.Registry.IApizrRegistryBuilder
  parent: Apizr.Configuring.Registry
  name: IApizrRegistryBuilder
  nameWithType: IApizrRegistryBuilder
  fullName: Apizr.Configuring.Registry.IApizrRegistryBuilder
- uid: System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Proper.IApizrProperOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrProperOptionsBuilder>
  nameWithType: Action<IApizrProperOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Proper.IApizrProperOptionsBuilder>
  nameWithType.vb: Action(Of IApizrProperOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Proper.IApizrProperOptionsBuilder)
  name.vb: Action(Of IApizrProperOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
    name: IApizrProperOptionsBuilder
    nameWithType: IApizrProperOptionsBuilder
    fullName: Apizr.Configuring.Proper.IApizrProperOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor
  name: AddUploadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.AddUploadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddUploadManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager
  name: AddDownloadManager
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManager
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor
  name: AddDownloadManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.AddDownloadManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddDownloadManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager
  name: AddTransferManager
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManager
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManager
- uid: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor
  name: AddTransferManagerFor
  nameWithType: FileTransferOptionsBuilderExtensions.AddTransferManagerFor
  fullName: Apizr.FileTransferOptionsBuilderExtensions.AddTransferManagerFor
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithProgress*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.WithProgress
  name: WithProgress
  nameWithType: FileTransferOptionsBuilderExtensions.WithProgress
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithProgress
- uid: '{TBuilder}'
  commentId: '!:TBuilder'
  definition: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: System.Action{Apizr.Progressing.ApizrProgressEventArgs}
  commentId: T:System.Action{Apizr.Progressing.ApizrProgressEventArgs}
  parent: System
  definition: System.Action`1
  name: Action<ApizrProgressEventArgs>
  nameWithType: Action<ApizrProgressEventArgs>
  fullName: System.Action<Apizr.Progressing.ApizrProgressEventArgs>
  nameWithType.vb: Action(Of ApizrProgressEventArgs)
  fullName.vb: System.Action(Of Apizr.Progressing.ApizrProgressEventArgs)
  name.vb: Action(Of ApizrProgressEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Progressing.ApizrProgressEventArgs
    name: ApizrProgressEventArgs
    nameWithType: ApizrProgressEventArgs
    fullName: Apizr.Progressing.ApizrProgressEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Progressing.IApizrProgress
  commentId: T:Apizr.Progressing.IApizrProgress
  parent: Apizr.Progressing
  name: IApizrProgress
  nameWithType: IApizrProgress
  fullName: Apizr.Progressing.IApizrProgress
- uid: Apizr.Progressing
  commentId: N:Apizr.Progressing
  name: Apizr.Progressing
  nameWithType: Apizr.Progressing
  fullName: Apizr.Progressing
- uid: Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath*
  commentId: Overload:Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath
  name: WithDynamicPath
  nameWithType: FileTransferOptionsBuilderExtensions.WithDynamicPath
  fullName: Apizr.FileTransferOptionsBuilderExtensions.WithDynamicPath
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: T
  name: T
  nameWithType: T
  fullName: T
