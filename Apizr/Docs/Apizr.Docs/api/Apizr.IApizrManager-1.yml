### YamlMime:ManagedReference
items:
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  id: IApizrManager`1
  parent: Apizr
  children:
  - Apizr.IApizrManager`1.Api
  - Apizr.IApizrManager`1.ClearCacheAsync(System.Threading.CancellationToken)
  - Apizr.IApizrManager`1.ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}})
  - Apizr.IApizrManager`1.ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,`0,System.Threading.Tasks.Task{``0}}},System.Threading.CancellationToken)
  - Apizr.IApizrManager`1.ExecuteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.IApizrManager`1.Options
  langs:
  - csharp
  - vb
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  type: Interface
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: IApizrManager
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 19
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nThe manager encapsulating <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task\n"
  example: []
  syntax:
    content: 'public interface IApizrManager<TWebApi> : IApizrManager'
    typeParameters:
    - id: TWebApi
      description: The web api interface to manage
    content.vb: >-
      Public Interface IApizrManager(Of TWebApi)
          Inherits IApizrManager
  nameWithType.vb: IApizrManager(Of TWebApi)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
- uid: Apizr.IApizrManager`1.Api
  commentId: P:Apizr.IApizrManager`1.Api
  id: Api
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: Api
  nameWithType: IApizrManager<TWebApi>.Api
  fullName: Apizr.IApizrManager<TWebApi>.Api
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: Api
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 24
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nOriginal Refit Api without any Apizr management. You should use ExecuteAsync instead to get all the Apizr goodness :)\n"
  example: []
  syntax:
    content: TWebApi Api { get; }
    parameters: []
    return:
      type: '{TWebApi}'
    content.vb: ReadOnly Property Api As TWebApi
  overload: Apizr.IApizrManager`1.Api*
  nameWithType.vb: IApizrManager(Of TWebApi).Api
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Apizr.IApizrManager(Of TWebApi).Api
- uid: Apizr.IApizrManager`1.Options
  commentId: P:Apizr.IApizrManager`1.Options
  id: Options
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: IApizrManager<TWebApi>.Options
  fullName: Apizr.IApizrManager<TWebApi>.Options
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: Options
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 29
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nBasic Apizr options\n"
  example: []
  syntax:
    content: IApizrManagerOptionsBase Options { get; }
    parameters: []
    return:
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    content.vb: ReadOnly Property Options As IApizrManagerOptionsBase
  overload: Apizr.IApizrManager`1.Options*
  nameWithType.vb: IApizrManager(Of TWebApi).Options
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Apizr.IApizrManager(Of TWebApi).Options
- uid: Apizr.IApizrManager`1.ExecuteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync(Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 41
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task\n"
  example: []
  syntax:
    content: Task ExecuteAsync(Expression<Func<TWebApi, Task>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function ExecuteAsync(executeApiMethod As Expression(Of Func(Of TWebApi, Task)), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync(Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 51
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task\n"
  example: []
  syntax:
    content: Task ExecuteAsync(Expression<Func<IApizrRequestOptions, TWebApi, Task>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function ExecuteAsync(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 64
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task\n"
  example: []
  syntax:
    content: Task ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function ExecuteAsync(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task)), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 78
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task\n"
  example: []
  syntax:
    content: Task ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function ExecuteAsync(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 94
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task\n"
  example: []
  syntax:
    content: Task<TApiData> ExecuteAsync<TApiData>(Expression<Func<TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiData
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task result
    return:
      type: System.Threading.Tasks.Task{{TApiData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 105
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task\n"
  example: []
  syntax:
    content: Task<TApiData> ExecuteAsync<TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiData
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task result
    return:
      type: System.Threading.Tasks.Task{{TApiData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 117
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 129
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 142
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> ExecuteAsync<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 156
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> ExecuteAsync<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 172
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelResultData> ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{{TModelResultData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(executeApiMethod As Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelResultData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.IApizrManager`1.ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: ExecuteAsync``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 188
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nExecute a managed <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>&apos;s task returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelResultData> ExecuteAsync<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelResultData
      description: The mapped model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The mapped api request data type
    - id: TModelRequestData
      description: The model request data type
    return:
      type: System.Threading.Tasks.Task{{TModelResultData}}
      description: ''
    content.vb: Function ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelResultData)
  overload: Apizr.IApizrManager`1.ExecuteAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: ExecuteAsync(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.IApizrManager`1.ClearCacheAsync(System.Threading.CancellationToken)
  commentId: M:Apizr.IApizrManager`1.ClearCacheAsync(System.Threading.CancellationToken)
  id: ClearCacheAsync(System.Threading.CancellationToken)
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ClearCacheAsync(CancellationToken)
  nameWithType: IApizrManager<TWebApi>.ClearCacheAsync(CancellationToken)
  fullName: Apizr.IApizrManager<TWebApi>.ClearCacheAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearCacheAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 204
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nClear all cache\n"
  example: []
  syntax:
    content: Task<bool> ClearCacheAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function ClearCacheAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Apizr.IApizrManager`1.ClearCacheAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ClearCacheAsync(CancellationToken)
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ClearCacheAsync(System.Threading.CancellationToken)
- uid: Apizr.IApizrManager`1.ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}})
  commentId: M:Apizr.IApizrManager`1.ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}})
  id: ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}})
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ClearCacheAsync<TResult>(Expression<Func<TWebApi, Task<TResult>>>)
  nameWithType: IApizrManager<TWebApi>.ClearCacheAsync<TResult>(Expression<Func<TWebApi, Task<TResult>>>)
  fullName: Apizr.IApizrManager<TWebApi>.ClearCacheAsync<TResult>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TResult>>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearCacheAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 212
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nClear the cache of a specific request\n"
  example: []
  syntax:
    content: Task<bool> ClearCacheAsync<TResult>(Expression<Func<TWebApi, Task<TResult>>> executeApiMethod)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TResult}}}}
      description: The specific <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task to clear cache for
    typeParameters:
    - id: TResult
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task result
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function ClearCacheAsync(Of TResult)(executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TResult)))) As Task(Of Boolean)
  overload: Apizr.IApizrManager`1.ClearCacheAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ClearCacheAsync(Of TResult)(Expression(Of Func(Of TWebApi, Task(Of TResult))))
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ClearCacheAsync(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TResult))))
  name.vb: ClearCacheAsync(Of TResult)(Expression(Of Func(Of TWebApi, Task(Of TResult))))
- uid: Apizr.IApizrManager`1.ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,`0,System.Threading.Tasks.Task{``0}}},System.Threading.CancellationToken)
  commentId: M:Apizr.IApizrManager`1.ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,`0,System.Threading.Tasks.Task{``0}}},System.Threading.CancellationToken)
  id: ClearCacheAsync``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,`0,System.Threading.Tasks.Task{``0}}},System.Threading.CancellationToken)
  parent: Apizr.IApizrManager`1
  langs:
  - csharp
  - vb
  name: ClearCacheAsync<TResult>(Expression<Func<CancellationToken, TWebApi, Task<TResult>>>, CancellationToken)
  nameWithType: IApizrManager<TWebApi>.ClearCacheAsync<TResult>(Expression<Func<CancellationToken, TWebApi, Task<TResult>>>, CancellationToken)
  fullName: Apizr.IApizrManager<TWebApi>.ClearCacheAsync<TResult>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TResult>>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/IApizrManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearCacheAsync
    path: ../../Src/Apizr/IApizrManager.cs
    startLine: 221
  assemblies:
  - Apizr
  namespace: Apizr
  summary: "\nClear the cache of a specific request\n"
  example: []
  syntax:
    content: Task<bool> ClearCacheAsync<TResult>(Expression<Func<CancellationToken, TWebApi, Task<TResult>>> executeApiMethod, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TResult}}}}
      description: The specific <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task to clear cache for
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    typeParameters:
    - id: TResult
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code>&apos;s task result
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function ClearCacheAsync(Of TResult)(executeApiMethod As Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult))), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Apizr.IApizrManager`1.ClearCacheAsync*
  nameWithType.vb: IApizrManager(Of TWebApi).ClearCacheAsync(Of TResult)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult))), CancellationToken)
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ClearCacheAsync(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TResult))), System.Threading.CancellationToken)
  name.vb: ClearCacheAsync(Of TResult)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult))), CancellationToken)
references:
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.IApizrManager`1.Api*
  commentId: Overload:Apizr.IApizrManager`1.Api
  name: Api
  nameWithType: IApizrManager<TWebApi>.Api
  fullName: Apizr.IApizrManager<TWebApi>.Api
  nameWithType.vb: IApizrManager(Of TWebApi).Api
  fullName.vb: Apizr.IApizrManager(Of TWebApi).Api
- uid: '{TWebApi}'
  commentId: '!:TWebApi'
  definition: TWebApi
  name: TWebApi
  nameWithType: TWebApi
  fullName: TWebApi
- uid: TWebApi
  name: TWebApi
  nameWithType: TWebApi
  fullName: TWebApi
- uid: Apizr.IApizrManager`1.Options*
  commentId: Overload:Apizr.IApizrManager`1.Options
  name: Options
  nameWithType: IApizrManager<TWebApi>.Options
  fullName: Apizr.IApizrManager<TWebApi>.Options
  nameWithType.vb: IApizrManager(Of TWebApi).Options
  fullName.vb: Apizr.IApizrManager(Of TWebApi).Options
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBase
  parent: Apizr.Configuring.Manager
  name: IApizrManagerOptionsBase
  nameWithType: IApizrManagerOptionsBase
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
- uid: Apizr.Configuring.Manager
  commentId: N:Apizr.Configuring.Manager
  name: Apizr.Configuring.Manager
  nameWithType: Apizr.Configuring.Manager
  fullName: Apizr.Configuring.Manager
- uid: Apizr.IApizrManager`1.ExecuteAsync*
  commentId: Overload:Apizr.IApizrManager`1.ExecuteAsync
  name: ExecuteAsync
  nameWithType: IApizrManager<TWebApi>.ExecuteAsync
  fullName: Apizr.IApizrManager<TWebApi>.ExecuteAsync
  nameWithType.vb: IApizrManager(Of TWebApi).ExecuteAsync
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ExecuteAsync
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, Task>>
  nameWithType: Expression<Func<TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, TApiData, Task>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TModelData}'
  commentId: '!:TModelData'
  definition: TModelData
  name: TModelData
  nameWithType: TModelData
  fullName: TModelData
- uid: TModelData
  name: TModelData
  nameWithType: TModelData
  fullName: TModelData
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, Task<TApiData>>>
  nameWithType: Expression<Func<TWebApi, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TApiData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TApiData>
  nameWithType: Task<TApiData>
  fullName: System.Threading.Tasks.Task<TApiData>
  nameWithType.vb: Task(Of TApiData)
  fullName.vb: System.Threading.Tasks.Task(Of TApiData)
  name.vb: Task(Of TApiData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TModelData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelData>
  nameWithType: Task<TModelData>
  fullName: System.Threading.Tasks.Task<TModelData>
  nameWithType.vb: Task(Of TModelData)
  fullName.vb: System.Threading.Tasks.Task(Of TModelData)
  name.vb: Task(Of TModelData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, TApiData, Task<TApiData>>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>
  nameWithType: Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData)))
  name.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TModelRequestData}'
  commentId: '!:TModelRequestData'
  definition: TModelRequestData
  name: TModelRequestData
  nameWithType: TModelRequestData
  fullName: TModelRequestData
- uid: System.Threading.Tasks.Task{{TModelResultData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelResultData>
  nameWithType: Task<TModelResultData>
  fullName: System.Threading.Tasks.Task<TModelResultData>
  nameWithType.vb: Task(Of TModelResultData)
  fullName.vb: System.Threading.Tasks.Task(Of TModelResultData)
  name.vb: Task(Of TModelResultData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: TModelRequestData
  name: TModelRequestData
  nameWithType: TModelRequestData
  fullName: TModelRequestData
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1.ClearCacheAsync*
  commentId: Overload:Apizr.IApizrManager`1.ClearCacheAsync
  name: ClearCacheAsync
  nameWithType: IApizrManager<TWebApi>.ClearCacheAsync
  fullName: Apizr.IApizrManager<TWebApi>.ClearCacheAsync
  nameWithType.vb: IApizrManager(Of TWebApi).ClearCacheAsync
  fullName.vb: Apizr.IApizrManager(Of TWebApi).ClearCacheAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TResult}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, Task<TResult>>>
  nameWithType: Expression<Func<TWebApi, Task<TResult>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TResult>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of TResult)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TResult)))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TResult}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<CancellationToken, TWebApi, Task<TResult>>>
  nameWithType: Expression<Func<CancellationToken, TWebApi, Task<TResult>>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TResult>>>
  nameWithType.vb: Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TResult)))
  name.vb: Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
