### YamlMime:ManagedReference
items:
- uid: Apizr.Mapping.IMappingHandler
  commentId: T:Apizr.Mapping.IMappingHandler
  id: IMappingHandler
  parent: Apizr.Mapping
  children:
  - Apizr.Mapping.IMappingHandler.Map(System.Object,System.Object,System.Type,System.Type)
  - Apizr.Mapping.IMappingHandler.Map(System.Object,System.Type,System.Type)
  - Apizr.Mapping.IMappingHandler.Map``1(System.Object)
  - Apizr.Mapping.IMappingHandler.Map``2(``0)
  - Apizr.Mapping.IMappingHandler.Map``2(``0,``1)
  langs:
  - csharp
  - vb
  name: IMappingHandler
  nameWithType: IMappingHandler
  fullName: Apizr.Mapping.IMappingHandler
  type: Interface
  source:
    remote:
      path: Apizr/Src/Apizr/Mapping/IMappingHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: IMappingHandler
    path: ../../Src/Apizr/Mapping/IMappingHandler.cs
    startLine: 9
  assemblies:
  - Apizr
  namespace: Apizr.Mapping
  summary: "\nThe mapping handler definition\n"
  example: []
  syntax:
    content: public interface IMappingHandler
    content.vb: Public Interface IMappingHandler
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Apizr.Mapping.IMappingHandler.Map``1(System.Object)
  commentId: M:Apizr.Mapping.IMappingHandler.Map``1(System.Object)
  id: Map``1(System.Object)
  parent: Apizr.Mapping.IMappingHandler
  langs:
  - csharp
  - vb
  name: Map<TDestination>(Object)
  nameWithType: IMappingHandler.Map<TDestination>(Object)
  fullName: Apizr.Mapping.IMappingHandler.Map<TDestination>(System.Object)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Mapping/IMappingHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Map
    path: ../../Src/Apizr/Mapping/IMappingHandler.cs
    startLine: 18
  assemblies:
  - Apizr
  namespace: Apizr.Mapping
  summary: "\nExecute a mapping from the source object to a new destination object.\nThe source type is inferred from the source object.\n"
  example: []
  syntax:
    content: TDestination Map<TDestination>(object source)
    parameters:
    - id: source
      type: System.Object
      description: Source object to map from
    typeParameters:
    - id: TDestination
      description: Destination type to create
    return:
      type: '{TDestination}'
      description: Mapped destination object
    content.vb: Function Map(Of TDestination)(source As Object) As TDestination
  overload: Apizr.Mapping.IMappingHandler.Map*
  nameWithType.vb: IMappingHandler.Map(Of TDestination)(Object)
  fullName.vb: Apizr.Mapping.IMappingHandler.Map(Of TDestination)(System.Object)
  name.vb: Map(Of TDestination)(Object)
- uid: Apizr.Mapping.IMappingHandler.Map``2(``0)
  commentId: M:Apizr.Mapping.IMappingHandler.Map``2(``0)
  id: Map``2(``0)
  parent: Apizr.Mapping.IMappingHandler
  langs:
  - csharp
  - vb
  name: Map<TSource, TDestination>(TSource)
  nameWithType: IMappingHandler.Map<TSource, TDestination>(TSource)
  fullName: Apizr.Mapping.IMappingHandler.Map<TSource, TDestination>(TSource)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Mapping/IMappingHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Map
    path: ../../Src/Apizr/Mapping/IMappingHandler.cs
    startLine: 27
  assemblies:
  - Apizr
  namespace: Apizr.Mapping
  summary: "\nExecute a mapping from the source object to a new destination object.\n"
  example: []
  syntax:
    content: TDestination Map<TSource, TDestination>(TSource source)
    parameters:
    - id: source
      type: '{TSource}'
      description: Source object to map from
    typeParameters:
    - id: TSource
      description: Source type to use, regardless of the runtime type
    - id: TDestination
      description: Destination type to create
    return:
      type: '{TDestination}'
      description: Mapped destination object
    content.vb: Function Map(Of TSource, TDestination)(source As TSource) As TDestination
  overload: Apizr.Mapping.IMappingHandler.Map*
  nameWithType.vb: IMappingHandler.Map(Of TSource, TDestination)(TSource)
  fullName.vb: Apizr.Mapping.IMappingHandler.Map(Of TSource, TDestination)(TSource)
  name.vb: Map(Of TSource, TDestination)(TSource)
- uid: Apizr.Mapping.IMappingHandler.Map``2(``0,``1)
  commentId: M:Apizr.Mapping.IMappingHandler.Map``2(``0,``1)
  id: Map``2(``0,``1)
  parent: Apizr.Mapping.IMappingHandler
  langs:
  - csharp
  - vb
  name: Map<TSource, TDestination>(TSource, TDestination)
  nameWithType: IMappingHandler.Map<TSource, TDestination>(TSource, TDestination)
  fullName: Apizr.Mapping.IMappingHandler.Map<TSource, TDestination>(TSource, TDestination)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Mapping/IMappingHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Map
    path: ../../Src/Apizr/Mapping/IMappingHandler.cs
    startLine: 37
  assemblies:
  - Apizr
  namespace: Apizr.Mapping
  summary: "\nExecute a mapping from the source object to the existing destination object.\n"
  example: []
  syntax:
    content: TDestination Map<TSource, TDestination>(TSource source, TDestination destination)
    parameters:
    - id: source
      type: '{TSource}'
      description: Source object to map from
    - id: destination
      type: '{TDestination}'
      description: Destination object to map into
    typeParameters:
    - id: TSource
      description: Source type to use
    - id: TDestination
      description: Destination type
    return:
      type: '{TDestination}'
      description: The mapped destination object, same instance as the <code data-dev-comment-type="paramref" class="paramref">destination</code> object
    content.vb: Function Map(Of TSource, TDestination)(source As TSource, destination As TDestination) As TDestination
  overload: Apizr.Mapping.IMappingHandler.Map*
  nameWithType.vb: IMappingHandler.Map(Of TSource, TDestination)(TSource, TDestination)
  fullName.vb: Apizr.Mapping.IMappingHandler.Map(Of TSource, TDestination)(TSource, TDestination)
  name.vb: Map(Of TSource, TDestination)(TSource, TDestination)
- uid: Apizr.Mapping.IMappingHandler.Map(System.Object,System.Type,System.Type)
  commentId: M:Apizr.Mapping.IMappingHandler.Map(System.Object,System.Type,System.Type)
  id: Map(System.Object,System.Type,System.Type)
  parent: Apizr.Mapping.IMappingHandler
  langs:
  - csharp
  - vb
  name: Map(Object, Type, Type)
  nameWithType: IMappingHandler.Map(Object, Type, Type)
  fullName: Apizr.Mapping.IMappingHandler.Map(System.Object, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Mapping/IMappingHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Map
    path: ../../Src/Apizr/Mapping/IMappingHandler.cs
    startLine: 46
  assemblies:
  - Apizr
  namespace: Apizr.Mapping
  summary: "\nExecute a mapping from the source object to a new destination object with explicit <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects\n"
  example: []
  syntax:
    content: object Map(object source, Type sourceType, Type destinationType)
    parameters:
    - id: source
      type: System.Object
      description: Source object to map from
    - id: sourceType
      type: System.Type
      description: Source type to use
    - id: destinationType
      type: System.Type
      description: Destination type to create
    return:
      type: System.Object
      description: Mapped destination object
    content.vb: Function Map(source As Object, sourceType As Type, destinationType As Type) As Object
  overload: Apizr.Mapping.IMappingHandler.Map*
- uid: Apizr.Mapping.IMappingHandler.Map(System.Object,System.Object,System.Type,System.Type)
  commentId: M:Apizr.Mapping.IMappingHandler.Map(System.Object,System.Object,System.Type,System.Type)
  id: Map(System.Object,System.Object,System.Type,System.Type)
  parent: Apizr.Mapping.IMappingHandler
  langs:
  - csharp
  - vb
  name: Map(Object, Object, Type, Type)
  nameWithType: IMappingHandler.Map(Object, Object, Type, Type)
  fullName: Apizr.Mapping.IMappingHandler.Map(System.Object, System.Object, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Mapping/IMappingHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Map
    path: ../../Src/Apizr/Mapping/IMappingHandler.cs
    startLine: 56
  assemblies:
  - Apizr
  namespace: Apizr.Mapping
  summary: "\nExecute a mapping from the source object to existing destination object with explicit <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects\n"
  example: []
  syntax:
    content: object Map(object source, object destination, Type sourceType, Type destinationType)
    parameters:
    - id: source
      type: System.Object
      description: Source object to map from
    - id: destination
      type: System.Object
      description: Destination object to map into
    - id: sourceType
      type: System.Type
      description: Source type to use
    - id: destinationType
      type: System.Type
      description: Destination type to use
    return:
      type: System.Object
      description: Mapped destination object, same instance as the <code data-dev-comment-type="paramref" class="paramref">destination</code> object
    content.vb: Function Map(source As Object, destination As Object, sourceType As Type, destinationType As Type) As Object
  overload: Apizr.Mapping.IMappingHandler.Map*
references:
- uid: Apizr.Mapping
  commentId: N:Apizr.Mapping
  name: Apizr.Mapping
  nameWithType: Apizr.Mapping
  fullName: Apizr.Mapping
- uid: Apizr.Mapping.IMappingHandler.Map*
  commentId: Overload:Apizr.Mapping.IMappingHandler.Map
  name: Map
  nameWithType: IMappingHandler.Map
  fullName: Apizr.Mapping.IMappingHandler.Map
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: '{TDestination}'
  commentId: '!:TDestination'
  definition: TDestination
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TDestination
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
