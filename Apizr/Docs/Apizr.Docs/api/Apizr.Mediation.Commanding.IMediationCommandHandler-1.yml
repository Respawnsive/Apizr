### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Commanding.IMediationCommandHandler`1
  commentId: T:Apizr.Mediation.Commanding.IMediationCommandHandler`1
  id: IMediationCommandHandler`1
  parent: Apizr.Mediation.Commanding
  children: []
  langs:
  - csharp
  - vb
  name: IMediationCommandHandler<TCommand>
  nameWithType: IMediationCommandHandler<TCommand>
  fullName: Apizr.Mediation.Commanding.IMediationCommandHandler<TCommand>
  type: Interface
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.MediatR/Mediation/Commanding/IMediationCommandHandler.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: IMediationCommandHandler
    path: ../../Src/Handling/Apizr.Integrations.MediatR/Mediation/Commanding/IMediationCommandHandler.cs
    startLine: 19
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Commanding
  summary: The mediation command handler
  example: []
  syntax:
    content: 'public interface IMediationCommandHandler<in TCommand> : IMediationCommandHandler<TCommand, Unit>, IRequestHandler<TCommand, Unit> where TCommand : IRequest<Unit>'
    typeParameters:
    - id: TCommand
      description: The handled command type
    content.vb: Public Interface IMediationCommandHandler(Of In TCommand As IRequest(Of Unit)) Inherits IMediationCommandHandler(Of TCommand, Unit), IRequestHandler(Of TCommand, Unit)
  inheritedMembers:
  - MediatR.IRequestHandler{{TCommand},MediatR.Unit}.Handle({TCommand},System.Threading.CancellationToken)
  nameWithType.vb: IMediationCommandHandler(Of TCommand)
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommandHandler(Of TCommand)
  name.vb: IMediationCommandHandler(Of TCommand)
references:
- uid: Apizr.Mediation.Commanding
  commentId: N:Apizr.Mediation.Commanding
  href: Apizr.html
  name: Apizr.Mediation.Commanding
  nameWithType: Apizr.Mediation.Commanding
  fullName: Apizr.Mediation.Commanding
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Mediation
    name: Mediation
    href: Apizr.Mediation.html
  - name: .
  - uid: Apizr.Mediation.Commanding
    name: Commanding
    href: Apizr.Mediation.Commanding.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Mediation
    name: Mediation
    href: Apizr.Mediation.html
  - name: .
  - uid: Apizr.Mediation.Commanding
    name: Commanding
    href: Apizr.Mediation.Commanding.html
- uid: MediatR.IRequestHandler{{TCommand},MediatR.Unit}.Handle({TCommand},System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{`0,MediatR.Unit}.Handle(`0,System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{{TCommand},MediatR.Unit}
  definition: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TCommand, CancellationToken)
  nameWithType: IRequestHandler<TCommand, Unit>.Handle(TCommand, CancellationToken)
  fullName: MediatR.IRequestHandler<TCommand, MediatR.Unit>.Handle(TCommand, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TCommand, Unit).Handle(TCommand, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TCommand, MediatR.Unit).Handle(TCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler{`0,MediatR.Unit}.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TCommand
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler{`0,MediatR.Unit}.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TCommand
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MediatR.IRequestHandler{{TCommand},MediatR.Unit}
  commentId: T:MediatR.IRequestHandler{`0,MediatR.Unit}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<TCommand, Unit>
  nameWithType: IRequestHandler<TCommand, Unit>
  fullName: MediatR.IRequestHandler<TCommand, MediatR.Unit>
  nameWithType.vb: IRequestHandler(Of TCommand, Unit)
  fullName.vb: MediatR.IRequestHandler(Of TCommand, MediatR.Unit)
  name.vb: IRequestHandler(Of TCommand, Unit)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - name: TCommand
  - name: ','
  - name: " "
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TCommand
  - name: ','
  - name: " "
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: )
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
