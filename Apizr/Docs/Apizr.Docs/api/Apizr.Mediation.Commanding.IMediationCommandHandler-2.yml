### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
  commentId: T:Apizr.Mediation.Commanding.IMediationCommandHandler`2
  id: IMediationCommandHandler`2
  parent: Apizr.Mediation.Commanding
  children: []
  langs:
  - csharp
  - vb
  name: IMediationCommandHandler<TCommand, TResponse>
  nameWithType: IMediationCommandHandler<TCommand, TResponse>
  fullName: Apizr.Mediation.Commanding.IMediationCommandHandler<TCommand, TResponse>
  type: Interface
  source:
    id: IMediationCommandHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Commanding\IMediationCommandHandler.cs
    startLine: 4
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Commanding
  syntax:
    content: 'public interface IMediationCommandHandler<in TCommand, TResponse> : IRequestHandler<TCommand, TResponse> where TCommand : IRequest<TResponse>'
    typeParameters:
    - id: TCommand
    - id: TResponse
    content.vb: >-
      Public Interface IMediationCommandHandler(Of In TCommand As IRequest(Of TResponse), TResponse)

          Inherits IRequestHandler(Of TCommand, TResponse)
  inheritedMembers:
  - MediatR.IRequestHandler{{TCommand},{TResponse}}.Handle({TCommand},System.Threading.CancellationToken)
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: IMediationCommandHandler(Of TCommand, TResponse)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommandHandler(Of TCommand, TResponse)
  name.vb: IMediationCommandHandler(Of TCommand, TResponse)
references:
- uid: Apizr.Mediation.Commanding
  commentId: N:Apizr.Mediation.Commanding
  name: Apizr.Mediation.Commanding
  nameWithType: Apizr.Mediation.Commanding
  fullName: Apizr.Mediation.Commanding
- uid: MediatR.IRequestHandler{{TCommand},{TResponse}}.Handle({TCommand},System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{`0,`1}.Handle(`0,System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{{TCommand},{TResponse}}
  definition: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  name: Handle(TCommand, CancellationToken)
  nameWithType: IRequestHandler<TCommand, TResponse>.Handle(TCommand, CancellationToken)
  fullName: MediatR.IRequestHandler<TCommand, TResponse>.Handle(TCommand, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TCommand, TResponse).Handle(TCommand, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TCommand, TResponse).Handle(TCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler<TCommand, TResponse>.Handle
    fullName: MediatR.IRequestHandler<TCommand, TResponse>.Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler(Of TCommand, TResponse).Handle
    fullName: MediatR.IRequestHandler(Of TCommand, TResponse).Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler<TRequest, TResponse>.Handle
    fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler(Of TRequest, TResponse).Handle
    fullName: MediatR.IRequestHandler(Of TRequest, TResponse).Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{{TCommand},{TResponse}}
  commentId: T:MediatR.IRequestHandler{`0,`1}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<TCommand, TResponse>
  nameWithType: IRequestHandler<TCommand, TResponse>
  fullName: MediatR.IRequestHandler<TCommand, TResponse>
  nameWithType.vb: IRequestHandler(Of TCommand, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TCommand, TResponse)
  name.vb: IRequestHandler(Of TCommand, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
