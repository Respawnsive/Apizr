### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Commanding.MediationCommandBase`2
  commentId: T:Apizr.Mediation.Commanding.MediationCommandBase`2
  id: MediationCommandBase`2
  parent: Apizr.Mediation.Commanding
  children:
  - Apizr.Mediation.Commanding.MediationCommandBase`2.#ctor(System.Action{`1})
  langs:
  - csharp
  - vb
  name: MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Commanding.MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  type: Class
  source:
    id: MediationCommandBase
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Commanding\MediationCommandBase.cs
    startLine: 67
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Commanding
  summary: "\nThe top level base mediation command\n"
  example: []
  syntax:
    content: 'public abstract class MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder> : RequestBase<Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder>, IMediationCommand, IRequest<Unit>, IBaseRequest where TApizrRequestOptions : IApizrRequestOptionsBase where TApizrRequestOptionsBuilder : IApizrRequestOptionsBuilderBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>'
    typeParameters:
    - id: TApizrRequestOptions
      description: Options provided to the request
    - id: TApizrRequestOptionsBuilder
      description: The request options builder
    content.vb: >-
      Public MustInherit Class MediationCommandBase(Of TApizrRequestOptions As IApizrRequestOptionsBase, TApizrRequestOptionsBuilder As IApizrRequestOptionsBuilderBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder))
          Inherits RequestBase(Of Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder)
          Implements IMediationCommand, IRequest(Of Unit), IBaseRequest
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Base.RequestBase{MediatR.Unit,{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  implements:
  - Apizr.Mediation.Commanding.IMediationCommand
  - MediatR.IRequest{MediatR.Unit}
  - MediatR.IBaseRequest
  inheritedMembers:
  - Apizr.Mediation.Requesting.Base.RequestBase{MediatR.Unit,{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.OptionsBuilder
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: MediationCommandBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Apizr.Mediation.Commanding.MediationCommandBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: MediationCommandBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
- uid: Apizr.Mediation.Commanding.MediationCommandBase`2.#ctor(System.Action{`1})
  commentId: M:Apizr.Mediation.Commanding.MediationCommandBase`2.#ctor(System.Action{`1})
  id: '#ctor(System.Action{`1})'
  parent: Apizr.Mediation.Commanding.MediationCommandBase`2
  langs:
  - csharp
  - vb
  name: MediationCommandBase(Action<TApizrRequestOptionsBuilder>)
  nameWithType: MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>.MediationCommandBase(Action<TApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Commanding.MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>.MediationCommandBase(System.Action<TApizrRequestOptionsBuilder>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Commanding\MediationCommandBase.cs
    startLine: 72
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Commanding
  example: []
  syntax:
    content: protected MediationCommandBase(Action<TApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{{TApizrRequestOptionsBuilder}}
    content.vb: Protected Sub New(optionsBuilder As Action(Of TApizrRequestOptionsBuilder) = Nothing)
  overload: Apizr.Mediation.Commanding.MediationCommandBase`2.#ctor*
  nameWithType.vb: MediationCommandBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder).MediationCommandBase(Action(Of TApizrRequestOptionsBuilder))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Apizr.Mediation.Commanding.MediationCommandBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder).MediationCommandBase(System.Action(Of TApizrRequestOptionsBuilder))
  name.vb: MediationCommandBase(Action(Of TApizrRequestOptionsBuilder))
references:
- uid: Apizr.Mediation.Commanding
  commentId: N:Apizr.Mediation.Commanding
  name: Apizr.Mediation.Commanding
  nameWithType: Apizr.Mediation.Commanding
  fullName: Apizr.Mediation.Commanding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Base.RequestBase{MediatR.Unit,{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase{MediatR.Unit,`1,`2}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.RequestBase`3
  name: RequestBase<Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestBase<Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<MediatR.Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestBase(Of Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of MediatR.Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestBase(Of Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommand
  commentId: T:Apizr.Mediation.Commanding.IMediationCommand
  parent: Apizr.Mediation.Commanding
  name: IMediationCommand
  nameWithType: IMediationCommand
  fullName: Apizr.Mediation.Commanding.IMediationCommand
- uid: MediatR.IRequest{MediatR.Unit}
  commentId: T:MediatR.IRequest{MediatR.Unit}
  parent: MediatR
  definition: MediatR.IRequest`1
  name: IRequest<Unit>
  nameWithType: IRequest<Unit>
  fullName: MediatR.IRequest<MediatR.Unit>
  nameWithType.vb: IRequest(Of Unit)
  fullName.vb: MediatR.IRequest(Of MediatR.Unit)
  name.vb: IRequest(Of Unit)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IBaseRequest
  commentId: T:MediatR.IBaseRequest
  parent: MediatR
  isExternal: true
  name: IBaseRequest
  nameWithType: IBaseRequest
  fullName: MediatR.IBaseRequest
- uid: Apizr.Mediation.Requesting.Base.RequestBase{MediatR.Unit,{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.OptionsBuilder
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{MediatR.Unit,`1,`2}.OptionsBuilder
  parent: Apizr.Mediation.Requesting.Base.RequestBase{MediatR.Unit,{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  name: OptionsBuilder
  nameWithType: RequestBase<Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<MediatR.Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  nameWithType.vb: RequestBase(Of Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of MediatR.Unit, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Base.RequestBase`3
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase`3
  name: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Base
  commentId: N:Apizr.Mediation.Requesting.Base
  name: Apizr.Mediation.Requesting.Base
  nameWithType: Apizr.Mediation.Requesting.Base
  fullName: Apizr.Mediation.Requesting.Base
- uid: MediatR.IRequest`1
  commentId: T:MediatR.IRequest`1
  isExternal: true
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: MediatR.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: MediatR.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  name: OptionsBuilder
  nameWithType: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  nameWithType.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
- uid: Apizr.Mediation.Commanding.MediationCommandBase`2.#ctor*
  commentId: Overload:Apizr.Mediation.Commanding.MediationCommandBase`2.#ctor
  name: MediationCommandBase
  nameWithType: MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>.MediationCommandBase
  fullName: Apizr.Mediation.Commanding.MediationCommandBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>.MediationCommandBase
  nameWithType.vb: MediationCommandBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder).MediationCommandBase
  fullName.vb: Apizr.Mediation.Commanding.MediationCommandBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder).MediationCommandBase
- uid: System.Action{{TApizrRequestOptionsBuilder}}
  commentId: T:System.Action{`5}
  parent: System
  definition: System.Action`1
  name: Action<TApizrRequestOptionsBuilder>
  nameWithType: Action<TApizrRequestOptionsBuilder>
  fullName: System.Action<TApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of TApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of TApizrRequestOptionsBuilder)
  name.vb: Action(Of TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
