### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  commentId: T:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  id: IApizrMediationEnumerableRegistry
  parent: Apizr.Mediation.Configuring.Registry
  children:
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``1
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``2
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``3
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``4
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor``1
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``1(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``2(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``3(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``4(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,``3}@)
  - Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0}@)
  langs:
  - csharp
  - vb
  name: IApizrMediationEnumerableRegistry
  nameWithType: IApizrMediationEnumerableRegistry
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  type: Interface
  source:
    id: IApizrMediationEnumerableRegistry
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 8
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  syntax:
    content: 'public interface IApizrMediationEnumerableRegistry : IEnumerable<KeyValuePair<Type, Func<IApizrMediatorBase>>>, IEnumerable, IApizrEnumerableRegistryBase'
    content.vb: >-
      Public Interface IApizrMediationEnumerableRegistry

          Inherits IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrMediatorBase))), IApizrEnumerableRegistryBase
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Mediation.Requesting.Sending.IApizrMediatorBase}}}.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  - Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``1
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``1
  id: GetCrudFor``1
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudFor<T>()
  nameWithType: IApizrMediationEnumerableRegistry.GetCrudFor<T>()
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor<T>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 15
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nGet a Crud mediator instance for an entity type\n"
  example: []
  syntax:
    content: >-
      IApizrCrudMediator<T, int, IEnumerable<T>, IDictionary<string, object>> GetCrudFor<T>()

          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    return:
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Function GetCrudFor(Of T As Class) As IApizrCrudMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.GetCrudFor(Of T)()
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor(Of T)()
  name.vb: GetCrudFor(Of T)()
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``2
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``2
  id: GetCrudFor``2
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudFor<T, TKey>()
  nameWithType: IApizrMediationEnumerableRegistry.GetCrudFor<T, TKey>()
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor<T, TKey>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 23
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nGet a Crud mediator instance for an entity type with a specific key type\n"
  example: []
  syntax:
    content: >-
      IApizrCrudMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>> GetCrudFor<T, TKey>()

          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    return:
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Function GetCrudFor(Of T As Class, TKey) As IApizrCrudMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.GetCrudFor(Of T, TKey)()
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor(Of T, TKey)()
  name.vb: GetCrudFor(Of T, TKey)()
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``3
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``3
  id: GetCrudFor``3
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrMediationEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 32
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nGet a Crud mediator instance for an entity type with a specific key type and ReadAll result type\n"
  example: []
  syntax:
    content: >-
      IApizrCrudMediator<T, TKey, TReadAllResult, IDictionary<string, object>> GetCrudFor<T, TKey, TReadAllResult>()

          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    return:
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Function GetCrudFor(Of T As Class, TKey, TReadAllResult) As IApizrCrudMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``4
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor``4
  id: GetCrudFor``4
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrMediationEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: GetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 43
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nGet a Crud mediator instance for an entity type with a specific key type, ReadAll result type and ReadAll params type\n"
  example: []
  syntax:
    content: >-
      IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams> GetCrudFor<T, TKey, TReadAllResult, TReadAllParams>()

          where T : class
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    - id: TReadAllParams
      description: The ReadAll request params type
    return:
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
      description: ''
    content.vb: Function GetCrudFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor``1
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor``1
  id: GetFor``1
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: GetFor<TWebApi>()
  nameWithType: IApizrMediationEnumerableRegistry.GetFor<TWebApi>()
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor<TWebApi>()
  type: Method
  source:
    id: GetFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 51
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nGet an api mediator instance\n"
  example: []
  syntax:
    content: IApizrMediator<TWebApi> GetFor<TWebApi>()
    typeParameters:
    - id: TWebApi
      description: The managed api type
    return:
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator{{TWebApi}}
      description: ''
    content.vb: Function GetFor(Of TWebApi) As IApizrMediator(Of TWebApi)
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.GetFor(Of TWebApi)()
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor(Of TWebApi)()
  name.vb: GetFor(Of TWebApi)()
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``1(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``1(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudFor``1(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T>(out IApizrCrudMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrMediationEnumerableRegistry.TryGetCrudFor<T>(out IApizrCrudMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor<T>(out Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 58
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nTry to get a Crud mediator instance for an entity type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudFor<T>(out IApizrCrudMediator<T, int, IEnumerable<T>, IDictionary<string, object>> mediator)

          where T : class
    parameters:
    - id: mediator
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
      description: The managed entity type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudFor(Of T As Class)(ByRef mediator As IApizrCrudMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T)(ByRef IApizrCrudMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T)(ByRef Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudFor(Of T)(ByRef IApizrCrudMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``2(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``2(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudFor``2(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T, TKey>(out IApizrCrudMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrMediationEnumerableRegistry.TryGetCrudFor<T, TKey>(out IApizrCrudMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor<T, TKey>(out Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 66
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nTry to get a Crud mediator instance for an entity type with a specific key type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudFor<T, TKey>(out IApizrCrudMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>> mediator)

          where T : class
    parameters:
    - id: mediator
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudFor(Of T As Class, TKey)(ByRef mediator As IApizrCrudMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T, TKey)(ByRef IApizrCrudMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T, TKey)(ByRef Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudFor(Of T, TKey)(ByRef IApizrCrudMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``3(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``3(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudFor``3(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T, TKey, TReadAllResult>(out IApizrCrudMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  nameWithType: IApizrMediationEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>(out IApizrCrudMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult>(out Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 75
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nTry to get a Crud mediator instance for an entity type with a specific key type and ReadAll result type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudFor<T, TKey, TReadAllResult>(out IApizrCrudMediator<T, TKey, TReadAllResult, IDictionary<string, object>> mediator)

          where T : class
    parameters:
    - id: mediator
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudFor(Of T As Class, TKey, TReadAllResult)(ByRef mediator As IApizrCrudMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)(ByRef IApizrCrudMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult)(ByRef Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult)(ByRef IApizrCrudMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``4(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,``3}@)
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor``4(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,``3}@)
  id: TryGetCrudFor``4(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,``3}@)
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: IApizrMediationEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams>)
  type: Method
  source:
    id: TryGetCrudFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 85
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nTry to get a Crud mediator instance for an entity type with a specific key type, ReadAll result type and ReadAll params type\n"
  example: []
  syntax:
    content: >-
      bool TryGetCrudFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams> mediator)

          where T : class
    parameters:
    - id: mediator
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity&apos;s key type
    - id: TReadAllResult
      description: The ReadAll request result type
    - id: TReadAllParams
      description: The ReadAll request params type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetCrudFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)(ByRef mediator As IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams)) As Boolean
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams))
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0}@)
  commentId: M:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0}@)
  id: TryGetFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0}@)
  parent: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry
  langs:
  - csharp
  - vb
  name: TryGetFor<TWebApi>(out IApizrMediator<TWebApi>)
  nameWithType: IApizrMediationEnumerableRegistry.TryGetFor<TWebApi>(out IApizrMediator<TWebApi>)
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor<TWebApi>(out Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>)
  type: Method
  source:
    id: TryGetFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Configuring\Registry\IApizrMediationEnumerableRegistry.cs
    startLine: 92
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Configuring.Registry
  summary: "\nTry to get an api mediator instance\n"
  example: []
  syntax:
    content: bool TryGetFor<TWebApi>(out IApizrMediator<TWebApi> mediator)
    parameters:
    - id: mediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator{{TWebApi}}
    typeParameters:
    - id: TWebApi
      description: The managed api type
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryGetFor(Of TWebApi)(ByRef mediator As IApizrMediator(Of TWebApi)) As Boolean
  overload: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor*
  nameWithType.vb: IApizrMediationEnumerableRegistry.TryGetFor(Of TWebApi)(ByRef IApizrMediator(Of TWebApi))
  fullName.vb: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor(Of TWebApi)(ByRef Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi))
  name.vb: TryGetFor(Of TWebApi)(ByRef IApizrMediator(Of TWebApi))
references:
- uid: Apizr.Mediation.Configuring.Registry
  commentId: N:Apizr.Mediation.Configuring.Registry
  name: Apizr.Mediation.Configuring.Registry
  nameWithType: Apizr.Mediation.Configuring.Registry
  fullName: Apizr.Mediation.Configuring.Registry
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Mediation.Requesting.Sending.IApizrMediatorBase}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Mediation.Requesting.Sending.IApizrMediatorBase}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Mediation.Requesting.Sending.IApizrMediatorBase}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrMediatorBase>>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Mediation.Requesting.Sending.IApizrMediatorBase>>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrMediatorBase))).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Mediation.Requesting.Sending.IApizrMediatorBase))).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrMediatorBase>>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Mediation.Requesting.Sending.IApizrMediatorBase>>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrMediatorBase))).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Mediation.Requesting.Sending.IApizrMediatorBase))).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  commentId: P:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: Count
  nameWithType: IApizrEnumerableRegistryBase.Count
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.Count
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)()
  name.vb: ContainsCrudFor(Of T)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
    name: ContainsCrudFor<T>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``1
    name: ContainsCrudFor(Of T)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T, TKey>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)()
  name.vb: ContainsCrudFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
    name: ContainsCrudFor<T, TKey>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``2
    name: ContainsCrudFor(Of T, TKey)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
    name: ContainsCrudFor<T, TKey, TReadAllResult>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``3
    name: ContainsCrudFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
    name: ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor``4
    name: ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsCrudFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  commentId: M:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
  parent: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  name: ContainsFor<TWebApi>()
  nameWithType: IApizrEnumerableRegistryBase.ContainsFor<TWebApi>()
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor<TWebApi>()
  nameWithType.vb: IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)()
  fullName.vb: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)()
  name.vb: ContainsFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
    name: ContainsFor<TWebApi>
    nameWithType: IApizrEnumerableRegistryBase.ContainsFor<TWebApi>
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor``1
    name: ContainsFor(Of TWebApi)
    nameWithType: IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)
    fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase.ContainsFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Mediation.Requesting.Sending.IApizrMediatorBase}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Mediation.Requesting.Sending.IApizrMediatorBase}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Type, Func<IApizrMediatorBase>>>
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrMediatorBase>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Mediation.Requesting.Sending.IApizrMediatorBase>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrMediatorBase)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Mediation.Requesting.Sending.IApizrMediatorBase)))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrMediatorBase)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
    name: IApizrMediatorBase
    nameWithType: IApizrMediatorBase
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
    name: IApizrMediatorBase
    nameWithType: IApizrMediatorBase
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  commentId: T:Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
  parent: Apizr.Configuring.Registry
  name: IApizrEnumerableRegistryBase
  nameWithType: IApizrEnumerableRegistryBase
  fullName: Apizr.Configuring.Registry.IApizrEnumerableRegistryBase
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Apizr.Configuring.Registry
  commentId: N:Apizr.Configuring.Registry
  name: Apizr.Configuring.Registry
  nameWithType: Apizr.Configuring.Registry
  fullName: Apizr.Configuring.Registry
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor*
  commentId: Overload:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor
  name: GetCrudFor
  nameWithType: IApizrMediationEnumerableRegistry.GetCrudFor
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetCrudFor
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Mediation.Cruding.Sending
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  name: IApizrCrudMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>
  nameWithType: IApizrCrudMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IApizrCrudMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IApizrCrudMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  name: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending
  commentId: N:Apizr.Mediation.Cruding.Sending
  name: Apizr.Mediation.Cruding.Sending
  nameWithType: Apizr.Mediation.Cruding.Sending
  fullName: Apizr.Mediation.Cruding.Sending
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Mediation.Cruding.Sending
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  name: IApizrCrudMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>
  nameWithType: IApizrCrudMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IApizrCrudMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IApizrCrudMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Mediation.Cruding.Sending
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  name: IApizrCrudMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>
  nameWithType: IApizrCrudMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IApizrCrudMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IApizrCrudMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{``0,``1,``2,``3}
  parent: Apizr.Mediation.Cruding.Sending
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  name: IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<T, TKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor*
  commentId: Overload:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor
  name: GetFor
  nameWithType: IApizrMediationEnumerableRegistry.GetFor
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.GetFor
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator{{TWebApi}}
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediator{``0}
  parent: Apizr.Mediation.Requesting.Sending
  definition: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  name: IApizrMediator<TWebApi>
  nameWithType: IApizrMediator<TWebApi>
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>
  nameWithType.vb: IApizrMediator(Of TWebApi)
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi)
  name.vb: IApizrMediator(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  name: IApizrMediator<TWebApi>
  nameWithType: IApizrMediator<TWebApi>
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>
  nameWithType.vb: IApizrMediator(Of TWebApi)
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi)
  name.vb: IApizrMediator(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending
  commentId: N:Apizr.Mediation.Requesting.Sending
  name: Apizr.Mediation.Requesting.Sending
  nameWithType: Apizr.Mediation.Requesting.Sending
  fullName: Apizr.Mediation.Requesting.Sending
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor*
  commentId: Overload:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor
  name: TryGetCrudFor
  nameWithType: IApizrMediationEnumerableRegistry.TryGetCrudFor
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetCrudFor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor*
  commentId: Overload:Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor
  name: TryGetFor
  nameWithType: IApizrMediationEnumerableRegistry.TryGetFor
  fullName: Apizr.Mediation.Configuring.Registry.IApizrMediationEnumerableRegistry.TryGetFor
