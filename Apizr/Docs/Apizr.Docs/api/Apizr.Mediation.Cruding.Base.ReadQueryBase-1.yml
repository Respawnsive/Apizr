### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`1
  commentId: T:Apizr.Mediation.Cruding.Base.ReadQueryBase`1
  id: ReadQueryBase`1
  parent: Apizr.Mediation.Cruding.Base
  children:
  - Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Int32,System.Boolean,System.Action{System.Exception})
  langs:
  - csharp
  - vb
  name: ReadQueryBase<TResponse>
  nameWithType: ReadQueryBase<TResponse>
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse>
  type: Class
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadQueryBase
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
    startLine: 31
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Base
  syntax:
    content: 'public abstract class ReadQueryBase<TResponse> : ReadQueryBase<TResponse, int>, IMediationQuery<TResponse>, IRequest<TResponse>, IBaseRequest'
    typeParameters:
    - id: TResponse
    content.vb: >-
      Public MustInherit Class ReadQueryBase(Of TResponse)
          Inherits ReadQueryBase(Of TResponse, Integer)
          Implements IMediationQuery(Of TResponse), IRequest(Of TResponse), IBaseRequest
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}
  - Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{{TResponse}}
  - Apizr.Mediation.Querying.MediationQueryBase{{TResponse}}
  - Apizr.Mediation.Cruding.Base.ReadQueryBase{{TResponse},System.Int32}
  derivedClasses:
  - Apizr.Mediation.Cruding.ReadQuery`1
  - Apizr.Optional.Cruding.ReadOptionalQuery`1
  implements:
  - Apizr.Mediation.Querying.IMediationQuery{{TResponse}}
  - MediatR.IRequest{{TResponse}}
  - MediatR.IBaseRequest
  inheritedMembers:
  - Apizr.Mediation.Cruding.Base.ReadQueryBase{{TResponse},System.Int32}.Key
  - Apizr.Mediation.Querying.MediationQueryBase{{TResponse}}.ClearCache
  - Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{{TResponse}}.Priority
  - Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}.Context
  - Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}.OnException
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: ReadQueryBase(Of TResponse)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse)
  name.vb: ReadQueryBase(Of TResponse)
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Boolean,System.Action{System.Exception})
  id: '#ctor(System.Int32,System.Boolean,System.Action{System.Exception})'
  parent: Apizr.Mediation.Cruding.Base.ReadQueryBase`1
  langs:
  - csharp
  - vb
  name: ReadQueryBase(Int32, Boolean, Action<Exception>)
  nameWithType: ReadQueryBase<TResponse>.ReadQueryBase(Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse>.ReadQueryBase(System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
    startLine: 33
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Base
  syntax:
    content: protected ReadQueryBase(int key, bool clearCache, Action<Exception> onException = null)
    parameters:
    - id: key
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    content.vb: Protected Sub New(key As Integer, clearCache As Boolean, onException As Action(Of Exception) = Nothing)
  overload: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor*
  nameWithType.vb: ReadQueryBase(Of TResponse).ReadQueryBase(Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse).ReadQueryBase(System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: ReadQueryBase(Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Int32,System.Boolean,System.Action{System.Exception})
  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Action{System.Exception})'
  parent: Apizr.Mediation.Cruding.Base.ReadQueryBase`1
  langs:
  - csharp
  - vb
  name: ReadQueryBase(Int32, Int32, Boolean, Action<Exception>)
  nameWithType: ReadQueryBase<TResponse>.ReadQueryBase(Int32, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse>.ReadQueryBase(System.Int32, System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
    startLine: 37
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Base
  syntax:
    content: protected ReadQueryBase(int key, int priority, bool clearCache, Action<Exception> onException = null)
    parameters:
    - id: key
      type: System.Int32
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    content.vb: Protected Sub New(key As Integer, priority As Integer, clearCache As Boolean, onException As Action(Of Exception) = Nothing)
  overload: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor*
  nameWithType.vb: ReadQueryBase(Of TResponse).ReadQueryBase(Int32, Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse).ReadQueryBase(System.Int32, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: ReadQueryBase(Int32, Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: '#ctor(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})'
  parent: Apizr.Mediation.Cruding.Base.ReadQueryBase`1
  langs:
  - csharp
  - vb
  name: ReadQueryBase(Int32, Context, Boolean, Action<Exception>)
  nameWithType: ReadQueryBase<TResponse>.ReadQueryBase(Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse>.ReadQueryBase(System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
    startLine: 41
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Base
  syntax:
    content: protected ReadQueryBase(int key, Context context, bool clearCache, Action<Exception> onException = null)
    parameters:
    - id: key
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    content.vb: Protected Sub New(key As Integer, context As Context, clearCache As Boolean, onException As Action(Of Exception) = Nothing)
  overload: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor*
  nameWithType.vb: ReadQueryBase(Of TResponse).ReadQueryBase(Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse).ReadQueryBase(System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: ReadQueryBase(Int32, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor(System.Int32,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: '#ctor(System.Int32,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})'
  parent: Apizr.Mediation.Cruding.Base.ReadQueryBase`1
  langs:
  - csharp
  - vb
  name: ReadQueryBase(Int32, Int32, Context, Boolean, Action<Exception>)
  nameWithType: ReadQueryBase<TResponse>.ReadQueryBase(Int32, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse>.ReadQueryBase(System.Int32, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Base/ReadQueryBase.cs
    startLine: 45
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Base
  syntax:
    content: protected ReadQueryBase(int key, int priority, Context context, bool clearCache, Action<Exception> onException = null)
    parameters:
    - id: key
      type: System.Int32
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    content.vb: Protected Sub New(key As Integer, priority As Integer, context As Context, clearCache As Boolean, onException As Action(Of Exception) = Nothing)
  overload: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor*
  nameWithType.vb: ReadQueryBase(Of TResponse).ReadQueryBase(Int32, Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse).ReadQueryBase(System.Int32, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: ReadQueryBase(Int32, Int32, Context, Boolean, Action(Of Exception))
references:
- uid: Apizr.Mediation.Cruding.Base
  commentId: N:Apizr.Mediation.Cruding.Base
  name: Apizr.Mediation.Cruding.Base
  nameWithType: Apizr.Mediation.Cruding.Base
  fullName: Apizr.Mediation.Cruding.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase{`0}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1
  name: RequestBase<TResponse>
  nameWithType: RequestBase<TResponse>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TResponse>
  nameWithType.vb: RequestBase(Of TResponse)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TResponse)
  name.vb: RequestBase(Of TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{{TResponse}}
  commentId: T:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{`0}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
  name: PrioritizedRequestBase<TResponse>
  nameWithType: PrioritizedRequestBase<TResponse>
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<TResponse>
  nameWithType.vb: PrioritizedRequestBase(Of TResponse)
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of TResponse)
  name.vb: PrioritizedRequestBase(Of TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.MediationQueryBase{{TResponse}}
  commentId: T:Apizr.Mediation.Querying.MediationQueryBase{`0}
  parent: Apizr.Mediation.Querying
  definition: Apizr.Mediation.Querying.MediationQueryBase`1
  name: MediationQueryBase<TResponse>
  nameWithType: MediationQueryBase<TResponse>
  fullName: Apizr.Mediation.Querying.MediationQueryBase<TResponse>
  nameWithType.vb: MediationQueryBase(Of TResponse)
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of TResponse)
  name.vb: MediationQueryBase(Of TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase{{TResponse},System.Int32}
  commentId: T:Apizr.Mediation.Cruding.Base.ReadQueryBase{`0,System.Int32}
  parent: Apizr.Mediation.Cruding.Base
  definition: Apizr.Mediation.Cruding.Base.ReadQueryBase`2
  name: ReadQueryBase<TResponse, Int32>
  nameWithType: ReadQueryBase<TResponse, Int32>
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse, System.Int32>
  nameWithType.vb: ReadQueryBase(Of TResponse, Int32)
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse, System.Int32)
  name.vb: ReadQueryBase(Of TResponse, Int32)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`2
    name: ReadQueryBase
    nameWithType: ReadQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`2
    name: ReadQueryBase
    nameWithType: ReadQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQuery{{TResponse}}
  commentId: T:Apizr.Mediation.Querying.IMediationQuery{`0}
  parent: Apizr.Mediation.Querying
  definition: Apizr.Mediation.Querying.IMediationQuery`1
  name: IMediationQuery<TResponse>
  nameWithType: IMediationQuery<TResponse>
  fullName: Apizr.Mediation.Querying.IMediationQuery<TResponse>
  nameWithType.vb: IMediationQuery(Of TResponse)
  fullName.vb: Apizr.Mediation.Querying.IMediationQuery(Of TResponse)
  name.vb: IMediationQuery(Of TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest{{TResponse}}
  commentId: T:MediatR.IRequest{`0}
  parent: MediatR
  definition: MediatR.IRequest`1
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: MediatR.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: MediatR.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IBaseRequest
  commentId: T:MediatR.IBaseRequest
  parent: MediatR
  isExternal: true
  name: IBaseRequest
  nameWithType: IBaseRequest
  fullName: MediatR.IBaseRequest
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase{{TResponse},System.Int32}.Key
  commentId: P:Apizr.Mediation.Cruding.Base.ReadQueryBase{`0,System.Int32}.Key
  parent: Apizr.Mediation.Cruding.Base.ReadQueryBase{{TResponse},System.Int32}
  definition: Apizr.Mediation.Cruding.Base.ReadQueryBase`2.Key
  name: Key
  nameWithType: ReadQueryBase<TResponse, Int32>.Key
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse, System.Int32>.Key
  nameWithType.vb: ReadQueryBase(Of TResponse, Int32).Key
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse, System.Int32).Key
- uid: Apizr.Mediation.Querying.MediationQueryBase{{TResponse}}.ClearCache
  commentId: P:Apizr.Mediation.Querying.MediationQueryBase{`0}.ClearCache
  parent: Apizr.Mediation.Querying.MediationQueryBase{{TResponse}}
  definition: Apizr.Mediation.Querying.MediationQueryBase`1.ClearCache
  name: ClearCache
  nameWithType: MediationQueryBase<TResponse>.ClearCache
  fullName: Apizr.Mediation.Querying.MediationQueryBase<TResponse>.ClearCache
  nameWithType.vb: MediationQueryBase(Of TResponse).ClearCache
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of TResponse).ClearCache
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{{TResponse}}.Priority
  commentId: P:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{`0}.Priority
  parent: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{{TResponse}}
  definition: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1.Priority
  name: Priority
  nameWithType: PrioritizedRequestBase<TResponse>.Priority
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<TResponse>.Priority
  nameWithType.vb: PrioritizedRequestBase(Of TResponse).Priority
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of TResponse).Priority
- uid: Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}.Context
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{`0}.Context
  parent: Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  name: Context
  nameWithType: RequestBase<TResponse>.Context
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TResponse>.Context
  nameWithType.vb: RequestBase(Of TResponse).Context
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TResponse).Context
- uid: Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}.OnException
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{`0}.OnException
  parent: Apizr.Mediation.Requesting.Base.RequestBase{{TResponse}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  name: OnException
  nameWithType: RequestBase<TResponse>.OnException
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TResponse>.OnException
  nameWithType.vb: RequestBase(Of TResponse).OnException
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TResponse).OnException
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase`1
  name: RequestBase<TFormattedModelResultData>
  nameWithType: RequestBase<TFormattedModelResultData>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>
  nameWithType.vb: RequestBase(Of TFormattedModelResultData)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData)
  name.vb: RequestBase(Of TFormattedModelResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Base
  commentId: N:Apizr.Mediation.Requesting.Base
  name: Apizr.Mediation.Requesting.Base
  nameWithType: Apizr.Mediation.Requesting.Base
  fullName: Apizr.Mediation.Requesting.Base
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
  commentId: T:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
  name: PrioritizedRequestBase<TResultData>
  nameWithType: PrioritizedRequestBase<TResultData>
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<TResultData>
  nameWithType.vb: PrioritizedRequestBase(Of TResultData)
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of TResultData)
  name.vb: PrioritizedRequestBase(Of TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.MediationQueryBase`1
  commentId: T:Apizr.Mediation.Querying.MediationQueryBase`1
  name: MediationQueryBase<TResultData>
  nameWithType: MediationQueryBase<TResultData>
  fullName: Apizr.Mediation.Querying.MediationQueryBase<TResultData>
  nameWithType.vb: MediationQueryBase(Of TResultData)
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of TResultData)
  name.vb: MediationQueryBase(Of TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying
  commentId: N:Apizr.Mediation.Querying
  name: Apizr.Mediation.Querying
  nameWithType: Apizr.Mediation.Querying
  fullName: Apizr.Mediation.Querying
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`2
  commentId: T:Apizr.Mediation.Cruding.Base.ReadQueryBase`2
  name: ReadQueryBase<TResponse, TKey>
  nameWithType: ReadQueryBase<TResponse, TKey>
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse, TKey>
  nameWithType.vb: ReadQueryBase(Of TResponse, TKey)
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse, TKey)
  name.vb: ReadQueryBase(Of TResponse, TKey)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`2
    name: ReadQueryBase
    nameWithType: ReadQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`2
    name: ReadQueryBase
    nameWithType: ReadQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQuery`1
  commentId: T:Apizr.Mediation.Querying.IMediationQuery`1
  name: IMediationQuery<TResultData>
  nameWithType: IMediationQuery<TResultData>
  fullName: Apizr.Mediation.Querying.IMediationQuery<TResultData>
  nameWithType.vb: IMediationQuery(Of TResultData)
  fullName.vb: Apizr.Mediation.Querying.IMediationQuery(Of TResultData)
  name.vb: IMediationQuery(Of TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest`1
  commentId: T:MediatR.IRequest`1
  isExternal: true
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: MediatR.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: MediatR.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`2.Key
  commentId: P:Apizr.Mediation.Cruding.Base.ReadQueryBase`2.Key
  name: Key
  nameWithType: ReadQueryBase<TResponse, TKey>.Key
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse, TKey>.Key
  nameWithType.vb: ReadQueryBase(Of TResponse, TKey).Key
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse, TKey).Key
- uid: Apizr.Mediation.Querying.MediationQueryBase`1.ClearCache
  commentId: P:Apizr.Mediation.Querying.MediationQueryBase`1.ClearCache
  name: ClearCache
  nameWithType: MediationQueryBase<TResultData>.ClearCache
  fullName: Apizr.Mediation.Querying.MediationQueryBase<TResultData>.ClearCache
  nameWithType.vb: MediationQueryBase(Of TResultData).ClearCache
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of TResultData).ClearCache
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1.Priority
  commentId: P:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1.Priority
  name: Priority
  nameWithType: PrioritizedRequestBase<TResultData>.Priority
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<TResultData>.Priority
  nameWithType.vb: PrioritizedRequestBase(Of TResultData).Priority
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of TResultData).Priority
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  name: Context
  nameWithType: RequestBase<TFormattedModelResultData>.Context
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>.Context
  nameWithType.vb: RequestBase(Of TFormattedModelResultData).Context
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData).Context
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  name: OnException
  nameWithType: RequestBase<TFormattedModelResultData>.OnException
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>.OnException
  nameWithType.vb: RequestBase(Of TFormattedModelResultData).OnException
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData).OnException
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor*
  commentId: Overload:Apizr.Mediation.Cruding.Base.ReadQueryBase`1.#ctor
  name: ReadQueryBase
  nameWithType: ReadQueryBase<TResponse>.ReadQueryBase
  fullName: Apizr.Mediation.Cruding.Base.ReadQueryBase<TResponse>.ReadQueryBase
  nameWithType.vb: ReadQueryBase(Of TResponse).ReadQueryBase
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadQueryBase(Of TResponse).ReadQueryBase
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
