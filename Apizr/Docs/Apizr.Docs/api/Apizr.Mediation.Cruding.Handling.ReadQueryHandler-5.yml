### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5
  commentId: T:Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5
  id: ReadQueryHandler`5
  parent: Apizr.Mediation.Cruding.Handling
  children:
  - Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,`2,`3,`4}})
  - Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.Handle(Apizr.Mediation.Cruding.ReadQuery{`0,`2},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  type: Class
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Handling/ReadQueryHandler.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReadQueryHandler
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Handling/ReadQueryHandler.cs
    startLine: 7
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Handling
  syntax:
    content: 'public class ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams> : ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>, IMediationQueryHandler<ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>, IRequestHandler<ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity> where TModelEntity : class where TApiEntity : class'
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    - id: TReadAllResult
    - id: TReadAllParams
    content.vb: >-
      Public Class ReadQueryHandler(Of TModelEntity As Class, TApiEntity As Class, TApiEntityKey, TReadAllResult, TReadAllParams)
          Inherits ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
          Implements IMediationQueryHandler(Of ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity), IRequestHandler(Of ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  - Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}
  implements:
  - Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}
  - MediatR.IRequestHandler{Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}
  inheritedMembers:
  - Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}.Handle(Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},System.Threading.CancellationToken)
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.CrudApiManager
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Mediation.Cruding.Handling.ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
- uid: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,`2,`3,`4}})
  commentId: M:Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,`2,`3,`4}})
  id: '#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,`2,`3,`4}})'
  parent: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5
  langs:
  - csharp
  - vb
  name: ReadQueryHandler(IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>>)
  nameWithType: ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ReadQueryHandler(IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Mediation.Cruding.Handling.ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ReadQueryHandler(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>>)
  type: Constructor
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Handling/ReadQueryHandler.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Handling/ReadQueryHandler.cs
    startLine: 13
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Handling
  syntax:
    content: public ReadQueryHandler(IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>> crudApiManager)
    parameters:
    - id: crudApiManager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}}
    content.vb: Public Sub New(crudApiManager As IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)))
  overload: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.#ctor*
  nameWithType.vb: ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ReadQueryHandler(IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Handling.ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ReadQueryHandler(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)))
  name.vb: ReadQueryHandler(IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)))
- uid: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.Handle(Apizr.Mediation.Cruding.ReadQuery{`0,`2},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.Handle(Apizr.Mediation.Cruding.ReadQuery{`0,`2},System.Threading.CancellationToken)
  id: Handle(Apizr.Mediation.Cruding.ReadQuery{`0,`2},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5
  langs:
  - csharp
  - vb
  name: Handle(ReadQuery<TModelEntity, TApiEntityKey>, CancellationToken)
  nameWithType: ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.Handle(ReadQuery<TModelEntity, TApiEntityKey>, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.Handle(Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Apizr.Integrations.MediatR/Mediation/Cruding/Handling/ReadQueryHandler.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: Handle
    path: ../../Apizr.Integrations.MediatR/Mediation/Cruding/Handling/ReadQueryHandler.cs
    startLine: 19
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Handling
  syntax:
    content: public override async Task<TModelEntity> Handle(ReadQuery<TModelEntity, TApiEntityKey> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Overrides Function Handle(request As ReadQuery(Of TModelEntity, TApiEntityKey), cancellationToken As CancellationToken) As Task(Of TModelEntity)
  overridden: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}.Handle(Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},System.Threading.CancellationToken)
  overload: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.Handle*
  nameWithType.vb: ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).Handle(ReadQuery(Of TModelEntity, TApiEntityKey), CancellationToken)
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Apizr.Mediation.Cruding.Handling.ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).Handle(Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey), System.Threading.CancellationToken)
  name.vb: Handle(ReadQuery(Of TModelEntity, TApiEntityKey), CancellationToken)
references:
- uid: Apizr.Mediation.Cruding.Handling
  commentId: N:Apizr.Mediation.Cruding.Handling
  name: Apizr.Mediation.Cruding.Handling
  nameWithType: Apizr.Mediation.Cruding.Handling
  fullName: Apizr.Mediation.Cruding.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  parent: Apizr.Mediation.Requesting.Handling.Base
  name: RequestHandlerBase
  nameWithType: RequestHandlerBase
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,`2,`3,`4}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{`0,`1,`2,`3,`4,Apizr.Mediation.Cruding.ReadQuery{`0,`2},`0}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7
  name: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  name.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}
  commentId: T:Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Mediation.Cruding.ReadQuery{`0,`2},`0}
  parent: Apizr.Mediation.Querying
  definition: Apizr.Mediation.Querying.IMediationQueryHandler`2
  name: IMediationQueryHandler<ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  nameWithType: IMediationQueryHandler<ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  fullName: Apizr.Mediation.Querying.IMediationQueryHandler<Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  nameWithType.vb: IMediationQueryHandler(Of ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  fullName.vb: Apizr.Mediation.Querying.IMediationQueryHandler(Of Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  name.vb: IMediationQueryHandler(Of ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}
  commentId: T:MediatR.IRequestHandler{Apizr.Mediation.Cruding.ReadQuery{`0,`2},`0}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  nameWithType: IRequestHandler<ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  fullName: MediatR.IRequestHandler<Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>
  nameWithType.vb: IRequestHandler(Of ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  name.vb: IRequestHandler(Of ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}.Handle(Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{`0,`1,`2,`3,`4,Apizr.Mediation.Cruding.ReadQuery{`0,`2},`0}.Handle(Apizr.Mediation.Cruding.ReadQuery{`0,`2},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}},{TModelEntity}}
  definition: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7.Handle(`5,System.Threading.CancellationToken)
  name: Handle(ReadQuery<TModelEntity, TApiEntityKey>, CancellationToken)
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>.Handle(ReadQuery<TModelEntity, TApiEntityKey>, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>.Handle(Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>, System.Threading.CancellationToken)
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity).Handle(ReadQuery(Of TModelEntity, TApiEntityKey), CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity).Handle(Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey), System.Threading.CancellationToken)
  name.vb: Handle(ReadQuery(Of TModelEntity, TApiEntityKey), CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>, TModelEntity>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey), TModelEntity).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,`2,`3,`4}.CrudApiManager
  parent: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base
  commentId: N:Apizr.Mediation.Cruding.Handling.Base
  name: Apizr.Mediation.Cruding.Handling.Base
  nameWithType: Apizr.Mediation.Cruding.Handling.Base
  fullName: Apizr.Mediation.Cruding.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7
  name: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult>
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult>
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult>
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult)
  name.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryResult
    nameWithType: TQueryResult
    fullName: TQueryResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryResult
    nameWithType: TQueryResult
    fullName: TQueryResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
  commentId: T:Apizr.Mediation.Querying.IMediationQueryHandler`2
  name: IMediationQueryHandler<TQuery, TResponse>
  nameWithType: IMediationQueryHandler<TQuery, TResponse>
  fullName: Apizr.Mediation.Querying.IMediationQueryHandler<TQuery, TResponse>
  nameWithType.vb: IMediationQueryHandler(Of TQuery, TResponse)
  fullName.vb: Apizr.Mediation.Querying.IMediationQueryHandler(Of TQuery, TResponse)
  name.vb: IMediationQueryHandler(Of TQuery, TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying
  commentId: N:Apizr.Mediation.Querying
  name: Apizr.Mediation.Querying
  nameWithType: Apizr.Mediation.Querying
  fullName: Apizr.Mediation.Querying
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7.Handle(`5,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7.Handle(`5,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TQuery, CancellationToken)
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle(TQuery, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle(TQuery, System.Threading.CancellationToken)
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle(TQuery, CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle(TQuery, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`7.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.#ctor*
  commentId: Overload:Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.#ctor
  name: ReadQueryHandler
  nameWithType: ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ReadQueryHandler
  fullName: Apizr.Mediation.Cruding.Handling.ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ReadQueryHandler
  nameWithType.vb: ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ReadQueryHandler
  fullName.vb: Apizr.Mediation.Cruding.Handling.ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ReadQueryHandler
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,`2,`3,`4}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>>
  nameWithType: IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams))
  name.vb: IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.Handle*
  commentId: Overload:Apizr.Mediation.Cruding.Handling.ReadQueryHandler`5.Handle
  name: Handle
  nameWithType: ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.Handle
  fullName: Apizr.Mediation.Cruding.Handling.ReadQueryHandler<TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.Handle
  nameWithType.vb: ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).Handle
  fullName.vb: Apizr.Mediation.Cruding.Handling.ReadQueryHandler(Of TModelEntity, TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).Handle
- uid: Apizr.Mediation.Cruding.ReadQuery{{TModelEntity},{TApiEntityKey}}
  commentId: T:Apizr.Mediation.Cruding.ReadQuery{`0,`2}
  parent: Apizr.Mediation.Cruding
  definition: Apizr.Mediation.Cruding.ReadQuery`2
  name: ReadQuery<TModelEntity, TApiEntityKey>
  nameWithType: ReadQuery<TModelEntity, TApiEntityKey>
  fullName: Apizr.Mediation.Cruding.ReadQuery<TModelEntity, TApiEntityKey>
  nameWithType.vb: ReadQuery(Of TModelEntity, TApiEntityKey)
  fullName.vb: Apizr.Mediation.Cruding.ReadQuery(Of TModelEntity, TApiEntityKey)
  name.vb: ReadQuery(Of TModelEntity, TApiEntityKey)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TModelEntity}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelEntity>
  nameWithType: Task<TModelEntity>
  fullName: System.Threading.Tasks.Task<TModelEntity>
  nameWithType.vb: Task(Of TModelEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TModelEntity)
  name.vb: Task(Of TModelEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.ReadQuery`2
  commentId: T:Apizr.Mediation.Cruding.ReadQuery`2
  name: ReadQuery<TResultData, TKey>
  nameWithType: ReadQuery<TResultData, TKey>
  fullName: Apizr.Mediation.Cruding.ReadQuery<TResultData, TKey>
  nameWithType.vb: ReadQuery(Of TResultData, TKey)
  fullName.vb: Apizr.Mediation.Cruding.ReadQuery(Of TResultData, TKey)
  name.vb: ReadQuery(Of TResultData, TKey)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    nameWithType: ReadQuery
    fullName: Apizr.Mediation.Cruding.ReadQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding
  commentId: N:Apizr.Mediation.Cruding
  name: Apizr.Mediation.Cruding
  nameWithType: Apizr.Mediation.Cruding
  fullName: Apizr.Mediation.Cruding
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
