### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4
  commentId: T:Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4
  id: UpdateCommandHandler`4
  parent: Apizr.Mediation.Cruding.Handling
  children:
  - Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  - Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.Handle(Apizr.Mediation.Cruding.UpdateCommand{`0},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  nameWithType: UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  type: Class
  source:
    id: UpdateCommandHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Handling\UpdateCommandHandler.cs
    startLine: 33
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Handling
  syntax:
    content: 'public class UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams> : UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand<TModelEntity>>, IMediationCommandHandler<UpdateCommand<TModelEntity>, Unit>, IRequestHandler<UpdateCommand<TModelEntity>, Unit> where TModelEntity : class where TApiEntity : class'
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TReadAllResult
    - id: TReadAllParams
    content.vb: >-
      Public Class UpdateCommandHandler(Of TModelEntity As Class, TApiEntity As Class, TReadAllResult, TReadAllParams)

          Inherits UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand(Of TModelEntity))

          Implements IMediationCommandHandler(Of UpdateCommand(Of TModelEntity), Unit), IRequestHandler(Of UpdateCommand(Of TModelEntity), Unit)
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  - Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}}
  implements:
  - Apizr.Mediation.Commanding.IMediationCommandHandler{Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}},MediatR.Unit}
  - MediatR.IRequestHandler{Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}},MediatR.Unit}
  inheritedMembers:
  - Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}}.Handle(Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}},System.Threading.CancellationToken)
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}.CrudApiManager
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
  name.vb: UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
- uid: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  commentId: M:Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  id: '#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})'
  parent: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4
  langs:
  - csharp
  - vb
  name: UpdateCommandHandler(IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>)
  nameWithType: UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.UpdateCommandHandler(IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.UpdateCommandHandler(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Handling\UpdateCommandHandler.cs
    startLine: 38
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Handling
  syntax:
    content: public UpdateCommandHandler(IApizrManager<ICrudApi<TApiEntity, int, TReadAllResult, TReadAllParams>> crudApiManager)
    parameters:
    - id: crudApiManager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}}
    content.vb: Public Sub New(crudApiManager As IApizrManager(Of ICrudApi(Of TApiEntity, Integer, TReadAllResult, TReadAllParams)))
  overload: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.#ctor*
  nameWithType.vb: UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).UpdateCommandHandler(IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).UpdateCommandHandler(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams)))
  name.vb: UpdateCommandHandler(IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)))
- uid: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.Handle(Apizr.Mediation.Cruding.UpdateCommand{`0},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.Handle(Apizr.Mediation.Cruding.UpdateCommand{`0},System.Threading.CancellationToken)
  id: Handle(Apizr.Mediation.Cruding.UpdateCommand{`0},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4
  langs:
  - csharp
  - vb
  name: Handle(UpdateCommand<TModelEntity>, CancellationToken)
  nameWithType: UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle(UpdateCommand<TModelEntity>, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle(Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Handle
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Handling\UpdateCommandHandler.cs
    startLine: 44
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Handling
  syntax:
    content: public override async Task<Unit> Handle(UpdateCommand<TModelEntity> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{MediatR.Unit}
    content.vb: Public Overrides Function Handle(request As UpdateCommand(Of TModelEntity), cancellationToken As CancellationToken) As Task(Of Unit)
  overridden: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}}.Handle(Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}},System.Threading.CancellationToken)
  overload: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.Handle*
  nameWithType.vb: UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle(UpdateCommand(Of TModelEntity), CancellationToken)
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle(Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity), System.Threading.CancellationToken)
  name.vb: Handle(UpdateCommand(Of TModelEntity), CancellationToken)
references:
- uid: Apizr.Mediation.Cruding.Handling
  commentId: N:Apizr.Mediation.Cruding.Handling
  name: Apizr.Mediation.Cruding.Handling
  nameWithType: Apizr.Mediation.Cruding.Handling
  fullName: Apizr.Mediation.Cruding.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  parent: Apizr.Mediation.Requesting.Handling.Base
  name: RequestHandlerBase
  nameWithType: RequestHandlerBase
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,System.Int32,`2,`3}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{`0,`1,`2,`3,Apizr.Mediation.Cruding.UpdateCommand{`0}}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5
  name: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand<TModelEntity>>
  nameWithType: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand<TModelEntity>>
  fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>>
  nameWithType.vb: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand(Of TModelEntity))
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity))
  name.vb: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand(Of TModelEntity))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5
    name: UpdateCommandHandlerBase
    nameWithType: UpdateCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5
    name: UpdateCommandHandlerBase
    nameWithType: UpdateCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommandHandler{Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}},MediatR.Unit}
  commentId: T:Apizr.Mediation.Commanding.IMediationCommandHandler{Apizr.Mediation.Cruding.UpdateCommand{`0},MediatR.Unit}
  parent: Apizr.Mediation.Commanding
  definition: Apizr.Mediation.Commanding.IMediationCommandHandler`2
  name: IMediationCommandHandler<UpdateCommand<TModelEntity>, Unit>
  nameWithType: IMediationCommandHandler<UpdateCommand<TModelEntity>, Unit>
  fullName: Apizr.Mediation.Commanding.IMediationCommandHandler<Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>, MediatR.Unit>
  nameWithType.vb: IMediationCommandHandler(Of UpdateCommand(Of TModelEntity), Unit)
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommandHandler(Of Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity), MediatR.Unit)
  name.vb: IMediationCommandHandler(Of UpdateCommand(Of TModelEntity), Unit)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}},MediatR.Unit}
  commentId: T:MediatR.IRequestHandler{Apizr.Mediation.Cruding.UpdateCommand{`0},MediatR.Unit}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<UpdateCommand<TModelEntity>, Unit>
  nameWithType: IRequestHandler<UpdateCommand<TModelEntity>, Unit>
  fullName: MediatR.IRequestHandler<Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>, MediatR.Unit>
  nameWithType.vb: IRequestHandler(Of UpdateCommand(Of TModelEntity), Unit)
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity), MediatR.Unit)
  name.vb: IRequestHandler(Of UpdateCommand(Of TModelEntity), Unit)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}}.Handle(Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{`0,`1,`2,`3,Apizr.Mediation.Cruding.UpdateCommand{`0}}.Handle(Apizr.Mediation.Cruding.UpdateCommand{`0},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}}
  definition: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5.Handle(`4,System.Threading.CancellationToken)
  name: Handle(UpdateCommand<TModelEntity>, CancellationToken)
  nameWithType: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand<TModelEntity>>.Handle(UpdateCommand<TModelEntity>, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>>.Handle(Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>, System.Threading.CancellationToken)
  nameWithType.vb: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand(Of TModelEntity)).Handle(UpdateCommand(Of TModelEntity), CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity)).Handle(Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity), System.Threading.CancellationToken)
  name.vb: Handle(UpdateCommand(Of TModelEntity), CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand<TModelEntity>>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, UpdateCommand(Of TModelEntity)).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity)).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,System.Int32,`2,`3}.CrudApiManager
  parent: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams).CrudApiManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base
  commentId: N:Apizr.Mediation.Cruding.Handling.Base
  name: Apizr.Mediation.Cruding.Handling.Base
  nameWithType: Apizr.Mediation.Cruding.Handling.Base
  fullName: Apizr.Mediation.Cruding.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5
  name: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand>
  nameWithType: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand>
  fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand>
  nameWithType.vb: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand)
  name.vb: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5
    name: UpdateCommandHandlerBase
    nameWithType: UpdateCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5
    name: UpdateCommandHandlerBase
    nameWithType: UpdateCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
  commentId: T:Apizr.Mediation.Commanding.IMediationCommandHandler`2
  name: IMediationCommandHandler<TCommand, TResponse>
  nameWithType: IMediationCommandHandler<TCommand, TResponse>
  fullName: Apizr.Mediation.Commanding.IMediationCommandHandler<TCommand, TResponse>
  nameWithType.vb: IMediationCommandHandler(Of TCommand, TResponse)
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommandHandler(Of TCommand, TResponse)
  name.vb: IMediationCommandHandler(Of TCommand, TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding
  commentId: N:Apizr.Mediation.Commanding
  name: Apizr.Mediation.Commanding
  nameWithType: Apizr.Mediation.Commanding
  fullName: Apizr.Mediation.Commanding
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5.Handle(`4,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5.Handle(`4,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TCommand, CancellationToken)
  nameWithType: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand>.Handle(TCommand, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand>.Handle(TCommand, System.Threading.CancellationToken)
  nameWithType.vb: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand).Handle(TCommand, CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand).Handle(TCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase`5.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.UpdateCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.#ctor*
  commentId: Overload:Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.#ctor
  name: UpdateCommandHandler
  nameWithType: UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.UpdateCommandHandler
  fullName: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.UpdateCommandHandler
  nameWithType.vb: UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).UpdateCommandHandler
  fullName.vb: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).UpdateCommandHandler
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>
  nameWithType: IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams))
  name.vb: IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.Handle*
  commentId: Overload:Apizr.Mediation.Cruding.Handling.UpdateCommandHandler`4.Handle
  name: Handle
  nameWithType: UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle
  fullName: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle
  nameWithType.vb: UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle
  fullName.vb: Apizr.Mediation.Cruding.Handling.UpdateCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle
- uid: Apizr.Mediation.Cruding.UpdateCommand{{TModelEntity}}
  commentId: T:Apizr.Mediation.Cruding.UpdateCommand{`0}
  parent: Apizr.Mediation.Cruding
  definition: Apizr.Mediation.Cruding.UpdateCommand`1
  name: UpdateCommand<TModelEntity>
  nameWithType: UpdateCommand<TModelEntity>
  fullName: Apizr.Mediation.Cruding.UpdateCommand<TModelEntity>
  nameWithType.vb: UpdateCommand(Of TModelEntity)
  fullName.vb: Apizr.Mediation.Cruding.UpdateCommand(Of TModelEntity)
  name.vb: UpdateCommand(Of TModelEntity)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{MediatR.Unit}
  commentId: T:System.Threading.Tasks.Task{MediatR.Unit}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Unit>
  nameWithType: Task<Unit>
  fullName: System.Threading.Tasks.Task<MediatR.Unit>
  nameWithType.vb: Task(Of Unit)
  fullName.vb: System.Threading.Tasks.Task(Of MediatR.Unit)
  name.vb: Task(Of Unit)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.UpdateCommand`1
  commentId: T:Apizr.Mediation.Cruding.UpdateCommand`1
  name: UpdateCommand<TRequestData>
  nameWithType: UpdateCommand<TRequestData>
  fullName: Apizr.Mediation.Cruding.UpdateCommand<TRequestData>
  nameWithType.vb: UpdateCommand(Of TRequestData)
  fullName.vb: Apizr.Mediation.Cruding.UpdateCommand(Of TRequestData)
  name.vb: UpdateCommand(Of TRequestData)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.UpdateCommand`1
    name: UpdateCommand
    nameWithType: UpdateCommand
    fullName: Apizr.Mediation.Cruding.UpdateCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding
  commentId: N:Apizr.Mediation.Cruding
  name: Apizr.Mediation.Cruding
  nameWithType: Apizr.Mediation.Cruding
  fullName: Apizr.Mediation.Cruding
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
