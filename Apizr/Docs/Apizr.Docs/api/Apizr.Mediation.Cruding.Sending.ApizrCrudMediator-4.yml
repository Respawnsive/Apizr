### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  commentId: T:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  id: ApizrCrudMediator`4
  parent: Apizr.Mediation.Cruding.Sending
  children:
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.#ctor(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator)
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  - Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  langs:
  - csharp
  - vb
  name: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  type: Class
  source:
    id: ApizrCrudMediator
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 361
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: 'public class ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams> : IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>, IApizrCrudMediatorBase, IApizrMediatorBase where TApiEntity : class'
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    - id: TReadAllResult
    - id: TReadAllParams
    content.vb: >-
      Public Class ApizrCrudMediator(Of TApiEntity As Class, TApiEntityKey, TReadAllResult, TReadAllParams)
          Implements IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams), IApizrCrudMediatorBase, IApizrMediatorBase
  inheritance:
  - System.Object
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  - Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.#ctor(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator)
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.#ctor(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator)
  id: '#ctor(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator)'
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: ApizrCrudMediator(IApizrCrudMediator)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ApizrCrudMediator(IApizrCrudMediator)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ApizrCrudMediator(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 365
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public ApizrCrudMediator(IApizrCrudMediator apizrMediator)
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
    content.vb: Public Sub New(apizrMediator As IApizrCrudMediator)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.#ctor*
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ApizrCrudMediator(IApizrCrudMediator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ApizrCrudMediator(Apizr.Mediation.Cruding.Sending.IApizrCrudMediator)
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
  id: SendCreateCommand(`0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand(TApiEntity, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 374
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendCreateCommand(TApiEntity entity, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendCreateCommand(entity As TApiEntity, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  id: SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand(TApiEntity, Context, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Polly.Context, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 377
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendCreateCommand(TApiEntity entity, Context context, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendCreateCommand(entity As TApiEntity, context As Context, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},Polly.Context,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Context, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Context, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand(TApiEntity, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 380
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendCreateCommand(TApiEntity entity, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendCreateCommand(entity As TApiEntity, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand(TApiEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 384
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendCreateCommand(TApiEntity entity, Context context, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendCreateCommand(entity As TApiEntity, context As Context, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Context, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Context, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
  id: SendCreateCommand``1(``0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand<TModelEntity>(TModelEntity, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 392
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendCreateCommand<TModelEntity>(TModelEntity entity, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendCreateCommand(Of TModelEntity)(entity As TModelEntity, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  id: SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand<TModelEntity>(TModelEntity, Context, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Polly.Context, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 395
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendCreateCommand<TModelEntity>(TModelEntity entity, Context context, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendCreateCommand(Of TModelEntity)(entity As TModelEntity, context As Context, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},Polly.Context,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Context, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Context, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand<TModelEntity>(TModelEntity, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 398
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendCreateCommand<TModelEntity>(TModelEntity entity, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendCreateCommand(Of TModelEntity)(entity As TModelEntity, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateCommand<TModelEntity>(TModelEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendCreateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 402
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendCreateCommand<TModelEntity>(TModelEntity entity, Context context, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendCreateCommand(Of TModelEntity)(entity As TModelEntity, context As Context, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Context, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Context, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 414
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 416
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 419
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(Int32, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 422
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(int priority, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(priority As Integer, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(Int32, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 425
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(int priority, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(priority As Integer, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 428
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(int priority, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 432
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 436
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(int priority, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 444
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 447
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 450
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(Int32, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 454
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(int priority, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(priority As Integer, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 457
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(int priority, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(Int32, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 461
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(int priority, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(priority As Integer, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 465
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 469
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(int priority, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 477
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 480
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 484
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, Int32, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 488
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, int priority, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, priority As Integer, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 492
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, int priority, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, priority As Integer, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 496
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, int priority, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 502
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 506
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TReadAllResult> SendReadAllQuery(TReadAllParams readAllParams, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TReadAllResult}}
    content.vb: Public Function SendReadAllQuery(readAllParams As TReadAllParams, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 514
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 518
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 522
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 527
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, int priority, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, priority As Integer, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 531
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, int priority, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, priority As Integer, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 535
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, int priority, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 541
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadAllQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 547
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelReadAllResult> SendReadAllQuery<TModelReadAllResult>(TReadAllParams readAllParams, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelReadAllResult
    return:
      type: System.Threading.Tasks.Task{{TModelReadAllResult}}
    content.vb: Public Function SendReadAllQuery(Of TModelReadAllResult)(readAllParams As TReadAllParams, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelReadAllResult)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 561
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 564
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 567
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, Int32, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 571
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, int priority, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, priority As Integer, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 575
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 579
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, int priority, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, priority As Integer, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 582
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, int priority, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 587
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TApiEntity> SendReadQuery(TApiEntityKey key, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task{{TApiEntity}}
    content.vb: Public Function SendReadQuery(key As TApiEntityKey, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TApiEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 595
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 598
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 602
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 606
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, int priority, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, priority As Integer, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 610
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 614
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, int priority, Context context, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, priority As Integer, context As Context, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 618
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, int priority, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  id: SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  type: Method
  source:
    id: SendReadQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 623
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task<TModelEntity> SendReadQuery<TModelEntity>(TApiEntityKey key, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task{{TModelEntity}}
    content.vb: Public Function SendReadQuery(Of TModelEntity)(key As TApiEntityKey, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False, onException As Action(Of Exception) = Nothing) As Task(Of TModelEntity)
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
  id: SendUpdateCommand(`1,`0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 635
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand(TApiEntityKey key, TApiEntity entity, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(key As TApiEntityKey, entity As TApiEntity, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  id: SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 639
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand(TApiEntityKey key, TApiEntity entity, Context context, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(key As TApiEntityKey, entity As TApiEntity, context As Context, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},Polly.Context,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 642
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand(TApiEntityKey key, TApiEntity entity, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(key As TApiEntityKey, entity As TApiEntity, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 647
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand(TApiEntityKey key, TApiEntity entity, Context context, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(key As TApiEntityKey, entity As TApiEntity, context As Context, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  id: SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 655
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand<TModelEntity>(TApiEntityKey key, TModelEntity entity, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(Of TModelEntity)(key As TApiEntityKey, entity As TModelEntity, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  id: SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Polly.Context, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 659
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand<TModelEntity>(TApiEntityKey key, TModelEntity entity, Context context, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(Of TModelEntity)(key As TApiEntityKey, entity As TModelEntity, context As Context, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},Polly.Context,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 662
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand<TModelEntity>(TApiEntityKey key, TModelEntity entity, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(Of TModelEntity)(key As TApiEntityKey, entity As TModelEntity, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendUpdateCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 667
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendUpdateCommand<TModelEntity>(TApiEntityKey key, TModelEntity entity, Context context, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    typeParameters:
    - id: TModelEntity
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendUpdateCommand(Of TModelEntity)(key As TApiEntityKey, entity As TModelEntity, context As Context, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
  id: SendDeleteCommand(`1,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendDeleteCommand(TApiEntityKey, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, System.Action<System.Exception>)
  type: Method
  source:
    id: SendDeleteCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 677
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendDeleteCommand(TApiEntityKey key, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendDeleteCommand(key As TApiEntityKey, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  id: SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendDeleteCommand(TApiEntityKey, Context, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Polly.Context, System.Action<System.Exception>)
  type: Method
  source:
    id: SendDeleteCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 680
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendDeleteCommand(TApiEntityKey key, Context context, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendDeleteCommand(key As TApiEntityKey, context As Context, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},Polly.Context,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Context, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Context, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendDeleteCommand(TApiEntityKey, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendDeleteCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 683
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendDeleteCommand(TApiEntityKey key, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendDeleteCommand(key As TApiEntityKey, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, CancellationToken, Action(Of Exception))
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  id: SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4
  langs:
  - csharp
  - vb
  name: SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  type: Method
  source:
    id: SendDeleteCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.MediatR\Mediation\Cruding\Sending\ApizrCrudMediator.cs
    startLine: 687
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Cruding.Sending
  syntax:
    content: public Task SendDeleteCommand(TApiEntityKey key, Context context, CancellationToken cancellationToken, Action<Exception> onException = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: onException
      type: System.Action{System.Exception}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendDeleteCommand(key As TApiEntityKey, context As Context, cancellationToken As CancellationToken, onException As Action(Of Exception) = Nothing) As Task
  overload: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand*
  implements:
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action(Of Exception))
references:
- uid: Apizr.Mediation.Cruding.Sending
  commentId: N:Apizr.Mediation.Cruding.Sending
  name: Apizr.Mediation.Cruding.Sending
  nameWithType: Apizr.Mediation.Cruding.Sending
  fullName: Apizr.Mediation.Cruding.Sending
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}
  parent: Apizr.Mediation.Cruding.Sending
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  name: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  parent: Apizr.Mediation.Cruding.Sending
  name: IApizrCrudMediatorBase
  nameWithType: IApizrCrudMediatorBase
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  parent: Apizr.Mediation.Requesting.Sending
  name: IApizrMediatorBase
  nameWithType: IApizrMediatorBase
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
  name: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4
    name: IApizrCrudMediator
    nameWithType: IApizrCrudMediator
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending
  commentId: N:Apizr.Mediation.Requesting.Sending
  name: Apizr.Mediation.Requesting.Sending
  nameWithType: Apizr.Mediation.Requesting.Sending
  fullName: Apizr.Mediation.Requesting.Sending
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.#ctor*
  commentId: Overload:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.#ctor
  name: ApizrCrudMediator
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ApizrCrudMediator
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.ApizrCrudMediator
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ApizrCrudMediator
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).ApizrCrudMediator
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
  parent: Apizr.Mediation.Cruding.Sending
  name: IApizrCrudMediator
  nameWithType: IApizrCrudMediator
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand*
  commentId: Overload:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendCreateCommand
  name: SendCreateCommand
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand(`0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
  name: SendCreateCommand(TApiEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApiEntity}'
  commentId: '!:TApiEntity'
  definition: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TApiEntity}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TApiEntity>
  nameWithType: Task<TApiEntity>
  fullName: System.Threading.Tasks.Task<TApiEntity>
  nameWithType.vb: Task(Of TApiEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TApiEntity)
  name.vb: Task(Of TApiEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand(TApiEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  name: SendCreateCommand(TApiEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand(TApiEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendCreateCommand(TApiEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand(TApiEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand({TApiEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendCreateCommand(TApiEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand(TApiEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand(TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(TApiEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand(`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand``1(``0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
  name: SendCreateCommand<TModelEntity>(TModelEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TModelEntity}'
  commentId: '!:TModelEntity'
  definition: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: System.Threading.Tasks.Task{{TModelEntity}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelEntity>
  nameWithType: Task<TModelEntity>
  fullName: System.Threading.Tasks.Task<TModelEntity>
  nameWithType.vb: Task(Of TModelEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TModelEntity)
  name.vb: Task(Of TModelEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand<TModelEntity>(TModelEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  name: SendCreateCommand<TModelEntity>(TModelEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand<TModelEntity>(TModelEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendCreateCommand<TModelEntity>(TModelEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand<TModelEntity>(TModelEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendCreateCommand``1({TModelEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendCreateCommand<TModelEntity>(TModelEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendCreateCommand<TModelEntity>(TModelEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>(TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)(TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendCreateCommand(Of TModelEntity)(TModelEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendCreateCommand``1(``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendCreateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery*
  commentId: Overload:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadAllQuery
  name: SendReadAllQuery
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{{TReadAllResult}}
  commentId: T:System.Threading.Tasks.Task{`2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TReadAllResult>
  nameWithType: Task<TReadAllResult>
  fullName: System.Threading.Tasks.Task<TReadAllResult>
  nameWithType.vb: Task(Of TReadAllResult)
  fullName.vb: System.Threading.Tasks.Task(Of TReadAllResult)
  name.vb: Task(Of TReadAllResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TModelReadAllResult}}
  commentId: T:System.Threading.Tasks.Task{`2}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelReadAllResult>
  nameWithType: Task<TModelReadAllResult>
  fullName: System.Threading.Tasks.Task<TModelReadAllResult>
  nameWithType.vb: Task(Of TModelReadAllResult)
  fullName.vb: System.Threading.Tasks.Task(Of TModelReadAllResult)
  name.vb: Task(Of TModelReadAllResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TReadAllParams}'
  commentId: '!:TReadAllParams'
  definition: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadAllQuery``1({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelReadAllResult)(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadAllQuery(Of TModelEntityReadAllResult)(TReadAllParams, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery<TModelEntityReadAllResult>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllQuery<TModelEntityReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadAllQuery``1(`3,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadAllQuery(Of TModelEntityReadAllResult)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllQuery(Of TModelEntityReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery*
  commentId: Overload:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendReadQuery
  name: SendReadQuery
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApiEntityKey}'
  commentId: '!:TApiEntityKey'
  definition: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendReadQuery``1({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendReadQuery(Of TModelEntity)(TApiEntityKey, Int32, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadQuery<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendReadQuery``1(`1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendReadQuery(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadQuery(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand*
  commentId: Overload:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendUpdateCommand
  name: SendUpdateCommand
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand(`1,`0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand({TApiEntityKey},{TApiEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(TApiEntityKey, TApiEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand(`1,`0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendUpdateCommand``1({TApiEntityKey},{TModelEntity},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendUpdateCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand<TModelEntity>
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateCommand<TModelEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendUpdateCommand``1(`1,``0,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendUpdateCommand(Of TModelEntity)
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateCommand(Of TModelEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand*
  commentId: Overload:Apizr.Mediation.Cruding.Sending.ApizrCrudMediator`4.SendDeleteCommand
  name: SendDeleteCommand
  nameWithType: ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  fullName: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  nameWithType.vb: ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  fullName.vb: Apizr.Mediation.Cruding.Sending.ApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendDeleteCommand(`1,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
  name: SendDeleteCommand(TApiEntityKey, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
  isExternal: true
  name: SendDeleteCommand(TApiEntityKey, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  name: SendDeleteCommand(TApiEntityKey, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
  isExternal: true
  name: SendDeleteCommand(TApiEntityKey, Context, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Context, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendDeleteCommand(TApiEntityKey, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendDeleteCommand(TApiEntityKey, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}.SendDeleteCommand({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{`0,`1,`2,`3}.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator{{TApiEntity},{TApiEntityKey},{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action<Exception>)
  nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendDeleteCommand(TApiEntityKey, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator`4.SendDeleteCommand(`1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendDeleteCommand
    nameWithType: IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
    fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteCommand
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
