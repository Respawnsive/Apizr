### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  commentId: T:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  id: ApizrMediatorFileTransferExtensions
  parent: Apizr.Mediation.Extending
  children:
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: ApizrMediatorFileTransferExtensions
  nameWithType: ApizrMediatorFileTransferExtensions
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  type: Class
  source:
    id: ApizrMediatorFileTransferExtensions
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 12
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  syntax:
    content: public static class ApizrMediatorFileTransferExtensions
    content.vb: Public Module ApizrMediatorFileTransferExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadQueryFor<TDownloadApi, TDownloadParams>(IApizrMediator, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi, TDownloadParams>(IApizrMediator, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi, TDownloadParams>(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendDownloadQueryFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 26
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a download query to Apizr using MediatR for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TDownloadApi</code> with a custom query parameters type\n"
  example: []
  syntax:
    content: >-
      public static Task<FileInfo> SendDownloadQueryFor<TDownloadApi, TDownloadParams>(this IApizrMediator apizrMediator, FileInfo fileInfo, TDownloadParams downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: '{TDownloadParams}'
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendDownloadQueryFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(apizrMediator As IApizrMediator, fileInfo As FileInfo, downloadParams As TDownloadParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi, TDownloadParams)(IApizrMediator, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi, TDownloadParams)(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadQueryFor(Of TDownloadApi, TDownloadParams)(IApizrMediator, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadQueryFor<TDownloadApi, TDownloadParams>(IApizrMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi, TDownloadParams>(IApizrMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi, TDownloadParams>(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendDownloadQueryFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 43
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a download query to Apizr using MediatR for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TDownloadApi</code>\n"
  example: []
  syntax:
    content: >-
      public static Task<FileInfo> SendDownloadQueryFor<TDownloadApi, TDownloadParams>(this IApizrMediator apizrMediator, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi<TDownloadParams>
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendDownloadQueryFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(apizrMediator As IApizrMediator, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi, TDownloadParams)(IApizrMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi, TDownloadParams)(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadQueryFor(Of TDownloadApi, TDownloadParams)(IApizrMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadQueryFor<TDownloadApi>(IApizrMediator, FileInfo, IDictionary<String, Object>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi>(IApizrMediator, FileInfo, IDictionary<String, Object>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendDownloadQueryFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 59
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a download query to Apizr using MediatR for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TDownloadApi</code> with a dictionary query parameters type\n"
  example: []
  syntax:
    content: >-
      public static Task<FileInfo> SendDownloadQueryFor<TDownloadApi>(this IApizrMediator apizrMediator, FileInfo fileInfo, IDictionary<string, object> downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendDownloadQueryFor(Of TDownloadApi As IDownloadApi)(apizrMediator As IApizrMediator, fileInfo As FileInfo, downloadParams As IDictionary(Of String, Object), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi)(IApizrMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadQueryFor(Of TDownloadApi)(IApizrMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadQueryFor<TDownloadApi>(IApizrMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi>(IApizrMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor<TDownloadApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendDownloadQueryFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 74
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a download query to Apizr using MediatR for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TDownloadApi</code>\n"
  example: []
  syntax:
    content: >-
      public static Task<FileInfo> SendDownloadQueryFor<TDownloadApi>(this IApizrMediator apizrMediator, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
          where TDownloadApi : IDownloadApi
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendDownloadQueryFor(Of TDownloadApi As IDownloadApi)(apizrMediator As IApizrMediator, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi)(IApizrMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor(Of TDownloadApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadQueryFor(Of TDownloadApi)(IApizrMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadQuery(IApizrMediator, FileInfo, IDictionary<String, Object>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQuery(IApizrMediator, FileInfo, IDictionary<String, Object>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendDownloadQuery
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 89
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a download query to Apizr using MediatR for <xref href=\"Apizr.Transferring.Requesting.IDownloadApi\" data-throw-if-not-resolved=\"false\"></xref> with a dictionary query parameters type\n"
  example: []
  syntax:
    content: public static Task<FileInfo> SendDownloadQuery(this IApizrMediator apizrMediator, FileInfo fileInfo, IDictionary<string, object> downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendDownloadQuery(apizrMediator As IApizrMediator, fileInfo As FileInfo, downloadParams As IDictionary(Of String, Object), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendDownloadQuery(IApizrMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadQuery(IApizrMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadQuery(IApizrMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQuery(IApizrMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendDownloadQuery
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 102
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a download query to Apizr using MediatR for <xref href=\"Apizr.Transferring.Requesting.IDownloadApi\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static Task<FileInfo> SendDownloadQuery(this IApizrMediator apizrMediator, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendDownloadQuery(apizrMediator As IApizrMediator, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendDownloadQuery(IApizrMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadQuery(IApizrMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadCommandFor<TUploadApi>(IApizrMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommandFor<TUploadApi>(IApizrMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor<TUploadApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendUploadCommandFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 120
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a upload command to Apizr using MediatR for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TUploadApi</code> from file bytes data\n"
  example: []
  syntax:
    content: >-
      public static Task SendUploadCommandFor<TUploadApi>(this IApizrMediator apizrMediator, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendUploadCommandFor(Of TUploadApi As IUploadApi)(apizrMediator As IApizrMediator, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendUploadCommandFor(Of TUploadApi)(IApizrMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor(Of TUploadApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadCommandFor(Of TUploadApi)(IApizrMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadCommandFor<TUploadApi>(IApizrMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommandFor<TUploadApi>(IApizrMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor<TUploadApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendUploadCommandFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 135
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a upload command to Apizr using MediatR for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TUploadApi</code> from file stream data\n"
  example: []
  syntax:
    content: >-
      public static Task SendUploadCommandFor<TUploadApi>(this IApizrMediator apizrMediator, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendUploadCommandFor(Of TUploadApi As IUploadApi)(apizrMediator As IApizrMediator, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendUploadCommandFor(Of TUploadApi)(IApizrMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor(Of TUploadApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadCommandFor(Of TUploadApi)(IApizrMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadCommandFor<TUploadApi>(IApizrMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommandFor<TUploadApi>(IApizrMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor<TUploadApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendUploadCommandFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 150
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a upload command to Apizr using MediatR for <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TUploadApi</code> from file info data\n"
  example: []
  syntax:
    content: >-
      public static Task SendUploadCommandFor<TUploadApi>(this IApizrMediator apizrMediator, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
          where TUploadApi : IUploadApi
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendUploadCommandFor(Of TUploadApi As IUploadApi)(apizrMediator As IApizrMediator, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendUploadCommandFor(Of TUploadApi)(IApizrMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor(Of TUploadApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadCommandFor(Of TUploadApi)(IApizrMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadCommand(IApizrMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommand(IApizrMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendUploadCommand
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 164
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a upload command to Apizr using MediatR for <xref href=\"Apizr.Transferring.Requesting.IUploadApi\" data-throw-if-not-resolved=\"false\"></xref> from file bytes data\n"
  example: []
  syntax:
    content: public static Task SendUploadCommand(this IApizrMediator apizrMediator, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendUploadCommand(apizrMediator As IApizrMediator, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendUploadCommand(IApizrMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadCommand(IApizrMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadCommand(IApizrMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommand(IApizrMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendUploadCommand
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 177
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a upload command to Apizr using MediatR for <xref href=\"Apizr.Transferring.Requesting.IUploadApi\" data-throw-if-not-resolved=\"false\"></xref> from file stream data\n"
  example: []
  syntax:
    content: public static Task SendUploadCommand(this IApizrMediator apizrMediator, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendUploadCommand(apizrMediator As IApizrMediator, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendUploadCommand(IApizrMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadCommand(IApizrMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadCommand(IApizrMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommand(IApizrMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendUploadCommand
    path: C:\Dev\Community\Apizr\Apizr\Src\Transferring\Apizr.Integrations.FileTransfer.MediatR\Mediation\Extending\ApizrMediatorFileTransferExtensions.cs
    startLine: 190
  assemblies:
  - Apizr.Integrations.FileTransfer.MediatR
  namespace: Apizr.Mediation.Extending
  summary: "\nSend a upload command to Apizr using MediatR for <xref href=\"Apizr.Transferring.Requesting.IUploadApi\" data-throw-if-not-resolved=\"false\"></xref> from file info data\n"
  example: []
  syntax:
    content: public static Task SendUploadCommand(this IApizrMediator apizrMediator, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Mediation.Requesting.Sending.IApizrMediator
      description: The extended mediator
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendUploadCommand(apizrMediator As IApizrMediator, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand*
  nameWithType.vb: ApizrMediatorFileTransferExtensions.SendUploadCommand(IApizrMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadCommand(IApizrMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Mediation.Extending
  commentId: N:Apizr.Mediation.Extending
  name: Apizr.Mediation.Extending
  nameWithType: Apizr.Mediation.Extending
  fullName: Apizr.Mediation.Extending
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor*
  commentId: Overload:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor
  name: SendDownloadQueryFor
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQueryFor
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediator
  parent: Apizr.Mediation.Requesting.Sending
  name: IApizrMediator
  nameWithType: IApizrMediator
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: '{TDownloadParams}'
  commentId: '!:TDownloadParams'
  definition: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.FileInfo}
  commentId: T:System.Threading.Tasks.Task{System.IO.FileInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileInfo>
  nameWithType: Task<FileInfo>
  fullName: System.Threading.Tasks.Task<System.IO.FileInfo>
  nameWithType.vb: Task(Of FileInfo)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.FileInfo)
  name.vb: Task(Of FileInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending
  commentId: N:Apizr.Mediation.Requesting.Sending
  name: Apizr.Mediation.Requesting.Sending
  nameWithType: Apizr.Mediation.Requesting.Sending
  fullName: Apizr.Mediation.Requesting.Sending
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Apizr.Transferring.Requesting.IDownloadApi
  commentId: T:Apizr.Transferring.Requesting.IDownloadApi
  name: IDownloadApi
  nameWithType: IDownloadApi
  fullName: Apizr.Transferring.Requesting.IDownloadApi
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery*
  commentId: Overload:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery
  name: SendDownloadQuery
  nameWithType: ApizrMediatorFileTransferExtensions.SendDownloadQuery
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor*
  commentId: Overload:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor
  name: SendUploadCommandFor
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommandFor
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor
- uid: Refit.ByteArrayPart
  commentId: T:Refit.ByteArrayPart
  parent: Refit
  isExternal: true
  name: ByteArrayPart
  nameWithType: ByteArrayPart
  fullName: Refit.ByteArrayPart
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
- uid: Refit.StreamPart
  commentId: T:Refit.StreamPart
  parent: Refit
  isExternal: true
  name: StreamPart
  nameWithType: StreamPart
  fullName: Refit.StreamPart
- uid: Refit.FileInfoPart
  commentId: T:Refit.FileInfoPart
  parent: Refit
  isExternal: true
  name: FileInfoPart
  nameWithType: FileInfoPart
  fullName: Refit.FileInfoPart
- uid: Apizr.Transferring.Requesting.IUploadApi
  commentId: T:Apizr.Transferring.Requesting.IUploadApi
  parent: Apizr.Transferring.Requesting
  name: IUploadApi
  nameWithType: IUploadApi
  fullName: Apizr.Transferring.Requesting.IUploadApi
- uid: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand*
  commentId: Overload:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand
  name: SendUploadCommand
  nameWithType: ApizrMediatorFileTransferExtensions.SendUploadCommand
  fullName: Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand
- uid: Apizr.Transferring.Requesting
  commentId: N:Apizr.Transferring.Requesting
  name: Apizr.Transferring.Requesting
  nameWithType: Apizr.Transferring.Requesting
  fullName: Apizr.Transferring.Requesting
