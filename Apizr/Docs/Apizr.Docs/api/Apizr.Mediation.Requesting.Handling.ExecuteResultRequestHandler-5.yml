### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5
  commentId: T:Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5
  id: ExecuteResultRequestHandler`5
  parent: Apizr.Mediation.Requesting.Handling
  children:
  - Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.#ctor(Apizr.IApizrManager{`0})
  - Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType: ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  fullName: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  type: Class
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.MediatR/Mediation/Requesting/Handling/ExecuteResultRequestHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteResultRequestHandler
    path: ../../Src/Handling/Apizr.Integrations.MediatR/Mediation/Requesting/Handling/ExecuteResultRequestHandler.cs
    startLine: 18
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Handling
  summary: "\nThe mediation execute result request handler\n"
  example: []
  syntax:
    content: 'public class ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData> : ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, IApizrRequestOptions, IApizrRequestOptionsBuilder>, IRequestHandler<ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, TModelResultData>'
    typeParameters:
    - id: TWebApi
      description: The web api type
    - id: TModelResultData
      description: The model result type
    - id: TApiResultData
      description: The api result type
    - id: TApiRequestData
      description: The api request type
    - id: TModelRequestData
      description: The model request type
    content.vb: >-
      Public Class ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
          Inherits ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), IApizrRequestOptions, IApizrRequestOptionsBuilder)
          Implements IRequestHandler(Of ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), TModelResultData)
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  implements:
  - MediatR.IRequestHandler{Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},{TModelResultData}}
  inheritedMembers:
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.WebApiManager
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  name.vb: ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
- uid: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.#ctor(Apizr.IApizrManager{`0})
  commentId: M:Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.#ctor(Apizr.IApizrManager{`0})
  id: '#ctor(Apizr.IApizrManager{`0})'
  parent: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5
  langs:
  - csharp
  - vb
  name: ExecuteResultRequestHandler(IApizrManager<TWebApi>)
  nameWithType: ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteResultRequestHandler(IApizrManager<TWebApi>)
  fullName: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteResultRequestHandler(Apizr.IApizrManager<TWebApi>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.MediatR/Mediation/Requesting/Handling/ExecuteResultRequestHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Handling/Apizr.Integrations.MediatR/Mediation/Requesting/Handling/ExecuteResultRequestHandler.cs
    startLine: 23
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Handling
  syntax:
    content: public ExecuteResultRequestHandler(IApizrManager<TWebApi> webApiManager)
    parameters:
    - id: webApiManager
      type: Apizr.IApizrManager{{TWebApi}}
    content.vb: Public Sub New(webApiManager As IApizrManager(Of TWebApi))
  overload: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.#ctor*
  nameWithType.vb: ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteResultRequestHandler(IApizrManager(Of TWebApi))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteResultRequestHandler(Apizr.IApizrManager(Of TWebApi))
  name.vb: ExecuteResultRequestHandler(IApizrManager(Of TWebApi))
- uid: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  id: Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5
  langs:
  - csharp
  - vb
  name: Handle(ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  nameWithType: ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle(ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.MediatR/Mediation/Requesting/Handling/ExecuteResultRequestHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: Handle
    path: ../../Src/Handling/Apizr.Integrations.MediatR/Mediation/Requesting/Handling/ExecuteResultRequestHandler.cs
    startLine: 28
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Handling
  summary: "\nHandling the execute result request\n"
  example: []
  syntax:
    content: public override Task<TModelResultData> Handle(ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    return:
      type: System.Threading.Tasks.Task{{TModelResultData}}
      description: ''
    content.vb: Public Overrides Function Handle(request As ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), cancellationToken As CancellationToken) As Task(Of TModelResultData)
  overridden: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},System.Threading.CancellationToken)
  overload: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.Handle*
  nameWithType.vb: ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle(ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle(Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), System.Threading.CancellationToken)
  name.vb: Handle(ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
references:
- uid: Apizr.Mediation.Requesting.Handling
  commentId: N:Apizr.Mediation.Requesting.Handling
  name: Apizr.Mediation.Requesting.Handling
  nameWithType: Apizr.Mediation.Requesting.Handling
  fullName: Apizr.Mediation.Requesting.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,`3,`4,Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8
  name: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},{TModelResultData}}
  commentId: T:MediatR.IRequestHandler{Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},`1}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, TModelResultData>
  nameWithType: IRequestHandler<ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, TModelResultData>
  fullName: MediatR.IRequestHandler<Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, TModelResultData>
  nameWithType.vb: IRequestHandler(Of ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), TModelResultData)
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), TModelResultData)
  name.vb: IRequestHandler(Of ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), TModelResultData)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,`3,`4,Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.WebApiManager
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.WebApiManager
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), IApizrRequestOptions, IApizrRequestOptionsBuilder).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,`3,`4,Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.Handle(`5,System.Threading.CancellationToken)
  name: Handle(ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.Handle(ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.Handle(Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), IApizrRequestOptions, IApizrRequestOptionsBuilder).Handle(ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).Handle(Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), System.Threading.CancellationToken)
  name.vb: Handle(ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), IApizrRequestOptions, IApizrRequestOptionsBuilder).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8
  name: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.WebApiManager
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.Handle(`5,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.Handle(`5,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TRequest, CancellationToken)
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TRequest, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TRequest, CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`8.Handle(`5,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.#ctor*
  commentId: Overload:Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.#ctor
  name: ExecuteResultRequestHandler
  nameWithType: ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteResultRequestHandler
  fullName: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteResultRequestHandler
  nameWithType.vb: ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteResultRequestHandler
  fullName.vb: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteResultRequestHandler
- uid: Apizr.IApizrManager{{TWebApi}}
  commentId: T:Apizr.IApizrManager{``0}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.Handle*
  commentId: Overload:Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler`5.Handle
  name: Handle
  nameWithType: ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle
  fullName: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle
  nameWithType.vb: ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle
  fullName.vb: Apizr.Mediation.Requesting.Handling.ExecuteResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle
- uid: Apizr.Mediation.Requesting.ExecuteResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}
  commentId: T:Apizr.Mediation.Requesting.ExecuteResultRequest{`0,`1,`2,`3,`4}
  parent: Apizr.Mediation.Requesting
  definition: Apizr.Mediation.Requesting.ExecuteResultRequest`5
  name: ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType: ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  fullName: Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType.vb: ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  fullName.vb: Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  name.vb: ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TModelResultData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelResultData>
  nameWithType: Task<TModelResultData>
  fullName: System.Threading.Tasks.Task<TModelResultData>
  nameWithType.vb: Task(Of TModelResultData)
  fullName.vb: System.Threading.Tasks.Task(Of TModelResultData)
  name.vb: Task(Of TModelResultData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
  commentId: T:Apizr.Mediation.Requesting.ExecuteResultRequest`5
  name: ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType: ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  fullName: Apizr.Mediation.Requesting.ExecuteResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType.vb: ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  fullName.vb: Apizr.Mediation.Requesting.ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  name.vb: ExecuteResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.ExecuteResultRequest`5
    name: ExecuteResultRequest
    nameWithType: ExecuteResultRequest
    fullName: Apizr.Mediation.Requesting.ExecuteResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting
  commentId: N:Apizr.Mediation.Requesting
  name: Apizr.Mediation.Requesting
  nameWithType: Apizr.Mediation.Requesting
  fullName: Apizr.Mediation.Requesting
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
