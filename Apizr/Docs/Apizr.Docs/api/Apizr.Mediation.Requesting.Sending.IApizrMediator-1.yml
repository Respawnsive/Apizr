### YamlMime:ManagedReference
items:
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  id: IApizrMediator`1
  parent: Apizr.Mediation.Requesting.Sending
  children:
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: IApizrMediator<TWebApi>
  nameWithType: IApizrMediator<TWebApi>
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>
  type: Interface
  source:
    id: IApizrMediator
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 198
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\n<xref href=\"Apizr.Mediation.Requesting.Sending.IApizrMediator\" data-throw-if-not-resolved=\"false\"></xref> but dedicated to <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TWebApi</code>, getting all shorter\n"
  example: []
  syntax:
    content: 'public interface IApizrMediator<TWebApi> : IApizrMediatorBase'
    typeParameters:
    - id: TWebApi
      description: The api interface to play with MediatR
    content.vb: >-
      Public Interface IApizrMediator(Of TWebApi)
          Inherits IApizrMediatorBase
  extensionMethods:
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}},System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},Polly.Context,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},Polly.Context,System.Boolean,System.Action{System.Exception})
  - Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  nameWithType.vb: IApizrMediator(Of TWebApi)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi)
  name.vb: IApizrMediator(Of TWebApi)
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor(Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor(Expression<Func<TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 210
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR\n"
  example: []
  syntax:
    content: Task SendFor(Expression<Func<TWebApi, Task>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SendFor(executeApiMethod As Expression(Of Func(Of TWebApi, Task)), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Expression(Of Func(Of TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor(Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor(Expression<Func<IApizrRequestOptions, TWebApi, Task>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 218
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with a Polly Context and a cancellation token\n"
  example: []
  syntax:
    content: Task SendFor(Expression<Func<IApizrRequestOptions, TWebApi, Task>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SendFor(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task)), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task)), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 233
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with mapped request\n"
  example: []
  syntax:
    content: Task SendFor<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model request type to map from
    - id: TApiData
      description: The api request type to map to
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SendFor(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task)), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 245
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with mapped request, a Polly Context and cancellation token\n"
  example: []
  syntax:
    content: Task SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The model request type to map from
    - id: TApiData
      description: The api request type to map to
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function SendFor(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task)), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 264
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR\n"
  example: []
  syntax:
    content: Task<TApiData> SendFor<TApiData>(Expression<Func<TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiData
      description: The api result type
    return:
      type: System.Threading.Tasks.Task{{TApiData}}
      description: ''
    content.vb: Function SendFor(Of TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``1(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 273
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with a Polly Context and a cancellation token\n"
  example: []
  syntax:
    content: Task<TApiData> SendFor<TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiData
      description: The api response
    return:
      type: System.Threading.Tasks.Task{{TApiData}}
      description: ''
    content.vb: Function SendFor(Of TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TApiData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 288
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> SendFor<TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The mapped model type to map to
    - id: TApiData
      description: The api result type to map from
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function SendFor(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``1}}},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 299
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with a Polly Context and a cancellation token and returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>> executeApiMethod, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The mapped model type to map to
    - id: TApiData
      description: The api result type to map from
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function SendFor(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData))), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``2(System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 312
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with a mapped request and returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> SendFor<TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The mapped model type to map request from and result to
    - id: TApiData
      description: The api result type to map request to and result from
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function SendFor(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``2(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}},``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 325
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with a mapped request, a Polly Context and a cancellation token and returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelData> SendFor<TModelData, TApiData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>> executeApiMethod, TModelData modelData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelData
      type: '{TModelData}'
      description: The model data to map
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelData
      description: The mapped model type to map request from and result to
    - id: TApiData
      description: The api result type to map request to and result from
    return:
      type: System.Threading.Tasks.Task{{TModelData}}
      description: ''
    content.vb: Function SendFor(Of TModelData, TApiData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), modelData As TModelData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelData, TApiData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``4(System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 344
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with a mapped request and returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelResultData> SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelResultData
      description: The model result type to map to
    - id: TApiResultData
      description: The api request type to map to
    - id: TApiRequestData
      description: The api result type to map from
    - id: TModelRequestData
      description: The model request type to map from
    return:
      type: System.Threading.Tasks.Task{{TModelResultData}}
      description: ''
    content.vb: Function SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(executeApiMethod As Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelResultData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendFor``4(System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}},``3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
  langs:
  - csharp
  - vb
  name: SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrMediator<TWebApi>.SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    id: SendFor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.MediatR\Mediation\Requesting\Sending\IApizrMediator.cs
    startLine: 359
  assemblies:
  - Apizr.Integrations.MediatR
  namespace: Apizr.Mediation.Requesting.Sending
  summary: "\nSend an api call to Apizr using MediatR with a mapped request, a Polly Context and a cancellation token and returning a mapped result\n"
  example: []
  syntax:
    content: Task<TModelResultData> SendFor<TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>> executeApiMethod, TModelRequestData modelRequestData, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
      description: The <code data-dev-comment-type="typeparamref" class="typeparamref">TWebApi</code> call to execute
    - id: modelRequestData
      type: '{TModelRequestData}'
      description: The model request data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelResultData
      description: The model result type to map to
    - id: TApiResultData
      description: The api request type to map to
    - id: TApiRequestData
      description: The api result type to map from
    - id: TModelRequestData
      description: The model request type to map from
    return:
      type: System.Threading.Tasks.Task{{TModelResultData}}
      description: ''
    content.vb: Function SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(executeApiMethod As Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), modelRequestData As TModelRequestData, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of TModelResultData)
  overload: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendFor(Of TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediator
  parent: Apizr.Mediation.Requesting.Sending
  name: IApizrMediator
  nameWithType: IApizrMediator
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
- uid: Apizr.Mediation.Requesting.Sending
  commentId: N:Apizr.Mediation.Requesting.Sending
  name: Apizr.Mediation.Requesting.Sending
  nameWithType: Apizr.Mediation.Requesting.Sending
  fullName: Apizr.Mediation.Requesting.Sending
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
  name: SendFor<TWebApi>(Expression<Func<TWebApi, Task>>, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(Expression<Func<TWebApi, Task>>, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Expression(Of Func(Of TWebApi, Task)), Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(Expression(Of Func(Of TWebApi, Task)), Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
  name: SendFor<TWebApi>(Expression<Func<Context, TWebApi, Task>>, Context, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(Expression<Func<Context, TWebApi, Task>>, Context, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, System.Threading.Tasks.Task>>, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Expression(Of Func(Of Context, TWebApi, Task)), Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, System.Threading.Tasks.Task)), Polly.Context, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(Expression(Of Func(Of Context, TWebApi, Task)), Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendFor<TWebApi>(Expression<Func<CancellationToken, TWebApi, Task>>, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(Expression<Func<CancellationToken, TWebApi, Task>>, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task>>, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Expression(Of Func(Of CancellationToken, TWebApi, Task)), CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task)), System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(Expression(Of Func(Of CancellationToken, TWebApi, Task)), CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendFor<TWebApi>(Expression<Func<Context, CancellationToken, TWebApi, Task>>, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(Expression<Func<Context, CancellationToken, TWebApi, Task>>, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task>>, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Expression(Of Func(Of Context, CancellationToken, TWebApi, Task)), Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task)), Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(Expression(Of Func(Of Context, CancellationToken, TWebApi, Task)), Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<CancellationToken, TWebApi, TApiData, Task>>, TModelData, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<CancellationToken, TWebApi, TApiData, Task>>, TModelData, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task)), TModelData, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task)), TModelData, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, TWebApi, TApiData, Task>>, TModelData, Context, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, TWebApi, TApiData, Task>>, TModelData, Context, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, TWebApi, TApiData, Task)), TModelData, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, TWebApi, TApiData, Task)), TModelData, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task}},{TModelData},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task>>, TModelData, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task>>, TModelData, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task)), TModelData, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task)), TModelData, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
  name: SendFor<TWebApi, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TApiData>(Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TApiData>(Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}},{TModelData},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<Context, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<Context, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of Context, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of Context, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}},{TModelRequestData},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  parent: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  definition: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<Context, CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Expression<Func<Context, CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task>>, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task>>, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task)), Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task)), Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  commentId: T:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
  parent: Apizr.Mediation.Extending
  name: ApizrTypedMediatorExtensions
  nameWithType: ApizrTypedMediatorExtensions
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, Task>>, Context, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, Task>>, Context, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, System.Threading.Tasks.Task>>, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, Task)), Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, System.Threading.Tasks.Task)), Polly.Context, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, Task)), Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task}},Polly.Context,System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, Task>>, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, Task>>, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task>>, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, Task)), CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task)), System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, Task)), CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, Task>>, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, Task>>, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task>>, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, Task)), Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task)), Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, Task)), Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task}},Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiData, Task>>, TModelData, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiData, Task)), TModelData, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task}},``1,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, TApiData, Task>>, TModelData, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, TApiData, Task>>, TModelData, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task)), TModelData, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task)), TModelData, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, TApiData, Task>>, TModelData, Context, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, TApiData, Task>>, TModelData, Context, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, Polly.Context, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, TApiData, Task)), TModelData, Context, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, Polly.Context, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, TApiData, Task)), TModelData, Context, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task>>, TModelData, Context, CancellationToken, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task>>, TModelData, Context, CancellationToken, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task>>, TModelData, Polly.Context, System.Threading.CancellationToken, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task)), TModelData, Context, CancellationToken, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task)), TModelData, Polly.Context, System.Threading.CancellationToken, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task)), TModelData, Context, CancellationToken, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task}},``1,Polly.Context,System.Threading.CancellationToken,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``1}}},System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``1}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, Task<TApiData>>>, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, Task(Of TApiData))), Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task{``2}}},System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, Task<TApiData>>>, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, Task(Of TApiData))), Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, Task<TApiData>>>, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, Task(Of TApiData))), CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, Task<TApiData>>>, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task<TApiData>>>, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, System.Threading.Tasks.Task(Of TApiData))), Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, Task(Of TApiData))), Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,System.Threading.Tasks.Task{``2}}},Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiData, Task<TApiData>>>, TModelData, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData))), TModelData, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, TApiData, Task<TApiData>>>, TModelData, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>, TModelData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData))), TModelData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelData, TApiData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiData, Task(Of TApiData))), TModelData, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelData, TApiData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelData, TApiData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``3(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``2,System.Threading.Tasks.Task{``2}}},``1,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelData, TApiData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelData, TApiData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<Context, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, Polly.Context, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, Polly.Context, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  commentId: M:Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
  isExternal: true
  name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, CancellationToken, Boolean, Action<Exception>)
  nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(IApizrMediator<TWebApi>, Expression<Func<Context, CancellationToken, TWebApi, TApiRequestData, Task<TApiResultData>>>, TModelRequestData, Context, CancellationToken, Boolean, Action<Exception>)
  fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>(Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>, System.Linq.Expressions.Expression<System.Func<Polly.Context, System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>, TModelRequestData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action<System.Exception>)
  nameWithType.vb: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, CancellationToken, Boolean, Action(Of Exception))
  fullName.vb: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi), System.Linq.Expressions.Expression(Of System.Func(Of Polly.Context, System.Threading.CancellationToken, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData))), TModelRequestData, Polly.Context, System.Threading.CancellationToken, System.Boolean, System.Action(Of System.Exception))
  name.vb: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)(IApizrMediator(Of TWebApi), Expression(Of Func(Of Context, CancellationToken, TWebApi, TApiRequestData, Task(Of TApiResultData))), TModelRequestData, Context, CancellationToken, Boolean, Action(Of Exception))
  spec.csharp:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    nameWithType: ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor``5(Apizr.Mediation.Requesting.Sending.IApizrMediator{``0},System.Linq.Expressions.Expression{System.Func{Polly.Context,System.Threading.CancellationToken,``0,``3,System.Threading.Tasks.Task{``2}}},``4,Polly.Context,System.Threading.CancellationToken,System.Boolean,System.Action{System.Exception})
    name: SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    nameWithType: ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
    fullName: Apizr.Mediation.Extending.ApizrTypedMediatorExtensions.SendFor(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1
    name: IApizrMediator
    nameWithType: IApizrMediator
    fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Extending
  commentId: N:Apizr.Mediation.Extending
  name: Apizr.Mediation.Extending
  nameWithType: Apizr.Mediation.Extending
  fullName: Apizr.Mediation.Extending
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor*
  commentId: Overload:Apizr.Mediation.Requesting.Sending.IApizrMediator`1.SendFor
  name: SendFor
  nameWithType: IApizrMediator<TWebApi>.SendFor
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediator<TWebApi>.SendFor
  nameWithType.vb: IApizrMediator(Of TWebApi).SendFor
  fullName.vb: Apizr.Mediation.Requesting.Sending.IApizrMediator(Of TWebApi).SendFor
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, Task>>
  nameWithType: Expression<Func<TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, TApiData, Task>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TModelData}'
  commentId: '!:TModelData'
  definition: TModelData
  name: TModelData
  nameWithType: TModelData
  fullName: TModelData
- uid: TModelData
  name: TModelData
  nameWithType: TModelData
  fullName: TModelData
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, Task<TApiData>>>
  nameWithType: Expression<Func<TWebApi, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of TWebApi, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TApiData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TApiData>
  nameWithType: Task<TApiData>
  fullName: System.Threading.Tasks.Task<TApiData>
  nameWithType.vb: Task(Of TApiData)
  fullName.vb: System.Threading.Tasks.Task(Of TApiData)
  name.vb: Task(Of TApiData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,System.Threading.Tasks.Task{``0}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TModelData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelData>
  nameWithType: Task<TModelData>
  fullName: System.Threading.Tasks.Task<TModelData>
  nameWithType.vb: Task(Of TModelData)
  fullName.vb: System.Threading.Tasks.Task(Of TModelData)
  name.vb: Task(Of TModelData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``1,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, TApiData, Task<TApiData>>>
  nameWithType: Expression<Func<TWebApi, TApiData, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of TWebApi, TApiData, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiData},System.Threading.Tasks.Task{{TApiData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``1,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiData, Task<TApiData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task<TApiData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiData, System.Threading.Tasks.Task(Of TApiData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiData, Task(Of TApiData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``2,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>
  nameWithType: Expression<Func<TWebApi, TApiRequestData, Task<TApiResultData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData)))
  name.vb: Expression(Of Func(Of TWebApi, TApiRequestData, Task(Of TApiResultData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TModelRequestData}'
  commentId: '!:TModelRequestData'
  definition: TModelRequestData
  name: TModelRequestData
  nameWithType: TModelRequestData
  fullName: TModelRequestData
- uid: System.Threading.Tasks.Task{{TModelResultData}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TModelResultData>
  nameWithType: Task<TModelResultData>
  fullName: System.Threading.Tasks.Task<TModelResultData>
  nameWithType.vb: Task(Of TModelResultData)
  fullName.vb: System.Threading.Tasks.Task(Of TModelResultData)
  name.vb: Task(Of TModelResultData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: TModelRequestData
  name: TModelRequestData
  nameWithType: TModelRequestData
  fullName: TModelRequestData
- uid: System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,{TWebApi},{TApiRequestData},System.Threading.Tasks.Task{{TApiResultData}}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Apizr.Configuring.Request.IApizrRequestOptions,`0,``2,System.Threading.Tasks.Task{``1}}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>
  nameWithType: Expression<Func<IApizrRequestOptions, TWebApi, TApiRequestData, Task<TApiResultData>>>
  fullName: System.Linq.Expressions.Expression<System.Func<Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task<TApiResultData>>>
  nameWithType.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData)))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Apizr.Configuring.Request.IApizrRequestOptions, TWebApi, TApiRequestData, System.Threading.Tasks.Task(Of TApiResultData)))
  name.vb: Expression(Of Func(Of IApizrRequestOptions, TWebApi, TApiRequestData, Task(Of TApiResultData)))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
