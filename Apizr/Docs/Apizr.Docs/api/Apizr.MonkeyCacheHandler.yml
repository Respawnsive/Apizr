### YamlMime:ManagedReference
items:
- uid: Apizr.MonkeyCacheHandler
  commentId: T:Apizr.MonkeyCacheHandler
  id: MonkeyCacheHandler
  parent: Apizr
  children:
  - Apizr.MonkeyCacheHandler.#ctor(MonkeyCache.IBarrel)
  - Apizr.MonkeyCacheHandler.ClearAsync(System.Threading.CancellationToken)
  - Apizr.MonkeyCacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
  - Apizr.MonkeyCacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
  - Apizr.MonkeyCacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MonkeyCacheHandler
  nameWithType: MonkeyCacheHandler
  fullName: Apizr.MonkeyCacheHandler
  type: Class
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: MonkeyCacheHandler
    path: ../../Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
    startLine: 12
  assemblies:
  - Apizr.Integrations.MonkeyCache
  namespace: Apizr
  summary: MonkeyCache cache handler implementation
  example: []
  syntax:
    content: 'public class MonkeyCacheHandler : ICacheHandler'
    content.vb: Public Class MonkeyCacheHandler Implements ICacheHandler
  inheritance:
  - System.Object
  implements:
  - Apizr.Caching.ICacheHandler
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Apizr.MonkeyCacheHandler.#ctor(MonkeyCache.IBarrel)
  commentId: M:Apizr.MonkeyCacheHandler.#ctor(MonkeyCache.IBarrel)
  id: '#ctor(MonkeyCache.IBarrel)'
  parent: Apizr.MonkeyCacheHandler
  langs:
  - csharp
  - vb
  name: MonkeyCacheHandler(IBarrel)
  nameWithType: MonkeyCacheHandler.MonkeyCacheHandler(IBarrel)
  fullName: Apizr.MonkeyCacheHandler.MonkeyCacheHandler(MonkeyCache.IBarrel)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
    startLine: 16
  assemblies:
  - Apizr.Integrations.MonkeyCache
  namespace: Apizr
  syntax:
    content: public MonkeyCacheHandler(IBarrel barrel)
    parameters:
    - id: barrel
      type: MonkeyCache.IBarrel
    content.vb: Public Sub New(barrel As IBarrel)
  overload: Apizr.MonkeyCacheHandler.#ctor*
  nameWithType.vb: MonkeyCacheHandler.New(IBarrel)
  fullName.vb: Apizr.MonkeyCacheHandler.New(MonkeyCache.IBarrel)
  name.vb: New(IBarrel)
- uid: Apizr.MonkeyCacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Apizr.MonkeyCacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  id: SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Apizr.MonkeyCacheHandler
  langs:
  - csharp
  - vb
  name: SetAsync(string, object, TimeSpan?, CancellationToken)
  nameWithType: MonkeyCacheHandler.SetAsync(string, object, TimeSpan?, CancellationToken)
  fullName: Apizr.MonkeyCacheHandler.SetAsync(string, object, System.TimeSpan?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: SetAsync
    path: ../../Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
    startLine: 22
  assemblies:
  - Apizr.Integrations.MonkeyCache
  namespace: Apizr
  summary: Map Apizr cache saving method to your cache handler method
  example: []
  syntax:
    content: public Task SetAsync(string key, object value, TimeSpan? lifeSpan = null, CancellationToken cancellationToken = default)
    parameters:
    - id: key
      type: System.String
      description: The key to cache at
    - id: value
      type: System.Object
      description: The value to cache
    - id: lifeSpan
      type: System.Nullable{System.TimeSpan}
      description: The optional life span
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function SetAsync(key As String, value As Object, lifeSpan As TimeSpan? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Apizr.MonkeyCacheHandler.SetAsync*
  implements:
  - Apizr.Caching.ICacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  nameWithType.vb: MonkeyCacheHandler.SetAsync(String, Object, TimeSpan?, CancellationToken)
  fullName.vb: Apizr.MonkeyCacheHandler.SetAsync(String, Object, System.TimeSpan?, System.Threading.CancellationToken)
  name.vb: SetAsync(String, Object, TimeSpan?, CancellationToken)
- uid: Apizr.MonkeyCacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Apizr.MonkeyCacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
  id: GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Apizr.MonkeyCacheHandler
  langs:
  - csharp
  - vb
  name: GetAsync<T>(string, CancellationToken)
  nameWithType: MonkeyCacheHandler.GetAsync<T>(string, CancellationToken)
  fullName: Apizr.MonkeyCacheHandler.GetAsync<T>(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetAsync
    path: ../../Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
    startLine: 31
  assemblies:
  - Apizr.Integrations.MonkeyCache
  namespace: Apizr
  summary: Map Apizr cache getting method to your cache handler method
  example: []
  syntax:
    content: public Task<T> GetAsync<T>(string key, CancellationToken cancellationToken = default)
    parameters:
    - id: key
      type: System.String
      description: The key to get from
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional cancellation token
    typeParameters:
    - id: T
      description: The expected value type
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: ''
    content.vb: Public Function GetAsync(Of T)(key As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Apizr.MonkeyCacheHandler.GetAsync*
  implements:
  - Apizr.Caching.ICacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
  nameWithType.vb: MonkeyCacheHandler.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: Apizr.MonkeyCacheHandler.GetAsync(Of T)(String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
- uid: Apizr.MonkeyCacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Apizr.MonkeyCacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
  id: RemoveAsync(System.String,System.Threading.CancellationToken)
  parent: Apizr.MonkeyCacheHandler
  langs:
  - csharp
  - vb
  name: RemoveAsync(string, CancellationToken)
  nameWithType: MonkeyCacheHandler.RemoveAsync(string, CancellationToken)
  fullName: Apizr.MonkeyCacheHandler.RemoveAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: RemoveAsync
    path: ../../Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
    startLine: 37
  assemblies:
  - Apizr.Integrations.MonkeyCache
  namespace: Apizr
  summary: Map Apizr cache removing method to your cache handler method
  example: []
  syntax:
    content: public Task<bool> RemoveAsync(string key, CancellationToken cancellationToken = default)
    parameters:
    - id: key
      type: System.String
      description: The key to remove from
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Function RemoveAsync(key As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Apizr.MonkeyCacheHandler.RemoveAsync*
  implements:
  - Apizr.Caching.ICacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
  nameWithType.vb: MonkeyCacheHandler.RemoveAsync(String, CancellationToken)
  fullName.vb: Apizr.MonkeyCacheHandler.RemoveAsync(String, System.Threading.CancellationToken)
  name.vb: RemoveAsync(String, CancellationToken)
- uid: Apizr.MonkeyCacheHandler.ClearAsync(System.Threading.CancellationToken)
  commentId: M:Apizr.MonkeyCacheHandler.ClearAsync(System.Threading.CancellationToken)
  id: ClearAsync(System.Threading.CancellationToken)
  parent: Apizr.MonkeyCacheHandler
  langs:
  - csharp
  - vb
  name: ClearAsync(CancellationToken)
  nameWithType: MonkeyCacheHandler.ClearAsync(CancellationToken)
  fullName: Apizr.MonkeyCacheHandler.ClearAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: ClearAsync
    path: ../../Src/Caching/Apizr.Integrations.MonkeyCache/MonkeyCacheHandler.cs
    startLine: 52
  assemblies:
  - Apizr.Integrations.MonkeyCache
  namespace: Apizr
  summary: Map Apizr cache clearing method to your cache handler method
  example: []
  syntax:
    content: public Task ClearAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function ClearAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: Apizr.MonkeyCacheHandler.ClearAsync*
  implements:
  - Apizr.Caching.ICacheHandler.ClearAsync(System.Threading.CancellationToken)
references:
- uid: Apizr
  commentId: N:Apizr
  href: Apizr.html
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Apizr.Caching.ICacheHandler
  commentId: T:Apizr.Caching.ICacheHandler
  parent: Apizr.Caching
  href: Apizr.Caching.ICacheHandler.html
  name: ICacheHandler
  nameWithType: ICacheHandler
  fullName: Apizr.Caching.ICacheHandler
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Caching
  commentId: N:Apizr.Caching
  href: Apizr.html
  name: Apizr.Caching
  nameWithType: Apizr.Caching
  fullName: Apizr.Caching
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Caching
    name: Caching
    href: Apizr.Caching.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Caching
    name: Caching
    href: Apizr.Caching.html
- uid: Apizr.MonkeyCacheHandler.#ctor*
  commentId: Overload:Apizr.MonkeyCacheHandler.#ctor
  href: Apizr.MonkeyCacheHandler.html#Apizr_MonkeyCacheHandler__ctor_MonkeyCache_IBarrel_
  name: MonkeyCacheHandler
  nameWithType: MonkeyCacheHandler.MonkeyCacheHandler
  fullName: Apizr.MonkeyCacheHandler.MonkeyCacheHandler
  nameWithType.vb: MonkeyCacheHandler.New
  fullName.vb: Apizr.MonkeyCacheHandler.New
  name.vb: New
- uid: MonkeyCache.IBarrel
  commentId: T:MonkeyCache.IBarrel
  parent: MonkeyCache
  isExternal: true
  href: https://github.com/jamesmontemagno/monkey-cache/blob/9438c3ba7eb6576e3a2b10d9448eecb34c22ee5c/src/MonkeyCache/IBarrel.cs
  name: IBarrel
  nameWithType: IBarrel
  fullName: MonkeyCache.IBarrel
- uid: MonkeyCache
  commentId: N:MonkeyCache
  isExternal: true
  name: MonkeyCache
  nameWithType: MonkeyCache
  fullName: MonkeyCache
- uid: Apizr.MonkeyCacheHandler.SetAsync*
  commentId: Overload:Apizr.MonkeyCacheHandler.SetAsync
  href: Apizr.MonkeyCacheHandler.html#Apizr_MonkeyCacheHandler_SetAsync_System_String_System_Object_System_Nullable_System_TimeSpan__System_Threading_CancellationToken_
  name: SetAsync
  nameWithType: MonkeyCacheHandler.SetAsync
  fullName: Apizr.MonkeyCacheHandler.SetAsync
- uid: Apizr.Caching.ICacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Apizr.Caching.ICacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Apizr.Caching.ICacheHandler
  isExternal: true
  href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_SetAsync_System_String_System_Object_System_Nullable_System_TimeSpan__System_Threading_CancellationToken_
  name: SetAsync(string, object, TimeSpan?, CancellationToken)
  nameWithType: ICacheHandler.SetAsync(string, object, TimeSpan?, CancellationToken)
  fullName: Apizr.Caching.ICacheHandler.SetAsync(string, object, System.TimeSpan?, System.Threading.CancellationToken)
  nameWithType.vb: ICacheHandler.SetAsync(String, Object, TimeSpan?, CancellationToken)
  fullName.vb: Apizr.Caching.ICacheHandler.SetAsync(String, Object, System.TimeSpan?, System.Threading.CancellationToken)
  name.vb: SetAsync(String, Object, TimeSpan?, CancellationToken)
  spec.csharp:
  - uid: Apizr.Caching.ICacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
    name: SetAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_SetAsync_System_String_System_Object_System_Nullable_System_TimeSpan__System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Apizr.Caching.ICacheHandler.SetAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
    name: SetAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_SetAsync_System_String_System_Object_System_Nullable_System_TimeSpan__System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Apizr.MonkeyCacheHandler.GetAsync*
  commentId: Overload:Apizr.MonkeyCacheHandler.GetAsync
  href: Apizr.MonkeyCacheHandler.html#Apizr_MonkeyCacheHandler_GetAsync__1_System_String_System_Threading_CancellationToken_
  name: GetAsync
  nameWithType: MonkeyCacheHandler.GetAsync
  fullName: Apizr.MonkeyCacheHandler.GetAsync
- uid: Apizr.Caching.ICacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Apizr.Caching.ICacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Apizr.Caching.ICacheHandler
  isExternal: true
  href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_GetAsync__1_System_String_System_Threading_CancellationToken_
  name: GetAsync<T>(string, CancellationToken)
  nameWithType: ICacheHandler.GetAsync<T>(string, CancellationToken)
  fullName: Apizr.Caching.ICacheHandler.GetAsync<T>(string, System.Threading.CancellationToken)
  nameWithType.vb: ICacheHandler.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: Apizr.Caching.ICacheHandler.GetAsync(Of T)(String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Apizr.Caching.ICacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_GetAsync__1_System_String_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Apizr.Caching.ICacheHandler.GetAsync``1(System.String,System.Threading.CancellationToken)
    name: GetAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_GetAsync__1_System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Apizr.MonkeyCacheHandler.RemoveAsync*
  commentId: Overload:Apizr.MonkeyCacheHandler.RemoveAsync
  href: Apizr.MonkeyCacheHandler.html#Apizr_MonkeyCacheHandler_RemoveAsync_System_String_System_Threading_CancellationToken_
  name: RemoveAsync
  nameWithType: MonkeyCacheHandler.RemoveAsync
  fullName: Apizr.MonkeyCacheHandler.RemoveAsync
- uid: Apizr.Caching.ICacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Apizr.Caching.ICacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
  parent: Apizr.Caching.ICacheHandler
  isExternal: true
  href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_RemoveAsync_System_String_System_Threading_CancellationToken_
  name: RemoveAsync(string, CancellationToken)
  nameWithType: ICacheHandler.RemoveAsync(string, CancellationToken)
  fullName: Apizr.Caching.ICacheHandler.RemoveAsync(string, System.Threading.CancellationToken)
  nameWithType.vb: ICacheHandler.RemoveAsync(String, CancellationToken)
  fullName.vb: Apizr.Caching.ICacheHandler.RemoveAsync(String, System.Threading.CancellationToken)
  name.vb: RemoveAsync(String, CancellationToken)
  spec.csharp:
  - uid: Apizr.Caching.ICacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
    name: RemoveAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_RemoveAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Apizr.Caching.ICacheHandler.RemoveAsync(System.String,System.Threading.CancellationToken)
    name: RemoveAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_RemoveAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Apizr.MonkeyCacheHandler.ClearAsync*
  commentId: Overload:Apizr.MonkeyCacheHandler.ClearAsync
  href: Apizr.MonkeyCacheHandler.html#Apizr_MonkeyCacheHandler_ClearAsync_System_Threading_CancellationToken_
  name: ClearAsync
  nameWithType: MonkeyCacheHandler.ClearAsync
  fullName: Apizr.MonkeyCacheHandler.ClearAsync
- uid: Apizr.Caching.ICacheHandler.ClearAsync(System.Threading.CancellationToken)
  commentId: M:Apizr.Caching.ICacheHandler.ClearAsync(System.Threading.CancellationToken)
  parent: Apizr.Caching.ICacheHandler
  isExternal: true
  href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_ClearAsync_System_Threading_CancellationToken_
  name: ClearAsync(CancellationToken)
  nameWithType: ICacheHandler.ClearAsync(CancellationToken)
  fullName: Apizr.Caching.ICacheHandler.ClearAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Caching.ICacheHandler.ClearAsync(System.Threading.CancellationToken)
    name: ClearAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_ClearAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Apizr.Caching.ICacheHandler.ClearAsync(System.Threading.CancellationToken)
    name: ClearAsync
    href: Apizr.Caching.ICacheHandler.html#Apizr_Caching_ICacheHandler_ClearAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
