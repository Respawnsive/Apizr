### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  commentId: T:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  id: ApizrOptionalMediationRegistryBase
  parent: Apizr.Optional.Configuring.Registry
  children:
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``2
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``3
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``4
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``2
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``3
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``4
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System#Collections#IEnumerable#GetEnumerator
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  langs:
  - csharp
  - vb
  name: ApizrOptionalMediationRegistryBase
  nameWithType: ApizrOptionalMediationRegistryBase
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  type: Class
  source:
    id: ApizrOptionalMediationRegistryBase
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 9
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: 'public abstract class ApizrOptionalMediationRegistryBase : IApizrOptionalMediationEnumerableRegistry, IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>, IEnumerable'
    content.vb: >-
      Public MustInherit Class ApizrOptionalMediationRegistryBase
          Implements IApizrOptionalMediationEnumerableRegistry, IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase))), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistry
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  commentId: F:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  id: ConcurrentRegistry
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ConcurrentRegistry
  nameWithType: ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  type: Field
  source:
    id: ConcurrentRegistry
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 11
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: protected readonly IDictionary<Type, Func<IApizrOptionalMediatorBase>> ConcurrentRegistry
    return:
      type: System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}
    content.vb: Protected ReadOnly ConcurrentRegistry As IDictionary(Of Type, Func(Of IApizrOptionalMediatorBase))
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  id: '#ctor'
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ApizrOptionalMediationRegistryBase()
  nameWithType: ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase()
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 13
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: protected ApizrOptionalMediationRegistryBase()
    content.vb: Protected Sub New
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  id: GetEnumerator
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ApizrOptionalMediationRegistryBase.GetEnumerator()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 18
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: public IEnumerator<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ApizrOptionalMediationRegistryBase.IEnumerable.GetEnumerator()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    id: System.Collections.IEnumerable.GetEnumerator
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 20
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ApizrOptionalMediationRegistryBase.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``1
  id: GetCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T>()
  type: Method
  source:
    id: GetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 22
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>> GetCrudOptionalMediatorFor<T>()
          where T : class
    typeParameters:
    - id: T
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class) As IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T)()
  name.vb: GetCrudOptionalMediatorFor(Of T)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``2
  id: GetCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey>()
  type: Method
  source:
    id: GetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 25
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>> GetCrudOptionalMediatorFor<T, TKey>()
          where T : class
    typeParameters:
    - id: T
    - id: TKey
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class, TKey) As IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``3
  id: GetCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: GetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 28
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>> GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult) As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``4
  id: GetCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: GetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 31
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams> GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor``1
  id: GetOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetOptionalMediatorFor<TWebApi>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor<TWebApi>()
  type: Method
  source:
    id: GetOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 36
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: public IApizrOptionalMediator<TWebApi> GetOptionalMediatorFor<TWebApi>()
    typeParameters:
    - id: TWebApi
    return:
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}
    content.vb: Public Function GetOptionalMediatorFor(Of TWebApi) As IApizrOptionalMediator(Of TWebApi)
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor(Of TWebApi)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor(Of TWebApi)()
  name.vb: GetOptionalMediatorFor(Of TWebApi)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  type: Method
  source:
    id: TryGetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 39
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>> mediator)
          where T : class
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class)(ByRef mediator As IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T)(ByRef IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T)(ByRef Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(ByRef IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  type: Method
  source:
    id: TryGetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 42
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>> mediator)
          where T : class
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
    - id: TKey
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class, TKey)(ByRef mediator As IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey)(ByRef IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey)(ByRef Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(ByRef IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  type: Method
  source:
    id: TryGetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 46
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>> mediator)
          where T : class
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult)(ByRef mediator As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(ByRef IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(ByRef Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(ByRef IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  id: TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  type: Method
  source:
    id: TryGetCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 50
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams> mediator)
          where T : class
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Boolean
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)(ByRef mediator As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(ByRef IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  id: TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor<TWebApi>(out Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  type: Method
  source:
    id: TryGetOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 63
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: public bool TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi> mediator)
    parameters:
    - id: mediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}
    typeParameters:
    - id: TWebApi
    return:
      type: System.Boolean
    content.vb: Public Function TryGetOptionalMediatorFor(Of TWebApi)(ByRef mediator As IApizrOptionalMediator(Of TWebApi)) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor(Of TWebApi)(ByRef IApizrOptionalMediator(Of TWebApi))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor(Of TWebApi)(ByRef Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(ByRef IApizrOptionalMediator(Of TWebApi))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  commentId: P:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  id: Count
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ApizrOptionalMediationRegistryBase.Count
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  type: Property
  source:
    id: Count
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 75
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``1
  id: ContainsCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T>()
  type: Method
  source:
    id: ContainsCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 77
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudOptionalMediatorFor<T>()
          where T : class
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``2
  id: ContainsCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey>()
  type: Method
  source:
    id: ContainsCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 80
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudOptionalMediatorFor<T, TKey>()
          where T : class
    typeParameters:
    - id: T
    - id: TKey
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class, TKey) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``3
  id: ContainsCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    id: ContainsCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 83
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``4
  id: ContainsCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    id: ContainsCrudOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 86
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: >-
      public bool ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
          where T : class
    typeParameters:
    - id: T
    - id: TKey
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Boolean
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult, TReadAllParams) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor``1
  id: ContainsOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsOptionalMediatorFor<TWebApi>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor<TWebApi>()
  type: Method
  source:
    id: ContainsOptionalMediatorFor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\ApizrOptionalMediationRegistryBase.cs
    startLine: 89
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: public bool ContainsOptionalMediatorFor<TWebApi>()
    typeParameters:
    - id: TWebApi
    return:
      type: System.Boolean
    content.vb: Public Function ContainsOptionalMediatorFor(Of TWebApi) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor(Of TWebApi)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor(Of TWebApi)()
  name.vb: ContainsOptionalMediatorFor(Of TWebApi)()
references:
- uid: Apizr.Optional.Configuring.Registry
  commentId: N:Apizr.Optional.Configuring.Registry
  name: Apizr.Optional.Configuring.Registry
  nameWithType: Apizr.Optional.Configuring.Registry
  fullName: Apizr.Optional.Configuring.Registry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  commentId: T:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  parent: Apizr.Optional.Configuring.Registry
  name: IApizrOptionalMediationEnumerableRegistry
  nameWithType: IApizrOptionalMediationEnumerableRegistry
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase)))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Type, Func<IApizrOptionalMediatorBase>>
  nameWithType: IDictionary<Type, Func<IApizrOptionalMediatorBase>>
  fullName: System.Collections.Generic.IDictionary<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>
  nameWithType.vb: IDictionary(Of Type, Func(Of IApizrOptionalMediatorBase))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase))
  name.vb: IDictionary(Of Type, Func(Of IApizrOptionalMediatorBase))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  name: ApizrOptionalMediationRegistryBase
  nameWithType: ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  name: GetEnumerator
  nameWithType: ApizrOptionalMediationRegistryBase.GetEnumerator
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase))).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase))).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase))).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase))).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  nameWithType: IEnumerator<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase)))
  name.vb: IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ApizrOptionalMediationRegistryBase.IEnumerable.GetEnumerator
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ApizrOptionalMediationRegistryBase.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor
  name: GetCrudOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)()
  name.vb: GetCrudOptionalMediatorFor(Of T)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
    name: GetCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
    name: GetCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  name: IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>
  nameWithType: IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  name: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending
  commentId: N:Apizr.Optional.Cruding.Sending
  name: Apizr.Optional.Cruding.Sending
  nameWithType: Apizr.Optional.Cruding.Sending
  fullName: Apizr.Optional.Cruding.Sending
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
    name: GetCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
    name: GetCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  name: IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>
  nameWithType: IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
    name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
    name: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  name: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>
  nameWithType: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
    name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
    name: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  name: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor
  name: GetOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetOptionalMediatorFor<TWebApi>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)()
  name.vb: GetOptionalMediatorFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
    name: GetOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
    name: GetOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}
  commentId: T:Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}
  parent: Apizr.Optional.Requesting.Sending
  definition: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
  name: IApizrOptionalMediator<TWebApi>
  nameWithType: IApizrOptionalMediator<TWebApi>
  fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>
  nameWithType.vb: IApizrOptionalMediator(Of TWebApi)
  fullName.vb: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi)
  name.vb: IApizrOptionalMediator(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
  commentId: T:Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
  name: IApizrOptionalMediator<TWebApi>
  nameWithType: IApizrOptionalMediator<TWebApi>
  fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>
  nameWithType.vb: IApizrOptionalMediator(Of TWebApi)
  fullName.vb: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi)
  name.vb: IApizrOptionalMediator(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Sending
  commentId: N:Apizr.Optional.Requesting.Sending
  name: Apizr.Optional.Requesting.Sending
  nameWithType: Apizr.Optional.Requesting.Sending
  fullName: Apizr.Optional.Requesting.Sending
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor
  name: TryGetCrudOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  name: TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  name: TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  name: TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor
  name: TryGetOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  name: TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  name: TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  name: Count
  nameWithType: ApizrOptionalMediationRegistryBase.Count
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  commentId: P:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: Count
  nameWithType: IApizrOptionalMediationEnumerableRegistry.Count
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor
  name: ContainsCrudOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
    name: ContainsCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
    name: ContainsCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
    name: ContainsCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
    name: ContainsCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
    name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
    name: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
    name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
    name: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor
  name: ContainsOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsOptionalMediatorFor<TWebApi>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)()
  name.vb: ContainsOptionalMediatorFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
    name: ContainsOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
    name: ContainsOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
