### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  commentId: T:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  id: ApizrOptionalMediationRegistryBase
  parent: Apizr.Optional.Configuring.Registry
  children:
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``2
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``3
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``4
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``2
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``3
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``4
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  langs:
  - csharp
  - vb
  name: ApizrOptionalMediationRegistryBase
  nameWithType: ApizrOptionalMediationRegistryBase
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  type: Class
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrOptionalMediationRegistryBase
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 12
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Registry options available for extended registrations with optional mediation
  example: []
  syntax:
    content: 'public abstract class ApizrOptionalMediationRegistryBase : IApizrOptionalMediationEnumerableRegistry, IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>, IEnumerable'
    content.vb: Public MustInherit Class ApizrOptionalMediationRegistryBase Implements IApizrOptionalMediationEnumerableRegistry, IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase))), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistry
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  commentId: F:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  id: ConcurrentRegistry
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ConcurrentRegistry
  nameWithType: ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ConcurrentRegistry
  type: Field
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ConcurrentRegistry
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 14
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: protected readonly IDictionary<Type, Func<IApizrOptionalMediatorBase>> ConcurrentRegistry
    return:
      type: System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}
    content.vb: Protected ReadOnly ConcurrentRegistry As IDictionary(Of Type, Func(Of IApizrOptionalMediatorBase))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  id: '#ctor'
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ApizrOptionalMediationRegistryBase()
  nameWithType: ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase()
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 16
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  syntax:
    content: protected ApizrOptionalMediationRegistryBase()
    content.vb: Protected Sub New()
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor*
  nameWithType.vb: ApizrOptionalMediationRegistryBase.New()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.New()
  name.vb: New()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  id: GetEnumerator
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ApizrOptionalMediationRegistryBase.GetEnumerator()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetEnumerator
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 25
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Get factory enumerator
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
      description: ''
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``1
  id: GetCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 34
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Get a Crud optional mediator instance for an entity type
  example: []
  syntax:
    content: 'public IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>> GetCrudOptionalMediatorFor<T>() where T : class'
    typeParameters:
    - id: T
      description: The managed entity type
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class)() As IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T)()
  name.vb: GetCrudOptionalMediatorFor(Of T)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``2
  id: GetCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 38
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Get a Crud optional mediator instance for an entity type with a specific key type
  example: []
  syntax:
    content: 'public IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>> GetCrudOptionalMediatorFor<T, TKey>() where T : class'
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity's key type
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class, TKey)() As IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``3
  id: GetCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 42
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Get a Crud optional mediator instance for an entity type with a specific key type and ReadAll result type
  example: []
  syntax:
    content: 'public IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>> GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>() where T : class'
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity's key type
    - id: TReadAllResult
      description: The ReadAll request result type
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: ''
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult)() As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor``4
  id: GetCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 46
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Get a Crud optional mediator instance for an entity type with a specific key type, ReadAll result type and ReadAll params type
  example: []
  syntax:
    content: 'public IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams> GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>() where T : class'
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity's key type
    - id: TReadAllResult
      description: The ReadAll request result type
    - id: TReadAllParams
      description: The ReadAll request params type
    return:
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
      description: ''
    content.vb: Public Function GetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)() As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor``1
  id: GetOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: GetOptionalMediatorFor<TWebApi>()
  nameWithType: ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor<TWebApi>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: GetOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 52
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Get an api optional mediator instance
  example: []
  syntax:
    content: public IApizrOptionalMediator<TWebApi> GetOptionalMediatorFor<TWebApi>()
    typeParameters:
    - id: TWebApi
      description: The managed api type
    return:
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}
      description: ''
    content.vb: Public Function GetOptionalMediatorFor(Of TWebApi)() As IApizrOptionalMediator(Of TWebApi)
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor(Of TWebApi)()
  name.vb: GetOptionalMediatorFor(Of TWebApi)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, int, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 56
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Try to get a Crud optional mediator instance for an entity type
  example: []
  syntax:
    content: 'public bool TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>> mediator) where T : class'
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
      description: The managed entity type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class)(mediator As IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, Integer, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 60
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Try to get a Crud optional mediator instance for an entity type with a specific key type
  example: []
  syntax:
    content: 'public bool TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>> mediator) where T : class'
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity's key type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class, TKey)(mediator As IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  id: TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<string, object>>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 65
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Try to get a Crud optional mediator instance for an entity type with a specific key type and ReadAll result type
  example: []
  syntax:
    content: 'public bool TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>> mediator) where T : class'
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity's key type
    - id: TReadAllResult
      description: The ReadAll request result type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult)(mediator As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  id: TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 70
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Try to get a Crud optional mediator instance for an entity type with a specific key type, ReadAll result type and ReadAll params type
  example: []
  syntax:
    content: 'public bool TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams> mediator) where T : class'
    parameters:
    - id: mediator
      type: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
    typeParameters:
    - id: T
      description: The managed entity type
    - id: TKey
      description: The entity's key type
    - id: TReadAllResult
      description: The ReadAll request result type
    - id: TReadAllParams
      description: The ReadAll request params type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryGetCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)(mediator As IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  id: TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor<TWebApi>(out Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: TryGetOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 84
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Try to get an api optional mediator instance
  example: []
  syntax:
    content: public bool TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi> mediator)
    parameters:
    - id: mediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}
    typeParameters:
    - id: TWebApi
      description: The managed api type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryGetOptionalMediatorFor(Of TWebApi)(mediator As IApizrOptionalMediator(Of TWebApi)) As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}@)
  nameWithType.vb: ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor(Of TWebApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  commentId: P:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  id: Count
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ApizrOptionalMediationRegistryBase.Count
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  type: Property
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: Count
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 97
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Optional mediators count
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``1
  id: ContainsCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 100
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Check if registry contains an optional mediator for T entity type
  example: []
  syntax:
    content: 'public bool ContainsCrudOptionalMediatorFor<T>() where T : class'
    typeParameters:
    - id: T
      description: The entity type to manage
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class)() As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``2
  id: ContainsCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 104
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Check if registry contains an optional mediator for T entity type with TKey key type
  example: []
  syntax:
    content: 'public bool ContainsCrudOptionalMediatorFor<T, TKey>() where T : class'
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class, TKey)() As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``3
  id: ContainsCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 108
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Check if registry contains an optional mediator for T entity type with TKey key type and TReadAllResult ReadAll result type
  example: []
  syntax:
    content: 'public bool ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>() where T : class'
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    - id: TReadAllResult
      description: The ReadAll result type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult)() As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor``4
  id: ContainsCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsCrudOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 112
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: >-
    Check if registry contains an optional mediator for T entity type with TKey key type,

    TReadAllResult ReadAll result type and TReadAllParams ReadAll params type
  example: []
  syntax:
    content: 'public bool ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>() where T : class'
    typeParameters:
    - id: T
      description: The entity type to manage
    - id: TKey
      description: The entity key type
    - id: TReadAllResult
      description: The ReadAll result type
    - id: TReadAllParams
      description: The ReadAll params type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsCrudOptionalMediatorFor(Of T As Class, TKey, TReadAllResult, TReadAllParams)() As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor``1
  id: ContainsOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase
  langs:
  - csharp
  - vb
  name: ContainsOptionalMediatorFor<TWebApi>()
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor<TWebApi>()
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContainsOptionalMediatorFor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Configuring/Registry/ApizrOptionalMediationRegistryBase.cs
    startLine: 116
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  summary: Check if registry contains an optional mediator for TWebApi api type
  example: []
  syntax:
    content: public bool ContainsOptionalMediatorFor<TWebApi>()
    typeParameters:
    - id: TWebApi
      description: The api type
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsOptionalMediatorFor(Of TWebApi)() As Boolean
  overload: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor*
  implements:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  nameWithType.vb: ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor(Of TWebApi)()
  name.vb: ContainsOptionalMediatorFor(Of TWebApi)()
references:
- uid: Apizr.Optional.Configuring.Registry
  commentId: N:Apizr.Optional.Configuring.Registry
  href: Apizr.html
  name: Apizr.Optional.Configuring.Registry
  nameWithType: Apizr.Optional.Configuring.Registry
  fullName: Apizr.Optional.Configuring.Registry
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Configuring
    name: Configuring
    href: Apizr.Optional.Configuring.html
  - name: .
  - uid: Apizr.Optional.Configuring.Registry
    name: Registry
    href: Apizr.Optional.Configuring.Registry.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Configuring
    name: Configuring
    href: Apizr.Optional.Configuring.html
  - name: .
  - uid: Apizr.Optional.Configuring.Registry
    name: Registry
    href: Apizr.Optional.Configuring.Registry.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  commentId: T:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  parent: Apizr.Optional.Configuring.Registry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html
  name: IApizrOptionalMediationEnumerableRegistry
  nameWithType: IApizrOptionalMediationEnumerableRegistry
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase)))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase.html
  - name: )
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<Type, Func<IApizrOptionalMediatorBase>>
  nameWithType: IDictionary<Type, Func<IApizrOptionalMediatorBase>>
  fullName: System.Collections.Generic.IDictionary<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>
  nameWithType.vb: IDictionary(Of Type, Func(Of IApizrOptionalMediatorBase))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase))
  name.vb: IDictionary(Of Type, Func(Of IApizrOptionalMediatorBase))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.#ctor
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase__ctor
  name: ApizrOptionalMediationRegistryBase
  nameWithType: ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ApizrOptionalMediationRegistryBase
  nameWithType.vb: ApizrOptionalMediationRegistryBase.New
  fullName.vb: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.New
  name.vb: New
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_GetEnumerator
  name: GetEnumerator
  nameWithType: ApizrOptionalMediationRegistryBase.GetEnumerator
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase))).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase))).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  nameWithType: IEnumerator<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase)))
  name.vb: IEnumerator(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase.html
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_GetCrudOptionalMediatorFor__1
  name: GetCrudOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetCrudOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__1
  name: GetCrudOptionalMediatorFor<T>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)()
  name.vb: GetCrudOptionalMediatorFor(Of T)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  name: IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>
  nameWithType: IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, int, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, Integer, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  name: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: TApiEntity
  - name: ','
  - name: " "
  - name: TApiEntityKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TApiEntity
  - name: ','
  - name: " "
  - name: TApiEntityKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
- uid: Apizr.Optional.Cruding.Sending
  commentId: N:Apizr.Optional.Cruding.Sending
  href: Apizr.html
  name: Apizr.Optional.Cruding.Sending
  nameWithType: Apizr.Optional.Cruding.Sending
  fullName: Apizr.Optional.Cruding.Sending
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Cruding
    name: Cruding
    href: Apizr.Optional.Cruding.html
  - name: .
  - uid: Apizr.Optional.Cruding.Sending
    name: Sending
    href: Apizr.Optional.Cruding.Sending.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Cruding
    name: Cruding
    href: Apizr.Optional.Cruding.html
  - name: .
  - uid: Apizr.Optional.Cruding.Sending
    name: Sending
    href: Apizr.Optional.Cruding.Sending.html
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__2
  name: GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  name: IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>
  nameWithType: IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__3
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  name: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>
  nameWithType: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<string, object>>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__4
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
    name: GetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetCrudOptionalMediatorFor__4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}
  parent: Apizr.Optional.Cruding.Sending
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  name: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_GetOptionalMediatorFor__1
  name: GetOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.GetOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetOptionalMediatorFor__1
  name: GetOptionalMediatorFor<TWebApi>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)()
  name.vb: GetOptionalMediatorFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
    name: GetOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetOptionalMediatorFor__1
  - name: <
  - name: TWebApi
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
    name: GetOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_GetOptionalMediatorFor__1
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}
  commentId: T:Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}
  parent: Apizr.Optional.Requesting.Sending
  definition: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
  href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  name: IApizrOptionalMediator<TWebApi>
  nameWithType: IApizrOptionalMediator<TWebApi>
  fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>
  nameWithType.vb: IApizrOptionalMediator(Of TWebApi)
  fullName.vb: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi)
  name.vb: IApizrOptionalMediator(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: <
  - name: TWebApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
- uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
  commentId: T:Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
  href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  name: IApizrOptionalMediator<TWebApi>
  nameWithType: IApizrOptionalMediator<TWebApi>
  fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>
  nameWithType.vb: IApizrOptionalMediator(Of TWebApi)
  fullName.vb: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi)
  name.vb: IApizrOptionalMediator(Of TWebApi)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: <
  - name: TWebApi
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
- uid: Apizr.Optional.Requesting.Sending
  commentId: N:Apizr.Optional.Requesting.Sending
  href: Apizr.html
  name: Apizr.Optional.Requesting.Sending
  nameWithType: Apizr.Optional.Requesting.Sending
  fullName: Apizr.Optional.Requesting.Sending
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Requesting
    name: Requesting
    href: Apizr.Optional.Requesting.html
  - name: .
  - uid: Apizr.Optional.Requesting.Sending
    name: Sending
    href: Apizr.Optional.Requesting.Sending.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Requesting
    name: Requesting
    href: Apizr.Optional.Requesting.html
  - name: .
  - uid: Apizr.Optional.Requesting.Sending
    name: Sending
    href: Apizr.Optional.Requesting.Sending.html
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_TryGetCrudOptionalMediatorFor__1_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0_System_Int32_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  name: TryGetCrudOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetCrudOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__1_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0_System_Int32_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  name: TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, int, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, Integer, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__1_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0_System_Int32_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__1_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0_System_Int32_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__1_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0_System_Int32_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  name: TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(out IApizrCrudOptionalMediator<T, int, IEnumerable<T>, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, int, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, Integer, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Integer, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__1_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0_System_Int32_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__1_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0_System_Int32_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__2_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  name: TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__2_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__2_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__2_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  name: TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(out IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<string, object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__2_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__2_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__3_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2_System_Collections_Generic_IDictionary_System_String_System_Object____
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<string, object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__3_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2_System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__3_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2_System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__3_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2_System_Collections_Generic_IDictionary_System_String_System_Object____
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<string, object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<string, object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of String, Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__3_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2_System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__3_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2_System_Collections_Generic_IDictionary_System_String_System_Object____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__4_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2___3___
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__4_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2___3___
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__4_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2___3___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__4_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2___3___
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(out Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__4_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2___3___
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetCrudOptionalMediatorFor__4_Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator___0___1___2___3___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
  - name: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_TryGetOptionalMediatorFor__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator___0___
  name: TryGetOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.TryGetOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetOptionalMediatorFor__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator___0___
  name: TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(out Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetOptionalMediatorFor__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator___0___
  - name: <
  - name: TWebApi
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: <
  - name: TWebApi
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetOptionalMediatorFor__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator___0___
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
  - name: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetOptionalMediatorFor__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator___0___
  name: TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(out IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(out Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetOptionalMediatorFor__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator___0___
  - name: <
  - name: TWebApi
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: <
  - name: TWebApi
  - name: '>'
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_TryGetOptionalMediatorFor__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator___0___
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
  - name: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
  - name: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_Count
  name: Count
  nameWithType: ApizrOptionalMediationRegistryBase.Count
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.Count
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  commentId: P:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_Count
  name: Count
  nameWithType: IApizrOptionalMediationEnumerableRegistry.Count
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_ContainsCrudOptionalMediatorFor__1
  name: ContainsCrudOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsCrudOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__1
  name: ContainsCrudOptionalMediatorFor<T>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__2
  name: ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__3
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__4
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
    name: ContainsCrudOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsCrudOptionalMediatorFor__4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - name: TReadAllParams
  - name: )
  - name: (
  - name: )
- uid: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor*
  commentId: Overload:Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor
  href: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.html#Apizr_Optional_Configuring_Registry_ApizrOptionalMediationRegistryBase_ContainsOptionalMediatorFor__1
  name: ContainsOptionalMediatorFor
  nameWithType: ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor
  fullName: Apizr.Optional.Configuring.Registry.ApizrOptionalMediationRegistryBase.ContainsOptionalMediatorFor
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsOptionalMediatorFor__1
  name: ContainsOptionalMediatorFor<TWebApi>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)()
  name.vb: ContainsOptionalMediatorFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
    name: ContainsOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsOptionalMediatorFor__1
  - name: <
  - name: TWebApi
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
    name: ContainsOptionalMediatorFor
    href: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.html#Apizr_Optional_Configuring_Registry_IApizrOptionalMediationEnumerableRegistry_ContainsOptionalMediatorFor__1
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: )
  - name: (
  - name: )
