### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationConcurrentRegistry
  commentId: T:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationConcurrentRegistry
  id: IApizrOptionalMediationConcurrentRegistry
  parent: Apizr.Optional.Configuring.Registry
  children: []
  langs:
  - csharp
  - vb
  name: IApizrOptionalMediationConcurrentRegistry
  nameWithType: IApizrOptionalMediationConcurrentRegistry
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationConcurrentRegistry
  type: Interface
  source:
    id: IApizrOptionalMediationConcurrentRegistry
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Configuring\Registry\IApizrOptionalMediationConcurrentRegistry.cs
    startLine: 6
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Configuring.Registry
  example: []
  syntax:
    content: 'public interface IApizrOptionalMediationConcurrentRegistry : IApizrOptionalMediationRegistry, IApizrOptionalMediationEnumerableRegistry, IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>, IEnumerable, IApizrExtendedConcurrentRegistryBase'
    content.vb: >-
      Public Interface IApizrOptionalMediationConcurrentRegistry
          Inherits IApizrOptionalMediationRegistry, IApizrExtendedConcurrentRegistryBase
  inheritedMembers:
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}@)
  - Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}@)
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
  - Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate(System.Type,System.Type)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationRegistry
  commentId: T:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationRegistry
  parent: Apizr.Optional.Configuring.Registry
  name: IApizrOptionalMediationRegistry
  nameWithType: IApizrOptionalMediationRegistry
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationRegistry
- uid: Apizr.Optional.Configuring.Registry
  commentId: N:Apizr.Optional.Configuring.Registry
  name: Apizr.Optional.Configuring.Registry
  nameWithType: Apizr.Optional.Configuring.Registry
  fullName: Apizr.Optional.Configuring.Registry
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  commentId: P:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: Count
  nameWithType: IApizrOptionalMediationEnumerableRegistry.Count
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.Count
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
    name: ContainsCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``1
    name: ContainsCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
    name: ContainsCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``2
    name: ContainsCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
    name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``3
    name: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
    name: ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor``4
    name: ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: ContainsOptionalMediatorFor<TWebApi>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)()
  name.vb: ContainsOptionalMediatorFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
    name: ContainsOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor``1
    name: ContainsOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.ContainsOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)()
  name.vb: GetCrudOptionalMediatorFor(Of T)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
    name: GetCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``1
    name: GetCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
    name: GetCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``2
    name: GetCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
    name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``3
    name: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  name.vb: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
    name: GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor``4
    name: GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  name: GetOptionalMediatorFor<TWebApi>()
  nameWithType: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>()
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>()
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)()
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)()
  name.vb: GetOptionalMediatorFor(Of TWebApi)()
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
    name: GetOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor``1
    name: GetOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.GetOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},System.Int32,System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  name: TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{{T},{TKey},{TReadAllResult},{TReadAllParams}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{{TWebApi}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  parent: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  definition: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  name: TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase))).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase))).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase))).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase))).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate(System.Type,System.Type)
  commentId: M:Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate(System.Type,System.Type)
  parent: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
  isExternal: true
  name: AddOrUpdate(Type, Type)
  nameWithType: IApizrExtendedConcurrentRegistryBase.AddOrUpdate(Type, Type)
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate(System.Type, System.Type)
  spec.csharp:
  - uid: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate(System.Type,System.Type)
    name: AddOrUpdate
    nameWithType: IApizrExtendedConcurrentRegistryBase.AddOrUpdate
    fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate(System.Type,System.Type)
    name: AddOrUpdate
    nameWithType: IApizrExtendedConcurrentRegistryBase.AddOrUpdate
    fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase.AddOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  commentId: T:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
  parent: Apizr.Optional.Configuring.Registry
  name: IApizrOptionalMediationEnumerableRegistry
  nameWithType: IApizrOptionalMediationEnumerableRegistry
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  name: TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(IApizrCrudOptionalMediator<T, Int32, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, System.Int32, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T)(IApizrCrudOptionalMediator(Of T, Int32, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``1(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,System.Int32,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  name: TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(IApizrCrudOptionalMediator<T, TKey, IEnumerable<T>, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey)(IApizrCrudOptionalMediator(Of T, TKey, IEnumerable(Of T), IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``2(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
  isExternal: true
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, IDictionary<String, Object>>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``3(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,System.Collections.Generic.IDictionary{System.String,System.Object}}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
  name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<T, TKey, TReadAllResult, TReadAllParams>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  name.vb: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)(IApizrCrudOptionalMediator(Of T, TKey, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor<T, TKey, TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor``4(Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator{``0,``1,``2,``3}@)
    name: TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetCrudOptionalMediatorFor(Of T, TKey, TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
    name: IApizrCrudOptionalMediator
    nameWithType: IApizrCrudOptionalMediator
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  commentId: M:Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
  name: TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(IApizrOptionalMediator<TWebApi>)
  fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator<TWebApi>)
  nameWithType.vb: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  fullName.vb: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator(Of TWebApi))
  name.vb: TryGetOptionalMediatorFor(Of TWebApi)(IApizrOptionalMediator(Of TWebApi))
  spec.csharp:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor<TWebApi>
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor<TWebApi>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator{``0}@)
    name: TryGetOptionalMediatorFor(Of TWebApi)
    nameWithType: IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
    fullName: Apizr.Optional.Configuring.Registry.IApizrOptionalMediationEnumerableRegistry.TryGetOptionalMediatorFor(Of TWebApi)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator`1
    name: IApizrOptionalMediator
    nameWithType: IApizrOptionalMediator
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Func{Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  nameWithType: IEnumerable<KeyValuePair<Type, Func<IApizrOptionalMediatorBase>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type, System.Func<Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Type, System.Func(Of Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase)))
  name.vb: IEnumerable(Of KeyValuePair(Of Type, Func(Of IApizrOptionalMediatorBase)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
    name: IApizrOptionalMediatorBase
    nameWithType: IApizrOptionalMediatorBase
    fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
  commentId: T:Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
  parent: Apizr.Extending.Configuring.Registry
  name: IApizrExtendedConcurrentRegistryBase
  nameWithType: IApizrExtendedConcurrentRegistryBase
  fullName: Apizr.Extending.Configuring.Registry.IApizrExtendedConcurrentRegistryBase
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Apizr.Extending.Configuring.Registry
  commentId: N:Apizr.Extending.Configuring.Registry
  name: Apizr.Extending.Configuring.Registry
  nameWithType: Apizr.Extending.Configuring.Registry
  fullName: Apizr.Extending.Configuring.Registry
