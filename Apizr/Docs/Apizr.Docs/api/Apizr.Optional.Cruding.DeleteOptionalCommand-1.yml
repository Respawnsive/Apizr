### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
  commentId: T:Apizr.Optional.Cruding.DeleteOptionalCommand`1
  id: DeleteOptionalCommand`1
  parent: Apizr.Optional.Cruding
  children:
  - Apizr.Optional.Cruding.DeleteOptionalCommand`1.#ctor(System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: DeleteOptionalCommand<T>
  nameWithType: DeleteOptionalCommand<T>
  fullName: Apizr.Optional.Cruding.DeleteOptionalCommand<T>
  type: Class
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/DeleteOptionalCommand.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DeleteOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/DeleteOptionalCommand.cs
    startLine: 30
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  summary: "\nThe mediation Delete optional command\n"
  example: []
  syntax:
    content: 'public class DeleteOptionalCommand<T> : DeleteCommandBase<T, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>, IMediationCommand<int, Option<Unit, ApizrException>>, IRequest<Option<Unit, ApizrException>>, IBaseRequest'
    typeParameters:
    - id: T
      description: The api entity type
    content.vb: "Public Class DeleteOptionalCommand(Of T)\n    Inherits DeleteCommandBase(Of T,  Option(Of Unit, ApizrException) ,  IApizrRequestOptions, IApizrRequestOptionsBuilder) \n    Implements IMediationCommand(Of Integer,  Option(Of Unit, ApizrException) ), IRequest(Of  Option(Of Unit, ApizrException) ), IBaseRequest"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  - Apizr.Mediation.Commanding.MediationCommandBase{System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  - Apizr.Mediation.Cruding.Base.DeleteCommandBase{{T},System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  - Apizr.Mediation.Cruding.Base.DeleteCommandBase{{T},Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  implements:
  - Apizr.Mediation.Commanding.IMediationCommand{System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - MediatR.IBaseRequest
  inheritedMembers:
  - Apizr.Mediation.Cruding.Base.DeleteCommandBase{{T},System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Key
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.OptionsBuilder
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: DeleteOptionalCommand(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Cruding.DeleteOptionalCommand(Of T)
  name.vb: DeleteOptionalCommand(Of T)
- uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1.#ctor(System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.DeleteOptionalCommand`1.#ctor(System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: '#ctor(System.Int32,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})'
  parent: Apizr.Optional.Cruding.DeleteOptionalCommand`1
  langs:
  - csharp
  - vb
  name: DeleteOptionalCommand(Int32, Action<IApizrRequestOptionsBuilder>)
  nameWithType: DeleteOptionalCommand<T>.DeleteOptionalCommand(Int32, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.DeleteOptionalCommand<T>.DeleteOptionalCommand(System.Int32, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/DeleteOptionalCommand.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/DeleteOptionalCommand.cs
    startLine: 37
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  summary: "\nThe mediation Delete optional command constructor\n"
  example: []
  syntax:
    content: public DeleteOptionalCommand(int key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: System.Int32
      description: The entity&apos;s crud key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    content.vb: Public Sub New(key As Integer, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing)
  overload: Apizr.Optional.Cruding.DeleteOptionalCommand`1.#ctor*
  nameWithType.vb: DeleteOptionalCommand(Of T).DeleteOptionalCommand(Int32, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.DeleteOptionalCommand(Of T).DeleteOptionalCommand(System.Int32, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DeleteOptionalCommand(Int32, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Optional.Cruding
  commentId: N:Apizr.Optional.Cruding
  name: Apizr.Optional.Cruding
  nameWithType: Apizr.Optional.Cruding
  fullName: Apizr.Optional.Cruding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.RequestBase`3
  name: RequestBase<Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: RequestBase<Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: RequestBase(Of Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: RequestBase(Of Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.MediationCommandBase{System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Commanding.MediationCommandBase{System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Commanding
  definition: Apizr.Mediation.Commanding.MediationCommandBase`4
  name: MediationCommandBase<Int32, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: MediationCommandBase<Int32, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Commanding.MediationCommandBase<System.Int32, Optional.Option<MediatR.Unit, Apizr.ApizrException>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: MediationCommandBase(Of Int32, Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Commanding.MediationCommandBase(Of System.Int32, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: MediationCommandBase(Of Int32, Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`4
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`4
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase{{T},System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Cruding.Base.DeleteCommandBase{`0,System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Cruding.Base
  definition: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5
  name: DeleteCommandBase<T, Int32, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: DeleteCommandBase<T, Int32, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase<T, System.Int32, Optional.Option<MediatR.Unit, Apizr.ApizrException>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: DeleteCommandBase(Of T, Int32, Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Base.DeleteCommandBase(Of T, System.Int32, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: DeleteCommandBase(Of T, Int32, Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase{{T},Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Cruding.Base.DeleteCommandBase{`0,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Cruding.Base
  definition: Apizr.Mediation.Cruding.Base.DeleteCommandBase`4
  name: DeleteCommandBase<T, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: DeleteCommandBase<T, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase<T, Optional.Option<MediatR.Unit, Apizr.ApizrException>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: DeleteCommandBase(Of T, Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Base.DeleteCommandBase(Of T, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: DeleteCommandBase(Of T, Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`4
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`4
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommand{System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:Apizr.Mediation.Commanding.IMediationCommand{System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: Apizr.Mediation.Commanding
  definition: Apizr.Mediation.Commanding.IMediationCommand`2
  name: IMediationCommand<Int32, Option<Unit, ApizrException>>
  nameWithType: IMediationCommand<Int32, Option<Unit, ApizrException>>
  fullName: Apizr.Mediation.Commanding.IMediationCommand<System.Int32, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IMediationCommand(Of Int32, Option(Of Unit, ApizrException))
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommand(Of System.Int32, Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IMediationCommand(Of Int32, Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: MediatR
  definition: MediatR.IRequest`1
  name: IRequest<Option<Unit, ApizrException>>
  nameWithType: IRequest<Option<Unit, ApizrException>>
  fullName: MediatR.IRequest<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IRequest(Of Option(Of Unit, ApizrException))
  fullName.vb: MediatR.IRequest(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IRequest(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IBaseRequest
  commentId: T:MediatR.IBaseRequest
  parent: MediatR
  isExternal: true
  name: IBaseRequest
  nameWithType: IBaseRequest
  fullName: MediatR.IBaseRequest
- uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase{{T},System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Key
  commentId: P:Apizr.Mediation.Cruding.Base.DeleteCommandBase{`0,System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Key
  parent: Apizr.Mediation.Cruding.Base.DeleteCommandBase{{T},System.Int32,Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  definition: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5.Key
  name: Key
  nameWithType: DeleteCommandBase<T, Int32, Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.Key
  fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase<T, System.Int32, Optional.Option<MediatR.Unit, Apizr.ApizrException>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.Key
  nameWithType.vb: DeleteCommandBase(Of T, Int32, Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder).Key
  fullName.vb: Apizr.Mediation.Cruding.Base.DeleteCommandBase(Of T, System.Int32, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).Key
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.OptionsBuilder
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.OptionsBuilder
  parent: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  name: OptionsBuilder
  nameWithType: RequestBase<Option<Unit, ApizrException>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.OptionsBuilder
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.OptionsBuilder
  nameWithType.vb: RequestBase(Of Option(Of Unit, ApizrException), IApizrRequestOptions, IApizrRequestOptionsBuilder).OptionsBuilder
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).OptionsBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Base.RequestBase`3
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase`3
  name: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Base
  commentId: N:Apizr.Mediation.Requesting.Base
  name: Apizr.Mediation.Requesting.Base
  nameWithType: Apizr.Mediation.Requesting.Base
  fullName: Apizr.Mediation.Requesting.Base
- uid: Apizr.Mediation.Commanding.MediationCommandBase`4
  commentId: T:Apizr.Mediation.Commanding.MediationCommandBase`4
  name: MediationCommandBase<TRequestData, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: MediationCommandBase<TRequestData, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Commanding.MediationCommandBase<TRequestData, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: MediationCommandBase(Of TRequestData, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Commanding.MediationCommandBase(Of TRequestData, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: MediationCommandBase(Of TRequestData, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`4
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`4
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding
  commentId: N:Apizr.Mediation.Commanding
  name: Apizr.Mediation.Commanding
  nameWithType: Apizr.Mediation.Commanding
  fullName: Apizr.Mediation.Commanding
- uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5
  commentId: T:Apizr.Mediation.Cruding.Base.DeleteCommandBase`5
  name: DeleteCommandBase<T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: DeleteCommandBase<T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase<T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: DeleteCommandBase(Of T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Base.DeleteCommandBase(Of T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: DeleteCommandBase(Of T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base
  commentId: N:Apizr.Mediation.Cruding.Base
  name: Apizr.Mediation.Cruding.Base
  nameWithType: Apizr.Mediation.Cruding.Base
  fullName: Apizr.Mediation.Cruding.Base
- uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`4
  commentId: T:Apizr.Mediation.Cruding.Base.DeleteCommandBase`4
  name: DeleteCommandBase<T, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: DeleteCommandBase<T, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase<T, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: DeleteCommandBase(Of T, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Base.DeleteCommandBase(Of T, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: DeleteCommandBase(Of T, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`4
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`4
    name: DeleteCommandBase
    nameWithType: DeleteCommandBase
    fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommand`2
  commentId: T:Apizr.Mediation.Commanding.IMediationCommand`2
  name: IMediationCommand<TRequestData, TResultData>
  nameWithType: IMediationCommand<TRequestData, TResultData>
  fullName: Apizr.Mediation.Commanding.IMediationCommand<TRequestData, TResultData>
  nameWithType.vb: IMediationCommand(Of TRequestData, TResultData)
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommand(Of TRequestData, TResultData)
  name.vb: IMediationCommand(Of TRequestData, TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest`1
  commentId: T:MediatR.IRequest`1
  isExternal: true
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: MediatR.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: MediatR.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Base.DeleteCommandBase`5.Key
  commentId: P:Apizr.Mediation.Cruding.Base.DeleteCommandBase`5.Key
  name: Key
  nameWithType: DeleteCommandBase<T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Key
  fullName: Apizr.Mediation.Cruding.Base.DeleteCommandBase<T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Key
  nameWithType.vb: DeleteCommandBase(Of T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).Key
  fullName.vb: Apizr.Mediation.Cruding.Base.DeleteCommandBase(Of T, TKey, TResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).Key
- uid: Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  name: OptionsBuilder
  nameWithType: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  nameWithType.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
- uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.DeleteOptionalCommand`1.#ctor
  name: DeleteOptionalCommand
  nameWithType: DeleteOptionalCommand<T>.DeleteOptionalCommand
  fullName: Apizr.Optional.Cruding.DeleteOptionalCommand<T>.DeleteOptionalCommand
  nameWithType.vb: DeleteOptionalCommand(Of T).DeleteOptionalCommand
  fullName.vb: Apizr.Optional.Cruding.DeleteOptionalCommand(Of T).DeleteOptionalCommand
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
