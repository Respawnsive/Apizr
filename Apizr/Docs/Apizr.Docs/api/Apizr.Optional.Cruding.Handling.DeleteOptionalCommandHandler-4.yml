### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4
  commentId: T:Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4
  id: DeleteOptionalCommandHandler`4
  parent: Apizr.Optional.Cruding.Handling
  children:
  - Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  - Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{`0},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  nameWithType: DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  fullName: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  type: Class
  source:
    id: DeleteOptionalCommandHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Handling\DeleteOptionalCommandHandler.cs
    startLine: 60
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  summary: "\nThe Delete optional command handler\n"
  example: []
  syntax:
    content: 'public class DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams> : DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>, IMediationCommandHandler<DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>, IRequestHandler<DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>> where TModelEntity : class where TApiEntity : class'
    typeParameters:
    - id: TModelEntity
      description: The model entity type
    - id: TApiEntity
      description: The api entity type
    - id: TReadAllResult
      description: The returned result type
    - id: TReadAllParams
      description: The read all params type
    content.vb: "Public Class DeleteOptionalCommandHandler(Of TModelEntity As Class, TApiEntity As Class, TReadAllResult, TReadAllParams)\n    Inherits DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand(Of TModelEntity),  Option(Of Unit, ApizrException) ) \n    Implements IMediationCommandHandler(Of DeleteOptionalCommand(Of TModelEntity),  Option(Of Unit, ApizrException) ), IRequestHandler(Of DeleteOptionalCommand(Of TModelEntity),  Option(Of Unit, ApizrException) )"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  - Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  implements:
  - Apizr.Mediation.Commanding.IMediationCommandHandler{Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - MediatR.IRequestHandler{Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  inheritedMembers:
  - Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},System.Threading.CancellationToken)
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}.CrudApiManager
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
  name.vb: DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
- uid: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  commentId: M:Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  id: '#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})'
  parent: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4
  langs:
  - csharp
  - vb
  name: DeleteOptionalCommandHandler(IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>)
  nameWithType: DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.DeleteOptionalCommandHandler(IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.DeleteOptionalCommandHandler(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Handling\DeleteOptionalCommandHandler.cs
    startLine: 65
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  syntax:
    content: public DeleteOptionalCommandHandler(IApizrManager<ICrudApi<TApiEntity, int, TReadAllResult, TReadAllParams>> crudApiManager)
    parameters:
    - id: crudApiManager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}}
    content.vb: Public Sub New(crudApiManager As IApizrManager(Of ICrudApi(Of TApiEntity, Integer, TReadAllResult, TReadAllParams)))
  overload: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.#ctor*
  nameWithType.vb: DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).DeleteOptionalCommandHandler(IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).DeleteOptionalCommandHandler(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams)))
  name.vb: DeleteOptionalCommandHandler(IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)))
- uid: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{`0},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{`0},System.Threading.CancellationToken)
  id: Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{`0},System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4
  langs:
  - csharp
  - vb
  name: Handle(DeleteOptionalCommand<TModelEntity>, CancellationToken)
  nameWithType: DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle(DeleteOptionalCommand<TModelEntity>, CancellationToken)
  fullName: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Handle
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Handling\DeleteOptionalCommandHandler.cs
    startLine: 69
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  syntax:
    content: public override async Task<Option<Unit, ApizrException>> Handle(DeleteOptionalCommand<TModelEntity> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Overrides Function Handle(request As DeleteOptionalCommand(Of TModelEntity), cancellationToken As CancellationToken) As Task(Of  Option(Of Unit, ApizrException)
  overridden: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},System.Threading.CancellationToken)
  overload: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.Handle*
  nameWithType.vb: DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle(DeleteOptionalCommand(Of TModelEntity), CancellationToken)
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle(Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity), System.Threading.CancellationToken)
  name.vb: Handle(DeleteOptionalCommand(Of TModelEntity), CancellationToken)
references:
- uid: Apizr.Optional.Cruding.Handling
  commentId: N:Apizr.Optional.Cruding.Handling
  name: Apizr.Optional.Cruding.Handling
  nameWithType: Apizr.Optional.Cruding.Handling
  fullName: Apizr.Optional.Cruding.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  parent: Apizr.Mediation.Requesting.Handling.Base
  name: RequestHandlerBase
  nameWithType: RequestHandlerBase
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,System.Int32,`2,`3}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{`0,`1,`2,`3,Apizr.Optional.Cruding.DeleteOptionalCommand{`0},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6
  name: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>
  nameWithType: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>
  fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException))
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity), Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6
    name: DeleteCommandHandlerBase
    nameWithType: DeleteCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6
    name: DeleteCommandHandlerBase
    nameWithType: DeleteCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommandHandler{Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:Apizr.Mediation.Commanding.IMediationCommandHandler{Apizr.Optional.Cruding.DeleteOptionalCommand{`0},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: Apizr.Mediation.Commanding
  definition: Apizr.Mediation.Commanding.IMediationCommandHandler`2
  name: IMediationCommandHandler<DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>
  nameWithType: IMediationCommandHandler<DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>
  fullName: Apizr.Mediation.Commanding.IMediationCommandHandler<Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IMediationCommandHandler(Of DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException))
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommandHandler(Of Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity), Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IMediationCommandHandler(Of DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:MediatR.IRequestHandler{Apizr.Optional.Cruding.DeleteOptionalCommand{`0},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>
  nameWithType: IRequestHandler<DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>
  fullName: MediatR.IRequestHandler<Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IRequestHandler(Of DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException))
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity), Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IRequestHandler(Of DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{`0,`1,`2,`3,Apizr.Optional.Cruding.DeleteOptionalCommand{`0},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand{`0},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  definition: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
  name: Handle(DeleteOptionalCommand<TModelEntity>, CancellationToken)
  nameWithType: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>.Handle(DeleteOptionalCommand<TModelEntity>, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>, Optional.Option<MediatR.Unit, Apizr.ApizrException>>.Handle(Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>, System.Threading.CancellationToken)
  nameWithType.vb: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException)).Handle(DeleteOptionalCommand(Of TModelEntity), CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity), Optional.Option(Of MediatR.Unit, Apizr.ApizrException)).Handle(Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity), System.Threading.CancellationToken)
  name.vb: Handle(DeleteOptionalCommand(Of TModelEntity), CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand<TModelEntity>, Option<Unit, ApizrException>>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>, Optional.Option<MediatR.Unit, Apizr.ApizrException>>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, DeleteOptionalCommand(Of TModelEntity), Option(Of Unit, ApizrException)).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity), Optional.Option(Of MediatR.Unit, Apizr.ApizrException)).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,System.Int32,`2,`3}.CrudApiManager
  parent: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams).CrudApiManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base
  commentId: N:Apizr.Mediation.Cruding.Handling.Base
  name: Apizr.Mediation.Cruding.Handling.Base
  nameWithType: Apizr.Mediation.Cruding.Handling.Base
  fullName: Apizr.Mediation.Cruding.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6
  name: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult>
  nameWithType: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult>
  fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult>
  nameWithType.vb: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult)
  name.vb: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6
    name: DeleteCommandHandlerBase
    nameWithType: DeleteCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommandResult
    nameWithType: TCommandResult
    fullName: TCommandResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6
    name: DeleteCommandHandlerBase
    nameWithType: DeleteCommandHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommandResult
    nameWithType: TCommandResult
    fullName: TCommandResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
  commentId: T:Apizr.Mediation.Commanding.IMediationCommandHandler`2
  name: IMediationCommandHandler<TCommand, TResponse>
  nameWithType: IMediationCommandHandler<TCommand, TResponse>
  fullName: Apizr.Mediation.Commanding.IMediationCommandHandler<TCommand, TResponse>
  nameWithType.vb: IMediationCommandHandler(Of TCommand, TResponse)
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommandHandler(Of TCommand, TResponse)
  name.vb: IMediationCommandHandler(Of TCommand, TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommandHandler`2
    name: IMediationCommandHandler
    nameWithType: IMediationCommandHandler
    fullName: Apizr.Mediation.Commanding.IMediationCommandHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding
  commentId: N:Apizr.Mediation.Commanding
  name: Apizr.Mediation.Commanding
  nameWithType: Apizr.Mediation.Commanding
  fullName: Apizr.Mediation.Commanding
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TCommand, CancellationToken)
  nameWithType: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult>.Handle(TCommand, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult>.Handle(TCommand, System.Threading.CancellationToken)
  nameWithType.vb: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult).Handle(TCommand, CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult).Handle(TCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.DeleteCommandHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TCommand, TCommandResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommand
    nameWithType: TCommand
    fullName: TCommand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
- uid: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.#ctor
  name: DeleteOptionalCommandHandler
  nameWithType: DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.DeleteOptionalCommandHandler
  fullName: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.DeleteOptionalCommandHandler
  nameWithType.vb: DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).DeleteOptionalCommandHandler
  fullName.vb: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).DeleteOptionalCommandHandler
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>
  nameWithType: IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams))
  name.vb: IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.Handle*
  commentId: Overload:Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler`4.Handle
  name: Handle
  nameWithType: DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle
  fullName: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle
  nameWithType.vb: DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle
  fullName.vb: Apizr.Optional.Cruding.Handling.DeleteOptionalCommandHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle
- uid: Apizr.Optional.Cruding.DeleteOptionalCommand{{TModelEntity}}
  commentId: T:Apizr.Optional.Cruding.DeleteOptionalCommand{`0}
  parent: Apizr.Optional.Cruding
  definition: Apizr.Optional.Cruding.DeleteOptionalCommand`1
  name: DeleteOptionalCommand<TModelEntity>
  nameWithType: DeleteOptionalCommand<TModelEntity>
  fullName: Apizr.Optional.Cruding.DeleteOptionalCommand<TModelEntity>
  nameWithType.vb: DeleteOptionalCommand(Of TModelEntity)
  fullName.vb: Apizr.Optional.Cruding.DeleteOptionalCommand(Of TModelEntity)
  name.vb: DeleteOptionalCommand(Of TModelEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<Unit, ApizrException>>
  nameWithType: Task<Option<Unit, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of Unit, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: Task(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
  commentId: T:Apizr.Optional.Cruding.DeleteOptionalCommand`1
  name: DeleteOptionalCommand<T>
  nameWithType: DeleteOptionalCommand<T>
  fullName: Apizr.Optional.Cruding.DeleteOptionalCommand<T>
  nameWithType.vb: DeleteOptionalCommand(Of T)
  fullName.vb: Apizr.Optional.Cruding.DeleteOptionalCommand(Of T)
  name.vb: DeleteOptionalCommand(Of T)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.DeleteOptionalCommand`1
    name: DeleteOptionalCommand
    nameWithType: DeleteOptionalCommand
    fullName: Apizr.Optional.Cruding.DeleteOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding
  commentId: N:Apizr.Optional.Cruding
  name: Apizr.Optional.Cruding
  nameWithType: Apizr.Optional.Cruding
  fullName: Apizr.Optional.Cruding
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
