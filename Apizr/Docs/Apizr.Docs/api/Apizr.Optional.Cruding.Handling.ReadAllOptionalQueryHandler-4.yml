### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4
  commentId: T:Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4
  id: ReadAllOptionalQueryHandler`4
  parent: Apizr.Optional.Cruding.Handling
  children:
  - Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`0,`1,`3,System.Collections.Generic.IDictionary{System.String,System.Object}}})
  - Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>
  nameWithType: ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>
  fullName: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>
  type: Class
  source:
    id: ReadAllOptionalQueryHandler
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.Optional\Optional\Cruding\Handling\ReadAllOptionalQueryHandler.cs
    startLine: 55
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  summary: "\nThe ReadAll optional query handler\n"
  example: []
  syntax:
    content: 'public class ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult> : ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>, IApizrRequestOptions, IApizrRequestOptionsBuilder>, IMediationQueryHandler<ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>, IRequestHandler<ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>> where TApiEntity : class'
    typeParameters:
    - id: TApiEntity
      description: ''
    - id: TApiEntityKey
      description: The api entity type
    - id: TModelEntityReadAllResult
      description: The returned model result type
    - id: TApiEntityReadAllResult
      description: The received api result type
    content.vb: "Public Class ReadAllOptionalQueryHandler(Of TApiEntity As Class, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult)\n    Inherits ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery(Of TModelEntityReadAllResult),  Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)) ,  IApizrRequestOptions, IApizrRequestOptionsBuilder) \n    Implements IMediationQueryHandler(Of ReadAllOptionalQuery(Of TModelEntityReadAllResult),  Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)) ), IRequestHandler(Of ReadAllOptionalQuery(Of TModelEntityReadAllResult),  Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)) )"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TApiEntityReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  - Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{{TApiEntity},{TApiEntityKey},{TModelEntityReadAllResult},{TApiEntityReadAllResult},Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  implements:
  - Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
  - MediatR.IRequestHandler{Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
  inheritedMembers:
  - Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{{TApiEntity},{TApiEntityKey},{TModelEntityReadAllResult},{TApiEntityReadAllResult},Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},System.Threading.CancellationToken)
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TApiEntityReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.CrudApiManager
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult)
  name.vb: ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult)
- uid: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`0,`1,`3,System.Collections.Generic.IDictionary{System.String,System.Object}}})
  commentId: M:Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`0,`1,`3,System.Collections.Generic.IDictionary{System.String,System.Object}}})
  id: '#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`0,`1,`3,System.Collections.Generic.IDictionary{System.String,System.Object}}})'
  parent: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQueryHandler(IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<String, Object>>>)
  nameWithType: ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.ReadAllOptionalQueryHandler(IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<String, Object>>>)
  fullName: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.ReadAllOptionalQueryHandler(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.Optional\Optional\Cruding\Handling\ReadAllOptionalQueryHandler.cs
    startLine: 59
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  syntax:
    content: public ReadAllOptionalQueryHandler(IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<string, object>>> crudApiManager)
    parameters:
    - id: crudApiManager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},{TApiEntityKey},{TApiEntityReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
    content.vb: Public Sub New(crudApiManager As IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object))))
  overload: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.#ctor*
  nameWithType.vb: ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).ReadAllOptionalQueryHandler(IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object))))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).ReadAllOptionalQueryHandler(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object))))
  name.vb: ReadAllOptionalQueryHandler(IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object))))
- uid: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},System.Threading.CancellationToken)
  id: Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4
  langs:
  - csharp
  - vb
  name: Handle(ReadAllOptionalQuery<TModelEntityReadAllResult>, CancellationToken)
  nameWithType: ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.Handle(ReadAllOptionalQuery<TModelEntityReadAllResult>, CancellationToken)
  fullName: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Handle
    path: C:\Dev\Community\Apizr\Apizr\Src\Handling\Apizr.Integrations.Optional\Optional\Cruding\Handling\ReadAllOptionalQueryHandler.cs
    startLine: 63
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  syntax:
    content: public override async Task<Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>> Handle(ReadAllOptionalQuery<TModelEntityReadAllResult> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
    content.vb: Public Overrides Function Handle(request As ReadAllOptionalQuery(Of TModelEntityReadAllResult), cancellationToken As CancellationToken) As Task(Of  Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult))
  overridden: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{{TApiEntity},{TApiEntityKey},{TModelEntityReadAllResult},{TApiEntityReadAllResult},Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},System.Threading.CancellationToken)
  overload: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.Handle*
  nameWithType.vb: ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).Handle(ReadAllOptionalQuery(Of TModelEntityReadAllResult), CancellationToken)
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult), System.Threading.CancellationToken)
  name.vb: Handle(ReadAllOptionalQuery(Of TModelEntityReadAllResult), CancellationToken)
references:
- uid: Apizr.Optional.Cruding.Handling
  commentId: N:Apizr.Optional.Cruding.Handling
  name: Apizr.Optional.Cruding.Handling
  nameWithType: Apizr.Optional.Cruding.Handling
  fullName: Apizr.Optional.Cruding.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TApiEntityReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`0,`1,`3,System.Collections.Generic.IDictionary{System.String,System.Object},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6
  name: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<String, Object>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<String, Object>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{{TApiEntity},{TApiEntityKey},{TModelEntityReadAllResult},{TApiEntityReadAllResult},Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{`0,`1,`2,`3,Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},Optional.Option{`2,Apizr.ApizrException{`2}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8
  name: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>, IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>, Optional.Option<TModelEntityReadAllResult, Apizr.ApizrException<TModelEntityReadAllResult>>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult), Optional.Option(Of TModelEntityReadAllResult, Apizr.ApizrException(Of TModelEntityReadAllResult)), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)), IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8
    name: ReadAllQueryHandlerBase
    nameWithType: ReadAllQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8
    name: ReadAllQueryHandlerBase
    nameWithType: ReadAllQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
  commentId: T:Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},Optional.Option{`2,Apizr.ApizrException{`2}}}
  parent: Apizr.Mediation.Querying
  definition: Apizr.Mediation.Querying.IMediationQueryHandler`2
  name: IMediationQueryHandler<ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  nameWithType: IMediationQueryHandler<ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  fullName: Apizr.Mediation.Querying.IMediationQueryHandler<Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>, Optional.Option<TModelEntityReadAllResult, Apizr.ApizrException<TModelEntityReadAllResult>>>
  nameWithType.vb: IMediationQueryHandler(Of ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  fullName.vb: Apizr.Mediation.Querying.IMediationQueryHandler(Of Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult), Optional.Option(Of TModelEntityReadAllResult, Apizr.ApizrException(Of TModelEntityReadAllResult)))
  name.vb: IMediationQueryHandler(Of ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
  commentId: T:MediatR.IRequestHandler{Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},Optional.Option{`2,Apizr.ApizrException{`2}}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  nameWithType: IRequestHandler<ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  fullName: MediatR.IRequestHandler<Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>, Optional.Option<TModelEntityReadAllResult, Apizr.ApizrException<TModelEntityReadAllResult>>>
  nameWithType.vb: IRequestHandler(Of ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult), Optional.Option(Of TModelEntityReadAllResult, Apizr.ApizrException(Of TModelEntityReadAllResult)))
  name.vb: IRequestHandler(Of ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{{TApiEntity},{TApiEntityKey},{TModelEntityReadAllResult},{TApiEntityReadAllResult},Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{`0,`1,`2,`3,Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},Optional.Option{`2,Apizr.ApizrException{`2}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery{`2},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase{{TApiEntity},{TApiEntityKey},{TModelEntityReadAllResult},{TApiEntityReadAllResult},Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}},Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  definition: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8.Handle(`4,System.Threading.CancellationToken)
  name: Handle(ReadAllOptionalQuery<TModelEntityReadAllResult>, CancellationToken)
  nameWithType: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.Handle(ReadAllOptionalQuery<TModelEntityReadAllResult>, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>, Optional.Option<TModelEntityReadAllResult, Apizr.ApizrException<TModelEntityReadAllResult>>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>, System.Threading.CancellationToken)
  nameWithType.vb: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)), IApizrRequestOptions, IApizrRequestOptionsBuilder).Handle(ReadAllOptionalQuery(Of TModelEntityReadAllResult), CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult), Optional.Option(Of TModelEntityReadAllResult, Apizr.ApizrException(Of TModelEntityReadAllResult)), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).Handle(Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult), System.Threading.CancellationToken)
  name.vb: Handle(ReadAllOptionalQuery(Of TModelEntityReadAllResult), CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery<TModelEntityReadAllResult>, Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>, Optional.Option<TModelEntityReadAllResult, Apizr.ApizrException<TModelEntityReadAllResult>>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, ReadAllOptionalQuery(Of TModelEntityReadAllResult), Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)), IApizrRequestOptions, IApizrRequestOptionsBuilder).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult), Optional.Option(Of TModelEntityReadAllResult, Apizr.ApizrException(Of TModelEntityReadAllResult)), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TApiEntityReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`0,`1,`3,System.Collections.Generic.IDictionary{System.String,System.Object},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}.CrudApiManager
  parent: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},{TApiEntityKey},{TApiEntityReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object},Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<String, Object>, IApizrRequestOptions, IApizrRequestOptionsBuilder>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>, Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object), IApizrRequestOptions, IApizrRequestOptionsBuilder).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object), Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder).CrudApiManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6
  name: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base
  commentId: N:Apizr.Mediation.Cruding.Handling.Base
  name: Apizr.Mediation.Cruding.Handling.Base
  nameWithType: Apizr.Mediation.Cruding.Handling.Base
  fullName: Apizr.Mediation.Cruding.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8
  name: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8
    name: ReadAllQueryHandlerBase
    nameWithType: ReadAllQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryResult
    nameWithType: TQueryResult
    fullName: TQueryResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8
    name: ReadAllQueryHandlerBase
    nameWithType: ReadAllQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryResult
    nameWithType: TQueryResult
    fullName: TQueryResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
  commentId: T:Apizr.Mediation.Querying.IMediationQueryHandler`2
  name: IMediationQueryHandler<TQuery, TResponse>
  nameWithType: IMediationQueryHandler<TQuery, TResponse>
  fullName: Apizr.Mediation.Querying.IMediationQueryHandler<TQuery, TResponse>
  nameWithType.vb: IMediationQueryHandler(Of TQuery, TResponse)
  fullName.vb: Apizr.Mediation.Querying.IMediationQueryHandler(Of TQuery, TResponse)
  name.vb: IMediationQueryHandler(Of TQuery, TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying
  commentId: N:Apizr.Mediation.Querying
  name: Apizr.Mediation.Querying
  nameWithType: Apizr.Mediation.Querying
  fullName: Apizr.Mediation.Querying
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8.Handle(`4,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8.Handle(`4,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TQuery, CancellationToken)
  nameWithType: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TQuery, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TQuery, System.Threading.CancellationToken)
  nameWithType.vb: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TQuery, CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TQuery, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase`8.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadAllQueryHandlerBase(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult, TQuery, TQueryResult, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`6.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams, TApizrRequestOptions, TApizrRequestOptionsBuilder).CrudApiManager
- uid: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.#ctor
  name: ReadAllOptionalQueryHandler
  nameWithType: ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.ReadAllOptionalQueryHandler
  fullName: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.ReadAllOptionalQueryHandler
  nameWithType.vb: ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).ReadAllOptionalQueryHandler
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).ReadAllOptionalQueryHandler
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},{TApiEntityKey},{TApiEntityReadAllResult},System.Collections.Generic.IDictionary{System.String,System.Object}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`0,`1,`3,System.Collections.Generic.IDictionary{System.String,System.Object}}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<String, Object>>>
  nameWithType: IApizrManager<ICrudApi<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary<String, Object>>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary<System.String, System.Object>>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object)))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: IApizrManager(Of ICrudApi(Of TApiEntity, TApiEntityKey, TApiEntityReadAllResult, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityReadAllResult
    nameWithType: TApiEntityReadAllResult
    fullName: TApiEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.Handle*
  commentId: Overload:Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler`4.Handle
  name: Handle
  nameWithType: ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.Handle
  fullName: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler<TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult>.Handle
  nameWithType.vb: ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).Handle
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadAllOptionalQueryHandler(Of TApiEntity, TApiEntityKey, TModelEntityReadAllResult, TApiEntityReadAllResult).Handle
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery{{TModelEntityReadAllResult}}
  commentId: T:Apizr.Optional.Cruding.ReadAllOptionalQuery{`2}
  parent: Apizr.Optional.Cruding
  definition: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
  name: ReadAllOptionalQuery<TModelEntityReadAllResult>
  nameWithType: ReadAllOptionalQuery<TModelEntityReadAllResult>
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TModelEntityReadAllResult>
  nameWithType.vb: ReadAllOptionalQuery(Of TModelEntityReadAllResult)
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TModelEntityReadAllResult)
  name.vb: ReadAllOptionalQuery(Of TModelEntityReadAllResult)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`2,Apizr.ApizrException{`2}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  nameWithType: Task<Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntityReadAllResult, Apizr.ApizrException<TModelEntityReadAllResult>>>
  nameWithType.vb: Task(Of Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntityReadAllResult, Apizr.ApizrException(Of TModelEntityReadAllResult)))
  name.vb: Task(Of Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntityReadAllResult
    nameWithType: TModelEntityReadAllResult
    fullName: TModelEntityReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
  commentId: T:Apizr.Optional.Cruding.ReadAllOptionalQuery`1
  name: ReadAllOptionalQuery<TReadAllResult>
  nameWithType: ReadAllOptionalQuery<TReadAllResult>
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllResult>
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllResult)
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllResult)
  name.vb: ReadAllOptionalQuery(Of TReadAllResult)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`1
    name: ReadAllOptionalQuery
    nameWithType: ReadAllOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding
  commentId: N:Apizr.Optional.Cruding
  name: Apizr.Optional.Cruding
  nameWithType: Apizr.Optional.Cruding
  fullName: Apizr.Optional.Cruding
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
