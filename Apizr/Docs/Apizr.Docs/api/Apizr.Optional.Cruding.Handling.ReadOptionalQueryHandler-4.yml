### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4
  commentId: T:Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4
  id: ReadOptionalQueryHandler`4
  parent: Apizr.Optional.Cruding.Handling
  children:
  - Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  - Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.Handle(Apizr.Optional.Cruding.ReadOptionalQuery{`0},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  nameWithType: ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  fullName: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>
  type: Class
  source:
    id: ReadOptionalQueryHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Handling\ReadOptionalQueryHandler.cs
    startLine: 39
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  syntax:
    content: 'public class ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams> : ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>, IMediationQueryHandler<ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>, IRequestHandler<ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>> where TApiEntity : class'
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TReadAllResult
    - id: TReadAllParams
    content.vb: "Public Class ReadOptionalQueryHandler(Of TModelEntity, TApiEntity As Class, TReadAllResult, TReadAllParams)\n    Inherits ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery(Of TModelEntity),  Option(Of TModelEntity, ApizrException(Of TModelEntity)) ) \n    Implements IMediationQueryHandler(Of ReadOptionalQuery(Of TModelEntity),  Option(Of TModelEntity, ApizrException(Of TModelEntity)) ), IRequestHandler(Of ReadOptionalQuery(Of TModelEntity),  Option(Of TModelEntity, ApizrException(Of TModelEntity)) )"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  - Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  implements:
  - Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  - MediatR.IRequestHandler{Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  inheritedMembers:
  - Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}.Handle(Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},System.Threading.CancellationToken)
  - Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}.CrudApiManager
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
  name.vb: ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams)
- uid: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  commentId: M:Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})
  id: '#ctor(Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}})'
  parent: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4
  langs:
  - csharp
  - vb
  name: ReadOptionalQueryHandler(IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>)
  nameWithType: ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.ReadOptionalQueryHandler(IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>)
  fullName: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.ReadOptionalQueryHandler(Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Handling\ReadOptionalQueryHandler.cs
    startLine: 43
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  syntax:
    content: public ReadOptionalQueryHandler(IApizrManager<ICrudApi<TApiEntity, int, TReadAllResult, TReadAllParams>> crudApiManager)
    parameters:
    - id: crudApiManager
      type: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}}
    content.vb: Public Sub New(crudApiManager As IApizrManager(Of ICrudApi(Of TApiEntity, Integer, TReadAllResult, TReadAllParams)))
  overload: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.#ctor*
  nameWithType.vb: ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).ReadOptionalQueryHandler(IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).ReadOptionalQueryHandler(Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams)))
  name.vb: ReadOptionalQueryHandler(IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)))
- uid: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.Handle(Apizr.Optional.Cruding.ReadOptionalQuery{`0},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.Handle(Apizr.Optional.Cruding.ReadOptionalQuery{`0},System.Threading.CancellationToken)
  id: Handle(Apizr.Optional.Cruding.ReadOptionalQuery{`0},System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4
  langs:
  - csharp
  - vb
  name: Handle(ReadOptionalQuery<TModelEntity>, CancellationToken)
  nameWithType: ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle(ReadOptionalQuery<TModelEntity>, CancellationToken)
  fullName: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle(Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Handle
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Handling\ReadOptionalQueryHandler.cs
    startLine: 47
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Handling
  syntax:
    content: public override async Task<Option<TModelEntity, ApizrException<TModelEntity>>> Handle(ReadOptionalQuery<TModelEntity> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Overrides Function Handle(request As ReadOptionalQuery(Of TModelEntity), cancellationToken As CancellationToken) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overridden: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}.Handle(Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},System.Threading.CancellationToken)
  overload: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.Handle*
  nameWithType.vb: ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle(ReadOptionalQuery(Of TModelEntity), CancellationToken)
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle(Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity), System.Threading.CancellationToken)
  name.vb: Handle(ReadOptionalQuery(Of TModelEntity), CancellationToken)
references:
- uid: Apizr.Optional.Cruding.Handling
  commentId: N:Apizr.Optional.Cruding.Handling
  name: Apizr.Optional.Cruding.Handling
  nameWithType: Apizr.Optional.Cruding.Handling
  fullName: Apizr.Optional.Cruding.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  parent: Apizr.Mediation.Requesting.Handling.Base
  name: RequestHandlerBase
  nameWithType: RequestHandlerBase
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,System.Int32,`2,`3}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{`0,`1,`2,`3,Apizr.Optional.Cruding.ReadOptionalQuery{`0},Optional.Option{`0,Apizr.ApizrException{`0}}}
  parent: Apizr.Mediation.Cruding.Handling.Base
  definition: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6
  name: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>, Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity), Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity)))
  name.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  commentId: T:Apizr.Mediation.Querying.IMediationQueryHandler{Apizr.Optional.Cruding.ReadOptionalQuery{`0},Optional.Option{`0,Apizr.ApizrException{`0}}}
  parent: Apizr.Mediation.Querying
  definition: Apizr.Mediation.Querying.IMediationQueryHandler`2
  name: IMediationQueryHandler<ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>
  nameWithType: IMediationQueryHandler<ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>
  fullName: Apizr.Mediation.Querying.IMediationQueryHandler<Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>, Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>
  nameWithType.vb: IMediationQueryHandler(Of ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  fullName.vb: Apizr.Mediation.Querying.IMediationQueryHandler(Of Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity), Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity)))
  name.vb: IMediationQueryHandler(Of ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  commentId: T:MediatR.IRequestHandler{Apizr.Optional.Cruding.ReadOptionalQuery{`0},Optional.Option{`0,Apizr.ApizrException{`0}}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>
  nameWithType: IRequestHandler<ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>
  fullName: MediatR.IRequestHandler<Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>, Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>
  nameWithType.vb: IRequestHandler(Of ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity), Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity)))
  name.vb: IRequestHandler(Of ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}.Handle(Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{`0,`1,`2,`3,Apizr.Optional.Cruding.ReadOptionalQuery{`0},Optional.Option{`0,Apizr.ApizrException{`0}}}.Handle(Apizr.Optional.Cruding.ReadOptionalQuery{`0},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase{{TModelEntity},{TApiEntity},{TReadAllResult},{TReadAllParams},Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}},Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  definition: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
  name: Handle(ReadOptionalQuery<TModelEntity>, CancellationToken)
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>.Handle(ReadOptionalQuery<TModelEntity>, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>, Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>.Handle(Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>, System.Threading.CancellationToken)
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity))).Handle(ReadOptionalQuery(Of TModelEntity), CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity), Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity))).Handle(Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity), System.Threading.CancellationToken)
  name.vb: Handle(ReadOptionalQuery(Of TModelEntity), CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery<TModelEntity>, Option<TModelEntity, ApizrException<TModelEntity>>>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>, Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, ReadOptionalQuery(Of TModelEntity), Option(Of TModelEntity, ApizrException(Of TModelEntity))).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity), Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity))).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{`1,System.Int32,`2,`3}.CrudApiManager
  parent: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}
  definition: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, Int32, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, Int32, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams).CrudApiManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
  name: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4
    name: CrudRequestHandlerBase
    nameWithType: CrudRequestHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base
  commentId: N:Apizr.Mediation.Cruding.Handling.Base
  name: Apizr.Mediation.Cruding.Handling.Base
  nameWithType: Apizr.Mediation.Cruding.Handling.Base
  fullName: Apizr.Mediation.Cruding.Handling.Base
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6
  commentId: T:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6
  name: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult>
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult>
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult>
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult)
  name.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryResult
    nameWithType: TQueryResult
    fullName: TQueryResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6
    name: ReadQueryHandlerBase
    nameWithType: ReadQueryHandlerBase
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TQueryResult
    nameWithType: TQueryResult
    fullName: TQueryResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
  commentId: T:Apizr.Mediation.Querying.IMediationQueryHandler`2
  name: IMediationQueryHandler<TQuery, TResponse>
  nameWithType: IMediationQueryHandler<TQuery, TResponse>
  fullName: Apizr.Mediation.Querying.IMediationQueryHandler<TQuery, TResponse>
  nameWithType.vb: IMediationQueryHandler(Of TQuery, TResponse)
  fullName.vb: Apizr.Mediation.Querying.IMediationQueryHandler(Of TQuery, TResponse)
  name.vb: IMediationQueryHandler(Of TQuery, TResponse)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQueryHandler`2
    name: IMediationQueryHandler
    nameWithType: IMediationQueryHandler
    fullName: Apizr.Mediation.Querying.IMediationQueryHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying
  commentId: N:Apizr.Mediation.Querying
  name: Apizr.Mediation.Querying
  nameWithType: Apizr.Mediation.Querying
  fullName: Apizr.Mediation.Querying
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TQuery, CancellationToken)
  nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle(TQuery, CancellationToken)
  fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle(TQuery, System.Threading.CancellationToken)
  nameWithType.vb: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle(TQuery, CancellationToken)
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle(TQuery, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase`6.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle
    fullName: Apizr.Mediation.Cruding.Handling.Base.ReadQueryHandlerBase(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams, TQuery, TQueryResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TQuery
    nameWithType: TQuery
    fullName: TQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  commentId: F:Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase`4.CrudApiManager
  name: CrudApiManager
  nameWithType: CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  fullName: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.CrudApiManager
  nameWithType.vb: CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
  fullName.vb: Apizr.Mediation.Cruding.Handling.Base.CrudRequestHandlerBase(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).CrudApiManager
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.#ctor
  name: ReadOptionalQueryHandler
  nameWithType: ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.ReadOptionalQueryHandler
  fullName: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.ReadOptionalQueryHandler
  nameWithType.vb: ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).ReadOptionalQueryHandler
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).ReadOptionalQueryHandler
- uid: Apizr.IApizrManager{Apizr.Requesting.ICrudApi{{TApiEntity},System.Int32,{TReadAllResult},{TReadAllParams}}}
  commentId: T:Apizr.IApizrManager{Apizr.Requesting.ICrudApi{`1,System.Int32,`2,`3}}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>
  nameWithType: IApizrManager<ICrudApi<TApiEntity, Int32, TReadAllResult, TReadAllParams>>
  fullName: Apizr.IApizrManager<Apizr.Requesting.ICrudApi<TApiEntity, System.Int32, TReadAllResult, TReadAllParams>>
  nameWithType.vb: IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams))
  fullName.vb: Apizr.IApizrManager(Of Apizr.Requesting.ICrudApi(Of TApiEntity, System.Int32, TReadAllResult, TReadAllParams))
  name.vb: IApizrManager(Of ICrudApi(Of TApiEntity, Int32, TReadAllResult, TReadAllParams))
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Requesting.ICrudApi`4
    name: ICrudApi
    nameWithType: ICrudApi
    fullName: Apizr.Requesting.ICrudApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.Handle*
  commentId: Overload:Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler`4.Handle
  name: Handle
  nameWithType: ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle
  fullName: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler<TModelEntity, TApiEntity, TReadAllResult, TReadAllParams>.Handle
  nameWithType.vb: ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle
  fullName.vb: Apizr.Optional.Cruding.Handling.ReadOptionalQueryHandler(Of TModelEntity, TApiEntity, TReadAllResult, TReadAllParams).Handle
- uid: Apizr.Optional.Cruding.ReadOptionalQuery{{TModelEntity}}
  commentId: T:Apizr.Optional.Cruding.ReadOptionalQuery{`0}
  parent: Apizr.Optional.Cruding
  definition: Apizr.Optional.Cruding.ReadOptionalQuery`1
  name: ReadOptionalQuery<TModelEntity>
  nameWithType: ReadOptionalQuery<TModelEntity>
  fullName: Apizr.Optional.Cruding.ReadOptionalQuery<TModelEntity>
  nameWithType.vb: ReadOptionalQuery(Of TModelEntity)
  fullName.vb: Apizr.Optional.Cruding.ReadOptionalQuery(Of TModelEntity)
  name.vb: ReadOptionalQuery(Of TModelEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`0,Apizr.ApizrException{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  nameWithType: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>
  nameWithType.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity)))
  name.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
  commentId: T:Apizr.Optional.Cruding.ReadOptionalQuery`1
  name: ReadOptionalQuery<TResultData>
  nameWithType: ReadOptionalQuery<TResultData>
  fullName: Apizr.Optional.Cruding.ReadOptionalQuery<TResultData>
  nameWithType.vb: ReadOptionalQuery(Of TResultData)
  fullName.vb: Apizr.Optional.Cruding.ReadOptionalQuery(Of TResultData)
  name.vb: ReadOptionalQuery(Of TResultData)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.ReadOptionalQuery`1
    name: ReadOptionalQuery
    nameWithType: ReadOptionalQuery
    fullName: Apizr.Optional.Cruding.ReadOptionalQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding
  commentId: N:Apizr.Optional.Cruding
  name: Apizr.Optional.Cruding
  nameWithType: Apizr.Optional.Cruding
  fullName: Apizr.Optional.Cruding
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
