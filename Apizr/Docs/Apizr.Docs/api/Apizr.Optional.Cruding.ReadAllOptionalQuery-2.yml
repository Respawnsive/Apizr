### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  commentId: T:Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  id: ReadAllOptionalQuery`2
  parent: Apizr.Optional.Cruding
  children:
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Boolean)
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Int32,System.Boolean)
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Boolean)
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>
  type: Class
  source:
    id: ReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 7
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: 'public class ReadAllOptionalQuery<TReadAllParams, TReadAllResult> : ReadAllQueryBase<TReadAllParams, Option<TReadAllResult, ApizrException<TReadAllResult>>>, IMediationQuery<Option<TReadAllResult, ApizrException<TReadAllResult>>>, IRequest<Option<TReadAllResult, ApizrException<TReadAllResult>>>, IBaseRequest'
    typeParameters:
    - id: TReadAllParams
    - id: TReadAllResult
    content.vb: "Public Class ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult)\n    Inherits ReadAllQueryBase(Of TReadAllParams,  Option(Of TReadAllResult, ApizrException(Of TReadAllResult)) ) \n    Implements IMediationQuery(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult)) ), IRequest(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult)) ), IBaseRequest"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  - Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  - Apizr.Mediation.Querying.MediationQueryBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  - Apizr.Mediation.Cruding.Base.ReadAllQueryBase{{TReadAllParams},Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  implements:
  - Apizr.Mediation.Querying.IMediationQuery{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  - MediatR.IRequest{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  - MediatR.IBaseRequest
  inheritedMembers:
  - Apizr.Mediation.Cruding.Base.ReadAllQueryBase{{TReadAllParams},Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.Parameters
  - Apizr.Mediation.Querying.MediationQueryBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.ClearCache
  - Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.Priority
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.Context
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.OnException
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult)
  name.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 9
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(bool clearCache = false)
    parameters:
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(System.Boolean)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Boolean)
  id: '#ctor(`0,System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(TReadAllParams, Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 14
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(TReadAllParams parameters, bool clearCache = false)
    parameters:
    - id: parameters
      type: '{TReadAllParams}'
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(parameters As TReadAllParams, clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, System.Boolean)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(Int32, Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(Int32, Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(System.Int32, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 19
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(int priority, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(priority As Integer, clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(System.Int32, System.Boolean)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(Polly.Context,System.Boolean)
  id: '#ctor(Polly.Context,System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(Context, Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(Context, Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(Polly.Context, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 24
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(Context context, bool clearCache = false)
    parameters:
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(context As Context, clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(Polly.Context, System.Boolean)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Int32,System.Boolean)
  id: '#ctor(`0,System.Int32,System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(TReadAllParams, Int32, Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, System.Int32, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 29
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(TReadAllParams parameters, int priority, bool clearCache = false)
    parameters:
    - id: parameters
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(parameters As TReadAllParams, priority As Integer, clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, System.Int32, System.Boolean)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,Polly.Context,System.Boolean)
  id: '#ctor(`0,Polly.Context,System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(TReadAllParams, Context, Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, Context, Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, Polly.Context, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 34
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(TReadAllParams parameters, Context context, bool clearCache = false)
    parameters:
    - id: parameters
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(parameters As TReadAllParams, context As Context, clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, Polly.Context, System.Boolean)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(System.Int32,Polly.Context,System.Boolean)
  id: '#ctor(System.Int32,Polly.Context,System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(Int32, Context, Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(System.Int32, Polly.Context, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 39
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(int priority, Context context, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(priority As Integer, context As Context, clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(System.Int32, Polly.Context, System.Boolean)
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor(`0,System.Int32,Polly.Context,System.Boolean)
  id: '#ctor(`0,System.Int32,Polly.Context,System.Boolean)'
  parent: Apizr.Optional.Cruding.ReadAllOptionalQuery`2
  langs:
  - csharp
  - vb
  name: ReadAllOptionalQuery(TReadAllParams, Int32, Context, Boolean)
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\ReadAllOptionalQuery.cs
    startLine: 44
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public ReadAllOptionalQuery(TReadAllParams parameters, int priority, Context context, bool clearCache = false)
    parameters:
    - id: parameters
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    content.vb: Public Sub New(parameters As TReadAllParams, priority As Integer, context As Context, clearCache As Boolean = False)
  overload: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
references:
- uid: Apizr.Optional.Cruding
  commentId: N:Apizr.Optional.Cruding
  name: Apizr.Optional.Cruding
  nameWithType: Apizr.Optional.Cruding
  fullName: Apizr.Optional.Cruding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1
  name: RequestBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: RequestBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: RequestBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: RequestBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
  name: PrioritizedRequestBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: PrioritizedRequestBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: PrioritizedRequestBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: PrioritizedRequestBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.MediationQueryBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:Apizr.Mediation.Querying.MediationQueryBase{Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: Apizr.Mediation.Querying
  definition: Apizr.Mediation.Querying.MediationQueryBase`1
  name: MediationQueryBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: MediationQueryBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: Apizr.Mediation.Querying.MediationQueryBase<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: MediationQueryBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: MediationQueryBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase{{TReadAllParams},Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:Apizr.Mediation.Cruding.Base.ReadAllQueryBase{`0,Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: Apizr.Mediation.Cruding.Base
  definition: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2
  name: ReadAllQueryBase<TReadAllParams, Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: ReadAllQueryBase<TReadAllParams, Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase<TReadAllParams, Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: ReadAllQueryBase(Of TReadAllParams, Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadAllQueryBase(Of TReadAllParams, Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: ReadAllQueryBase(Of TReadAllParams, Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2
    name: ReadAllQueryBase
    nameWithType: ReadAllQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2
    name: ReadAllQueryBase
    nameWithType: ReadAllQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.IMediationQuery{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:Apizr.Mediation.Querying.IMediationQuery{Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: Apizr.Mediation.Querying
  definition: Apizr.Mediation.Querying.IMediationQuery`1
  name: IMediationQuery<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: IMediationQuery<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: Apizr.Mediation.Querying.IMediationQuery<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: IMediationQuery(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: Apizr.Mediation.Querying.IMediationQuery(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: IMediationQuery(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:MediatR.IRequest{Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: MediatR
  definition: MediatR.IRequest`1
  name: IRequest<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: IRequest<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: MediatR.IRequest<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: IRequest(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: MediatR.IRequest(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: IRequest(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IBaseRequest
  commentId: T:MediatR.IBaseRequest
  parent: MediatR
  isExternal: true
  name: IBaseRequest
  nameWithType: IBaseRequest
  fullName: MediatR.IBaseRequest
- uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase{{TReadAllParams},Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.Parameters
  commentId: P:Apizr.Mediation.Cruding.Base.ReadAllQueryBase{`0,Optional.Option{`1,Apizr.ApizrException{`1}}}.Parameters
  parent: Apizr.Mediation.Cruding.Base.ReadAllQueryBase{{TReadAllParams},Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  definition: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2.Parameters
  name: Parameters
  nameWithType: ReadAllQueryBase<TReadAllParams, Option<TReadAllResult, ApizrException<TReadAllResult>>>.Parameters
  fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase<TReadAllParams, Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>.Parameters
  nameWithType.vb: ReadAllQueryBase(Of TReadAllParams, Option(Of TReadAllResult, ApizrException(Of TReadAllResult))).Parameters
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadAllQueryBase(Of TReadAllParams, Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult))).Parameters
- uid: Apizr.Mediation.Querying.MediationQueryBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.ClearCache
  commentId: P:Apizr.Mediation.Querying.MediationQueryBase{Optional.Option{`1,Apizr.ApizrException{`1}}}.ClearCache
  parent: Apizr.Mediation.Querying.MediationQueryBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  definition: Apizr.Mediation.Querying.MediationQueryBase`1.ClearCache
  name: ClearCache
  nameWithType: MediationQueryBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>.ClearCache
  fullName: Apizr.Mediation.Querying.MediationQueryBase<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>.ClearCache
  nameWithType.vb: MediationQueryBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult))).ClearCache
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult))).ClearCache
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.Priority
  commentId: P:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{Optional.Option{`1,Apizr.ApizrException{`1}}}.Priority
  parent: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  definition: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1.Priority
  name: Priority
  nameWithType: PrioritizedRequestBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>.Priority
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>.Priority
  nameWithType.vb: PrioritizedRequestBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult))).Priority
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult))).Priority
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.Context
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{`1,Apizr.ApizrException{`1}}}.Context
  parent: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  name: Context
  nameWithType: RequestBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>.Context
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>.Context
  nameWithType.vb: RequestBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult))).Context
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult))).Context
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}.OnException
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{`1,Apizr.ApizrException{`1}}}.OnException
  parent: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  name: OnException
  nameWithType: RequestBase<Option<TReadAllResult, ApizrException<TReadAllResult>>>.OnException
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>.OnException
  nameWithType.vb: RequestBase(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult))).OnException
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult))).OnException
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase`1
  name: RequestBase<TFormattedModelResultData>
  nameWithType: RequestBase<TFormattedModelResultData>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>
  nameWithType.vb: RequestBase(Of TFormattedModelResultData)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData)
  name.vb: RequestBase(Of TFormattedModelResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Base
  commentId: N:Apizr.Mediation.Requesting.Base
  name: Apizr.Mediation.Requesting.Base
  nameWithType: Apizr.Mediation.Requesting.Base
  fullName: Apizr.Mediation.Requesting.Base
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
  commentId: T:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
  name: PrioritizedRequestBase<TResultData>
  nameWithType: PrioritizedRequestBase<TResultData>
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<TResultData>
  nameWithType.vb: PrioritizedRequestBase(Of TResultData)
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of TResultData)
  name.vb: PrioritizedRequestBase(Of TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1
    name: PrioritizedRequestBase
    nameWithType: PrioritizedRequestBase
    fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying.MediationQueryBase`1
  commentId: T:Apizr.Mediation.Querying.MediationQueryBase`1
  name: MediationQueryBase<TResultData>
  nameWithType: MediationQueryBase<TResultData>
  fullName: Apizr.Mediation.Querying.MediationQueryBase<TResultData>
  nameWithType.vb: MediationQueryBase(Of TResultData)
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of TResultData)
  name.vb: MediationQueryBase(Of TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.MediationQueryBase`1
    name: MediationQueryBase
    nameWithType: MediationQueryBase
    fullName: Apizr.Mediation.Querying.MediationQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Querying
  commentId: N:Apizr.Mediation.Querying
  name: Apizr.Mediation.Querying
  nameWithType: Apizr.Mediation.Querying
  fullName: Apizr.Mediation.Querying
- uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2
  commentId: T:Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2
  name: ReadAllQueryBase<TReadAllParams, TReadAllResult>
  nameWithType: ReadAllQueryBase<TReadAllParams, TReadAllResult>
  fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase<TReadAllParams, TReadAllResult>
  nameWithType.vb: ReadAllQueryBase(Of TReadAllParams, TReadAllResult)
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadAllQueryBase(Of TReadAllParams, TReadAllResult)
  name.vb: ReadAllQueryBase(Of TReadAllParams, TReadAllResult)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2
    name: ReadAllQueryBase
    nameWithType: ReadAllQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2
    name: ReadAllQueryBase
    nameWithType: ReadAllQueryBase
    fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base
  commentId: N:Apizr.Mediation.Cruding.Base
  name: Apizr.Mediation.Cruding.Base
  nameWithType: Apizr.Mediation.Cruding.Base
  fullName: Apizr.Mediation.Cruding.Base
- uid: Apizr.Mediation.Querying.IMediationQuery`1
  commentId: T:Apizr.Mediation.Querying.IMediationQuery`1
  name: IMediationQuery<TResultData>
  nameWithType: IMediationQuery<TResultData>
  fullName: Apizr.Mediation.Querying.IMediationQuery<TResultData>
  nameWithType.vb: IMediationQuery(Of TResultData)
  fullName.vb: Apizr.Mediation.Querying.IMediationQuery(Of TResultData)
  name.vb: IMediationQuery(Of TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Querying.IMediationQuery`1
    name: IMediationQuery
    nameWithType: IMediationQuery
    fullName: Apizr.Mediation.Querying.IMediationQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest`1
  commentId: T:MediatR.IRequest`1
  isExternal: true
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: MediatR.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: MediatR.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2.Parameters
  commentId: P:Apizr.Mediation.Cruding.Base.ReadAllQueryBase`2.Parameters
  name: Parameters
  nameWithType: ReadAllQueryBase<TReadAllParams, TReadAllResult>.Parameters
  fullName: Apizr.Mediation.Cruding.Base.ReadAllQueryBase<TReadAllParams, TReadAllResult>.Parameters
  nameWithType.vb: ReadAllQueryBase(Of TReadAllParams, TReadAllResult).Parameters
  fullName.vb: Apizr.Mediation.Cruding.Base.ReadAllQueryBase(Of TReadAllParams, TReadAllResult).Parameters
- uid: Apizr.Mediation.Querying.MediationQueryBase`1.ClearCache
  commentId: P:Apizr.Mediation.Querying.MediationQueryBase`1.ClearCache
  name: ClearCache
  nameWithType: MediationQueryBase<TResultData>.ClearCache
  fullName: Apizr.Mediation.Querying.MediationQueryBase<TResultData>.ClearCache
  nameWithType.vb: MediationQueryBase(Of TResultData).ClearCache
  fullName.vb: Apizr.Mediation.Querying.MediationQueryBase(Of TResultData).ClearCache
- uid: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1.Priority
  commentId: P:Apizr.Mediation.Requesting.Base.PrioritizedRequestBase`1.Priority
  name: Priority
  nameWithType: PrioritizedRequestBase<TResultData>.Priority
  fullName: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase<TResultData>.Priority
  nameWithType.vb: PrioritizedRequestBase(Of TResultData).Priority
  fullName.vb: Apizr.Mediation.Requesting.Base.PrioritizedRequestBase(Of TResultData).Priority
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  name: Context
  nameWithType: RequestBase<TFormattedModelResultData>.Context
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>.Context
  nameWithType.vb: RequestBase(Of TFormattedModelResultData).Context
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData).Context
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  name: OnException
  nameWithType: RequestBase<TFormattedModelResultData>.OnException
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>.OnException
  nameWithType.vb: RequestBase(Of TFormattedModelResultData).OnException
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData).OnException
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.ReadAllOptionalQuery`2.#ctor
  name: ReadAllOptionalQuery
  nameWithType: ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery
  fullName: Apizr.Optional.Cruding.ReadAllOptionalQuery<TReadAllParams, TReadAllResult>.ReadAllOptionalQuery
  nameWithType.vb: ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery
  fullName.vb: Apizr.Optional.Cruding.ReadAllOptionalQuery(Of TReadAllParams, TReadAllResult).ReadAllOptionalQuery
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: '{TReadAllParams}'
  commentId: '!:TReadAllParams'
  definition: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
