### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  commentId: T:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  id: ApizrCrudOptionalMediator
  parent: Apizr.Optional.Cruding.Sending
  children:
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor(MediatR.IMediator)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ApizrCrudOptionalMediator
  nameWithType: ApizrCrudOptionalMediator
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  type: Class
  source:
    id: ApizrCrudOptionalMediator
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 8
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: 'public class ApizrCrudOptionalMediator : IApizrCrudOptionalMediator, IApizrCrudOptionalMediatorBase, IApizrCrudMediatorBase, IApizrOptionalMediatorBase, IApizrMediatorBase'
    content.vb: >-
      Public Class ApizrCrudOptionalMediator

          Implements IApizrCrudOptionalMediator, IApizrCrudOptionalMediatorBase, IApizrCrudMediatorBase, IApizrOptionalMediatorBase, IApizrMediatorBase
  inheritance:
  - System.Object
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  - Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor(MediatR.IMediator)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor(MediatR.IMediator)
  id: '#ctor(MediatR.IMediator)'
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: ApizrCrudOptionalMediator(IMediator)
  nameWithType: ApizrCrudOptionalMediator.ApizrCrudOptionalMediator(IMediator)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.ApizrCrudOptionalMediator(MediatR.IMediator)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 12
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public ApizrCrudOptionalMediator(IMediator mediator)
    parameters:
    - id: mediator
      type: MediatR.IMediator
    content.vb: Public Sub New(mediator As IMediator)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
  id: SendCreateOptionalCommand``1(``0)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 21
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException>> SendCreateOptionalCommand<TApiEntity>(TApiEntity entity)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    typeParameters:
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TApiEntity)(entity As TApiEntity) As Task(Of  Option(Of TApiEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity})
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
  id: SendCreateOptionalCommand``1(``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Polly.Context)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 24
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException>> SendCreateOptionalCommand<TApiEntity>(TApiEntity entity, Context context)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    typeParameters:
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TApiEntity)(entity As TApiEntity, context As Context) As Task(Of  Option(Of TApiEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},Polly.Context)
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Polly.Context)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  id: SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 28
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException>> SendCreateOptionalCommand<TApiEntity>(TApiEntity entity, CancellationToken cancellationToken)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TApiEntity)(entity As TApiEntity, cancellationToken As CancellationToken) As Task(Of  Option(Of TApiEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  id: SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Polly.Context, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 32
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException>> SendCreateOptionalCommand<TApiEntity>(TApiEntity entity, Context context, CancellationToken cancellationToken)
    parameters:
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TApiEntity)(entity As TApiEntity, context As Context, cancellationToken As CancellationToken) As Task(Of  Option(Of TApiEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},Polly.Context,System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
  id: SendCreateOptionalCommand``2(``0)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 40
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException>> SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity entity)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(entity As TModelEntity) As Task(Of  Option(Of TModelEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity})
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
  id: SendCreateOptionalCommand``2(``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Polly.Context)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 44
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException>> SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity entity, Context context)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(entity As TModelEntity, context As Context) As Task(Of  Option(Of TModelEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},Polly.Context)
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Polly.Context)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  id: SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 47
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException>> SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity entity, CancellationToken cancellationToken)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(entity As TModelEntity, cancellationToken As CancellationToken) As Task(Of  Option(Of TModelEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  id: SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Polly.Context, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendCreateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 51
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException>> SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity entity, Context context, CancellationToken cancellationToken)
    parameters:
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
    content.vb: Public Function SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(entity As TModelEntity, context As Context, cancellationToken As CancellationToken) As Task(Of  Option(Of TModelEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},Polly.Context,System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
  id: SendReadAllOptionalQuery``1(System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 64
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(bool clearCache = false)
    parameters:
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 68
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(Context context, bool clearCache = false)
    parameters:
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 71
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
  id: SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 76
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(int priority, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(priority As Integer, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 79
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(int priority, Context context, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(priority As Integer, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 83
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(int priority, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 88
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 94
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(int priority, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
  id: SendReadAllOptionalQuery``2(System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 103
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(bool clearCache = false)
    parameters:
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 108
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context context, bool clearCache = false)
    parameters:
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 113
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
  id: SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 120
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(int priority, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(priority As Integer, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 125
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(int priority, Context context, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(priority As Integer, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 130
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(int priority, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 137
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 144
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(int priority, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 155
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 159
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, Context context, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 163
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 169
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 174
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, Context context, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 179
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 185
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 190
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 200
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 205
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, Context context, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 211
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 218
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 224
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, Context context, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 230
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 237
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadAllOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 244
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelReadAllResult
    - id: TApiReadAllResult
    - id: TReadAllParams
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
  id: SendReadOptionalQuery``2(``1,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 260
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  id: SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 263
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, Context context, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 267
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  id: SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 271
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  id: SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 276
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, Context context, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 281
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 286
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 290
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
  id: SendReadOptionalQuery``3(``2,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 299
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  id: SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 303
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, Context context, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 307
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  id: SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 311
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  id: SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 316
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, Context context, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, context As Context, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,Polly.Context,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 320
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 325
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  id: SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  type: Method
  source:
    id: SendReadOptionalQuery
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 329
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, int priority, Context context, CancellationToken cancellationToken, bool clearCache = false)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: priority
      type: System.Int32
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: clearCache
      type: System.Boolean
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, priority As Integer, context As Context, cancellationToken As CancellationToken, clearCache As Boolean = False) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
  id: SendUpdateOptionalCommand``2(``1,``0)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 343
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, TApiEntity entity)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TApiEntity) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity})
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  id: SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Polly.Context)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 346
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, TApiEntity entity, Context context)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TApiEntity, context As Context) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},Polly.Context)
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Polly.Context)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  id: SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 350
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, TApiEntity entity, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TApiEntity, cancellationToken As CancellationToken) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  id: SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 355
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, TApiEntity entity, Context context, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TApiEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TApiEntity, context As Context, cancellationToken As CancellationToken) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},Polly.Context,System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
  id: SendUpdateOptionalCommand``3(``2,``0)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 365
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, TModelEntity entity)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TModelEntity) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity})
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  id: SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Polly.Context)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 369
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, TModelEntity entity, Context context)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TModelEntity, context As Context) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},Polly.Context)
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Polly.Context)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  id: SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 373
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, TModelEntity entity, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TModelEntity, cancellationToken As CancellationToken) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  id: SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendUpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 378
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, TModelEntity entity, Context context, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: entity
      type: '{TModelEntity}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TModelEntity
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TModelEntity, context As Context, cancellationToken As CancellationToken) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},Polly.Context,System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
  id: SendDeleteOptionalCommand``2(``1)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  nameWithType: ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  type: Method
  source:
    id: SendDeleteOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 390
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey})
  nameWithType.vb: ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
  id: SendDeleteOptionalCommand``2(``1,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context)
  nameWithType: ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context)
  type: Method
  source:
    id: SendDeleteOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 393
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, Context context)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, context As Context) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},Polly.Context)
  nameWithType.vb: ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  id: SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendDeleteOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 396
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, cancellationToken As CancellationToken) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken)
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  id: SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken)
  nameWithType: ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendDeleteOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\Sending\ApizrCrudOptionalMediator.cs
    startLine: 401
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, Context context, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
    - id: context
      type: Polly.Context
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
    content.vb: Public Function SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, context As Context, cancellationToken As CancellationToken) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},Polly.Context,System.Threading.CancellationToken)
  nameWithType.vb: ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken)
references:
- uid: Apizr.Optional.Cruding.Sending
  commentId: N:Apizr.Optional.Cruding.Sending
  name: Apizr.Optional.Cruding.Sending
  nameWithType: Apizr.Optional.Cruding.Sending
  fullName: Apizr.Optional.Cruding.Sending
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  parent: Apizr.Optional.Cruding.Sending
  name: IApizrCrudOptionalMediator
  nameWithType: IApizrCrudOptionalMediator
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
  parent: Apizr.Optional.Cruding.Sending
  name: IApizrCrudOptionalMediatorBase
  nameWithType: IApizrCrudOptionalMediatorBase
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  parent: Apizr.Mediation.Cruding.Sending
  name: IApizrCrudMediatorBase
  nameWithType: IApizrCrudMediatorBase
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
- uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  commentId: T:Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  parent: Apizr.Optional.Requesting.Sending
  name: IApizrOptionalMediatorBase
  nameWithType: IApizrOptionalMediatorBase
  fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  parent: Apizr.Mediation.Requesting.Sending
  name: IApizrMediatorBase
  nameWithType: IApizrMediatorBase
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Cruding.Sending
  commentId: N:Apizr.Mediation.Cruding.Sending
  name: Apizr.Mediation.Cruding.Sending
  nameWithType: Apizr.Mediation.Cruding.Sending
  fullName: Apizr.Mediation.Cruding.Sending
- uid: Apizr.Optional.Requesting.Sending
  commentId: N:Apizr.Optional.Requesting.Sending
  name: Apizr.Optional.Requesting.Sending
  nameWithType: Apizr.Optional.Requesting.Sending
  fullName: Apizr.Optional.Requesting.Sending
- uid: Apizr.Mediation.Requesting.Sending
  commentId: N:Apizr.Mediation.Requesting.Sending
  name: Apizr.Mediation.Requesting.Sending
  nameWithType: Apizr.Mediation.Requesting.Sending
  fullName: Apizr.Mediation.Requesting.Sending
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor
  name: ApizrCrudOptionalMediator
  nameWithType: ApizrCrudOptionalMediator.ApizrCrudOptionalMediator
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.ApizrCrudOptionalMediator
- uid: MediatR.IMediator
  commentId: T:MediatR.IMediator
  parent: MediatR
  isExternal: true
  name: IMediator
  nameWithType: IMediator
  fullName: MediatR.IMediator
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand
  name: SendCreateOptionalCommand
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApiEntity}'
  commentId: '!:TApiEntity'
  definition: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TApiEntity, ApizrException>>
  nameWithType: Task<Option<TApiEntity, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TApiEntity, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TApiEntity, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TApiEntity, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TApiEntity, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Polly.Context)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
  isExternal: true
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Polly.Context)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
  isExternal: true
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
  isExternal: true
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TModelEntity}'
  commentId: '!:TModelEntity'
  definition: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`0,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelEntity, ApizrException>>
  nameWithType: Task<Option<TModelEntity, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntity, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TModelEntity, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntity, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TModelEntity, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Polly.Context)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
  isExternal: true
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Polly.Context)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
  isExternal: true
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
  isExternal: true
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,Polly.Context,System.Threading.CancellationToken)
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery
  name: SendReadAllOptionalQuery
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: Task(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: Task(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>>
  nameWithType: Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelReadAllResult, Apizr.ApizrException<TModelReadAllResult>>>
  nameWithType.vb: Task(Of Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelReadAllResult, Apizr.ApizrException(Of TModelReadAllResult)))
  name.vb: Task(Of Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TReadAllParams}'
  commentId: '!:TReadAllParams'
  definition: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery
  name: SendReadOptionalQuery
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApiEntityKey}'
  commentId: '!:TApiEntityKey'
  definition: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TApiEntity, ApizrException<TApiEntity>>>
  nameWithType: Task<Option<TApiEntity, ApizrException<TApiEntity>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TApiEntity, Apizr.ApizrException<TApiEntity>>>
  nameWithType.vb: Task(Of Option(Of TApiEntity, ApizrException(Of TApiEntity)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TApiEntity, Apizr.ApizrException(Of TApiEntity)))
  name.vb: Task(Of Option(Of TApiEntity, ApizrException(Of TApiEntity)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`0,Apizr.ApizrException{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  nameWithType: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>
  nameWithType.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity)))
  name.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Int32, Polly.Context, System.Threading.CancellationToken, System.Boolean)
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Int32, Context, CancellationToken, Boolean)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Int32,Polly.Context,System.Threading.CancellationToken,System.Boolean)
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand
  name: SendUpdateOptionalCommand
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<Unit, ApizrException>>
  nameWithType: Task<Option<Unit, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of Unit, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: Task(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Polly.Context)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
  isExternal: true
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Polly.Context)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
  isExternal: true
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
  isExternal: true
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Polly.Context)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
  isExternal: true
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Polly.Context)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
  isExternal: true
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
  isExternal: true
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,Polly.Context,System.Threading.CancellationToken)
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand
  name: SendDeleteOptionalCommand
  nameWithType: ApizrCrudOptionalMediator.SendDeleteOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
  isExternal: true
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
  isExternal: true
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Threading.CancellationToken)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
  isExternal: true
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Context, CancellationToken)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Polly.Context, System.Threading.CancellationToken)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Polly.Context, System.Threading.CancellationToken)
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Context, CancellationToken)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,Polly.Context,System.Threading.CancellationToken)
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
