### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  commentId: T:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  id: ApizrCrudOptionalMediator
  parent: Apizr.Optional.Cruding.Sending
  children:
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor(MediatR.IMediator)
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: ApizrCrudOptionalMediator
  nameWithType: ApizrCrudOptionalMediator
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  type: Class
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrCrudOptionalMediator
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 12
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nApizr mediator dedicated to cruding and with optional result\n"
  example: []
  syntax:
    content: 'public class ApizrCrudOptionalMediator : ApizrMediatorBase, IApizrCrudOptionalMediator, IApizrCrudOptionalMediatorBase, IApizrCrudMediatorBase, IApizrOptionalMediatorBase, IApizrMediatorBase'
    content.vb: >-
      Public Class ApizrCrudOptionalMediator
          Inherits ApizrMediatorBase
          Implements IApizrCrudOptionalMediator, IApizrCrudOptionalMediatorBase, IApizrCrudMediatorBase, IApizrOptionalMediatorBase, IApizrMediatorBase
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Sending.ApizrMediatorBase
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
  - Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  - Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  - Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  inheritedMembers:
  - Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor(MediatR.IMediator)
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor(MediatR.IMediator)
  id: '#ctor(MediatR.IMediator)'
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: ApizrCrudOptionalMediator(IMediator)
  nameWithType: ApizrCrudOptionalMediator.ApizrCrudOptionalMediator(IMediator)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.ApizrCrudOptionalMediator(MediatR.IMediator)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 16
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  syntax:
    content: public ApizrCrudOptionalMediator(IMediator mediator)
    parameters:
    - id: mediator
      type: MediatR.IMediator
    content.vb: Public Sub New(mediator As IMediator)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendCreateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 24
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a <xref href=\"Apizr.Optional.Cruding.CreateOptionalCommand%601\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning an optional result\n"
  example: []
  syntax:
    content: public Task<Option<TApiEntity, ApizrException>> SendCreateOptionalCommand<TApiEntity>(TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: entity
      type: '{TApiEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
      description: ''
    content.vb: Public Function SendCreateOptionalCommand(Of TApiEntity)(entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TApiEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendCreateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 30
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a mapped <xref href=\"Apizr.Mediation.Cruding.CreateCommand%601\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning a mapped optional result\n"
  example: []
  syntax:
    content: public Task<Option<TModelEntity, ApizrException>> SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: entity
      type: '{TModelEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
      description: ''
    content.vb: Public Function SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TModelEntity, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 40
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a <xref href=\"Apizr.Mediation.Cruding.ReadAllQuery%601\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning an optional result\n"
  example: []
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult>(Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TReadAllResult
      description: The &quot;ReadAll&quot; query result type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
      description: ''
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult)(optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 46
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a mapped <xref href=\"Apizr.Mediation.Cruding.ReadAllQuery%601\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning mapped optional result\n"
  example: []
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelReadAllResult
      description: The model result type to map to
    - id: TApiReadAllResult
      description: The api result type to map from
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
      description: ''
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 53
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a <xref href=\"Apizr.Mediation.Cruding.ReadAllQuery%601\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning an optional result\n"
  example: []
  syntax:
    content: public Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TReadAllResult
      description: The api result type
    - id: TReadAllParams
      description: The ReadAll parameters type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
      description: ''
    content.vb: Public Function SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TReadAllResult, ApizrException(Of TReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 60
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a mapped <xref href=\"Apizr.Mediation.Cruding.ReadAllQuery%601\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning a mapped optional result\n"
  example: []
  syntax:
    content: public Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>> SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelReadAllResult
      description: The model result type to map to
    - id: TApiReadAllResult
      description: The api result type to map from
    - id: TReadAllParams
      description: The ReadAll parameters type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
      description: ''
    content.vb: Public Function SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 72
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a <xref href=\"Apizr.Mediation.Cruding.ReadQuery%602\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning an optional result\n"
  example: []
  syntax:
    content: public Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity&apos;s crud key type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
      description: ''
    content.vb: Public Function SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TApiEntity, ApizrException(Of TApiEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 78
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a <xref href=\"Apizr.Mediation.Cruding.ReadQuery%602\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning a mapped optional result\n"
  example: []
  syntax:
    content: public Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity&apos;s crud key type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
      description: ''
    content.vb: Public Function SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of TModelEntity, ApizrException(Of TModelEntity))
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUpdateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 88
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a <xref href=\"Apizr.Mediation.Cruding.UpdateCommand%602\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning an optional result\n"
  example: []
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, TApiEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: entity
      type: '{TApiEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity&apos;s crud key type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
      description: ''
    content.vb: Public Function SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUpdateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 94
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a mapped <xref href=\"Apizr.Mediation.Cruding.UpdateCommand%602\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning an optional result\n"
  example: []
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey key, TModelEntity entity, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: entity
      type: '{TModelEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: The model entity type to map from
    - id: TApiEntity
      description: The api entity type to map to
    - id: TApiEntityKey
      description: The entity&apos;s crud key type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
      description: ''
    content.vb: Public Function SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(key As TApiEntityKey, entity As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator
  langs:
  - csharp
  - vb
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDeleteOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/ApizrCrudOptionalMediator.cs
    startLine: 105
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: "\nSend a <xref href=\"Apizr.Mediation.Cruding.DeleteCommand%602\" data-throw-if-not-resolved=\"false\"></xref> to Apizr using MediatR and returning an optional result\n"
  example: []
  syntax:
    content: public Task<Option<Unit, ApizrException>> SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TApiEntity
      description: The api entity type
    - id: TApiEntityKey
      description: The entity&apos;s crud key type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
      description: ''
    content.vb: Public Function SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of  Option(Of Unit, ApizrException)
  overload: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand*
  implements:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Optional.Cruding.Sending
  commentId: N:Apizr.Optional.Cruding.Sending
  name: Apizr.Optional.Cruding.Sending
  nameWithType: Apizr.Optional.Cruding.Sending
  fullName: Apizr.Optional.Cruding.Sending
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase
  commentId: T:Apizr.Mediation.Requesting.Sending.ApizrMediatorBase
  parent: Apizr.Mediation.Requesting.Sending
  name: ApizrMediatorBase
  nameWithType: ApizrMediatorBase
  fullName: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  parent: Apizr.Optional.Cruding.Sending
  name: IApizrCrudOptionalMediator
  nameWithType: IApizrCrudOptionalMediator
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
  parent: Apizr.Optional.Cruding.Sending
  name: IApizrCrudOptionalMediatorBase
  nameWithType: IApizrCrudOptionalMediatorBase
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediatorBase
- uid: Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  commentId: T:Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
  parent: Apizr.Mediation.Cruding.Sending
  name: IApizrCrudMediatorBase
  nameWithType: IApizrCrudMediatorBase
  fullName: Apizr.Mediation.Cruding.Sending.IApizrCrudMediatorBase
- uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  commentId: T:Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
  parent: Apizr.Optional.Requesting.Sending
  name: IApizrOptionalMediatorBase
  nameWithType: IApizrOptionalMediatorBase
  fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediatorBase
- uid: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  commentId: T:Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
  parent: Apizr.Mediation.Requesting.Sending
  name: IApizrMediatorBase
  nameWithType: IApizrMediatorBase
  fullName: Apizr.Mediation.Requesting.Sending.IApizrMediatorBase
- uid: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase
  isExternal: true
  name: CreateRequestOptionsBuilder(Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrMediatorBase.CreateRequestOptionsBuilder(Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder(System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: ApizrMediatorBase.CreateRequestOptionsBuilder(Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder(System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: CreateRequestOptionsBuilder(Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: CreateRequestOptionsBuilder
    nameWithType: ApizrMediatorBase.CreateRequestOptionsBuilder
    fullName: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: CreateRequestOptionsBuilder
    nameWithType: ApizrMediatorBase.CreateRequestOptionsBuilder
    fullName: Apizr.Mediation.Requesting.Sending.ApizrMediatorBase.CreateRequestOptionsBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Sending
  commentId: N:Apizr.Mediation.Requesting.Sending
  name: Apizr.Mediation.Requesting.Sending
  nameWithType: Apizr.Mediation.Requesting.Sending
  fullName: Apizr.Mediation.Requesting.Sending
- uid: Apizr.Mediation.Cruding.Sending
  commentId: N:Apizr.Mediation.Cruding.Sending
  name: Apizr.Mediation.Cruding.Sending
  nameWithType: Apizr.Mediation.Cruding.Sending
  fullName: Apizr.Mediation.Cruding.Sending
- uid: Apizr.Optional.Requesting.Sending
  commentId: N:Apizr.Optional.Requesting.Sending
  name: Apizr.Optional.Requesting.Sending
  nameWithType: Apizr.Optional.Requesting.Sending
  fullName: Apizr.Optional.Requesting.Sending
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.#ctor
  name: ApizrCrudOptionalMediator
  nameWithType: ApizrCrudOptionalMediator.ApizrCrudOptionalMediator
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.ApizrCrudOptionalMediator
- uid: MediatR.IMediator
  commentId: T:MediatR.IMediator
  parent: MediatR
  isExternal: true
  name: IMediator
  nameWithType: IMediator
  fullName: MediatR.IMediator
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand
  name: SendCreateOptionalCommand
  nameWithType: ApizrCrudOptionalMediator.SendCreateOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendCreateOptionalCommand
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1({TApiEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApiEntity}'
  commentId: '!:TApiEntity'
  definition: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TApiEntity, ApizrException>>
  nameWithType: Task<Option<TApiEntity, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TApiEntity, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TApiEntity, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TApiEntity, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TApiEntity, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendCreateOptionalCommand<TApiEntity>(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>(TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(Of TApiEntity)(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand<TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand(Of TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2({TModelEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TModelEntity}'
  commentId: '!:TModelEntity'
  definition: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`0,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelEntity, ApizrException>>
  nameWithType: Task<Option<TModelEntity, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntity, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TModelEntity, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntity, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TModelEntity, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>(TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand<TModelEntity, TApiEntity>
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand<TModelEntity, TApiEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand``2(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    nameWithType: IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendCreateOptionalCommand(Of TModelEntity, TApiEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery
  name: SendReadAllOptionalQuery
  nameWithType: ApizrCrudOptionalMediator.SendReadAllOptionalQuery
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadAllOptionalQuery
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>(System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)(System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery<TReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery(Of TReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: Task(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: Task(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReadAllResult
    nameWithType: TReadAllResult
    fullName: TReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>(System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelReadAllResult},Apizr.ApizrException{{TModelReadAllResult}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>>
  nameWithType: Task<Option<TModelReadAllResult, ApizrException<TModelReadAllResult>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelReadAllResult, Apizr.ApizrException<TModelReadAllResult>>>
  nameWithType.vb: Task(Of Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelReadAllResult, Apizr.ApizrException(Of TModelReadAllResult)))
  name.vb: Task(Of Option(Of TModelReadAllResult, ApizrException(Of TModelReadAllResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelReadAllResult
    nameWithType: TModelReadAllResult
    fullName: TModelReadAllResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2({TReadAllParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TReadAllParams}'
  commentId: '!:TReadAllParams'
  definition: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3({TReadAllParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery<TModelReadAllResult, TApiReadAllResult, TReadAllParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    nameWithType: IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadAllOptionalQuery(Of TModelReadAllResult, TApiReadAllResult, TReadAllParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: TReadAllParams
    nameWithType: TReadAllParams
    fullName: TReadAllParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery
  name: SendReadOptionalQuery
  nameWithType: ApizrCrudOptionalMediator.SendReadOptionalQuery
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendReadOptionalQuery
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2({TApiEntityKey},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TApiEntityKey}'
  commentId: '!:TApiEntityKey'
  definition: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TApiEntity, ApizrException<TApiEntity>>>
  nameWithType: Task<Option<TApiEntity, ApizrException<TApiEntity>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TApiEntity, Apizr.ApizrException<TApiEntity>>>
  nameWithType.vb: Task(Of Option(Of TApiEntity, ApizrException(Of TApiEntity)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TApiEntity, Apizr.ApizrException(Of TApiEntity)))
  name.vb: Task(Of Option(Of TApiEntity, ApizrException(Of TApiEntity)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3({TApiEntityKey},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`0,Apizr.ApizrException{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  nameWithType: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>
  nameWithType.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity)))
  name.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery``3(``2,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendReadOptionalQuery(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand
  name: SendUpdateOptionalCommand
  nameWithType: ApizrCrudOptionalMediator.SendUpdateOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendUpdateOptionalCommand
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2({TApiEntityKey},{TApiEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<Unit, ApizrException>>
  nameWithType: Task<Option<Unit, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of Unit, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: Task(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``2(``1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiEntity
    nameWithType: TApiEntity
    fullName: TApiEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3({TApiEntityKey},{TModelEntity},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>(TApiEntityKey, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand<TModelEntity, TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand``3(``2,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendUpdateOptionalCommand(Of TModelEntity, TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelEntity
    nameWithType: TModelEntity
    fullName: TModelEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand
  name: SendDeleteOptionalCommand
  nameWithType: ApizrCrudOptionalMediator.SendDeleteOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.ApizrCrudOptionalMediator.SendDeleteOptionalCommand
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2({TApiEntityKey},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  definition: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand<TApiEntity, TApiEntityKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand``2(``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    nameWithType: IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
    fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.SendDeleteOptionalCommand(Of TApiEntity, TApiEntityKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TApiEntityKey
    nameWithType: TApiEntityKey
    fullName: TApiEntityKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
