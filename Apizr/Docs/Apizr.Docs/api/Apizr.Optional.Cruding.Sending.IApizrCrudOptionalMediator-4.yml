### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  id: IApizrCrudOptionalMediator`4
  parent: Apizr.Optional.Cruding.Sending
  children:
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand(`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendDeleteOptionalCommand(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery``1(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery``1(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand(`1,`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand``1(`1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>
  type: Interface
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: IApizrCrudOptionalMediator
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 155
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: <xref href="Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator" data-throw-if-not-resolved="false"></xref> but dedicated to <code class="typeparamref">TApiEntity</code> cruding with optional result, getting all shorter
  example: []
  syntax:
    content: 'public interface IApizrCrudOptionalMediator<TApiEntity, in TApiEntityKey, TReadAllResult, in TReadAllParams> : IApizrCrudOptionalMediatorBase, IApizrCrudMediatorBase, IApizrOptionalMediatorBase, IApizrMediatorBase where TApiEntity : class'
    typeParameters:
    - id: TApiEntity
    - id: TApiEntityKey
    - id: TReadAllResult
    - id: TReadAllParams
    content.vb: Public Interface IApizrCrudOptionalMediator(Of TApiEntity As Class, In TApiEntityKey, TReadAllResult, In TReadAllParams) Inherits IApizrCrudOptionalMediatorBase, IApizrCrudMediatorBase, IApizrOptionalMediatorBase, IApizrMediatorBase
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
  name.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams)
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand(`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand(`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendCreateOptionalCommand(`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateOptionalCommand(TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateOptionalCommand(TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendCreateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 166
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a <xref href="Apizr.Optional.Cruding.CreateOptionalCommand%601" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning an optional result
  example: []
  syntax:
    content: Task<Option<TApiEntity, ApizrException>> SendCreateOptionalCommand(TApiEntity payload, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: payload
      type: '{TApiEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
      description: ''
    content.vb: Function SendCreateOptionalCommand(payload As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TApiEntity, ApizrException))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateOptionalCommand(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateOptionalCommand(TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendCreateOptionalCommand``1(``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendCreateOptionalCommand<TModelEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateOptionalCommand<TModelEntity>(TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateOptionalCommand<TModelEntity>(TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendCreateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 175
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a mapped <xref href="Apizr.Mediation.Cruding.CreateCommand%601" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning a mapped optional result
  example: []
  syntax:
    content: Task<Option<TModelEntity, ApizrException>> SendCreateOptionalCommand<TModelEntity>(TModelEntity payload, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: payload
      type: '{TModelEntity}'
      description: The entity to create
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: ''
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
      description: ''
    content.vb: Function SendCreateOptionalCommand(Of TModelEntity)(payload As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TModelEntity, ApizrException))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateOptionalCommand(Of TModelEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateOptionalCommand(Of TModelEntity)(TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendCreateOptionalCommand(Of TModelEntity)(TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery(Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery(Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery(System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 186
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a <xref href="Apizr.Mediation.Cruding.ReadAllQuery%601" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning an optional result
  example: []
  syntax:
    content: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery(Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
      description: ''
    content.vb: Function SendReadAllOptionalQuery(optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TReadAllResult, ApizrException(Of TReadAllResult)))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery``1(System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelEntityReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery<TModelEntityReadAllResult>(Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery<TModelEntityReadAllResult>(System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 194
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a mapped <xref href="Apizr.Mediation.Cruding.ReadAllQuery%601" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning mapped optional result
  example: []
  syntax:
    content: Task<Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>> SendReadAllOptionalQuery<TModelEntityReadAllResult>(Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntityReadAllResult
      description: The mapped result
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
      description: ''
    content.vb: Function SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 203
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a <xref href="Apizr.Mediation.Cruding.ReadAllQuery%601" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning an optional result
  example: []
  syntax:
    content: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>> SendReadAllOptionalQuery(TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
      description: ''
    content.vb: Function SendReadAllOptionalQuery(readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TReadAllResult, ApizrException(Of TReadAllResult)))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery``1(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery``1(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadAllOptionalQuery``1(`3,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendReadAllOptionalQuery<TModelEntityReadAllResult>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery<TModelEntityReadAllResult>(TReadAllParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery<TModelEntityReadAllResult>(TReadAllParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadAllOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 213
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a mapped <xref href="Apizr.Mediation.Cruding.ReadAllQuery%601" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning a mapped optional result
  example: []
  syntax:
    content: Task<Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>> SendReadAllOptionalQuery<TModelEntityReadAllResult>(TReadAllParams readAllParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: readAllParams
      type: '{TReadAllParams}'
      description: The read all filters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntityReadAllResult
      description: ''
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
      description: ''
    content.vb: Function SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(readAllParams As TReadAllParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(TReadAllParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadAllOptionalQuery(Of TModelEntityReadAllResult)(TReadAllParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadOptionalQuery(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadOptionalQuery(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadOptionalQuery(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 226
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a <xref href="Apizr.Mediation.Cruding.ReadQuery%602" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning an optional result
  example: []
  syntax:
    content: Task<Option<TApiEntity, ApizrException<TApiEntity>>> SendReadOptionalQuery(TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
      description: ''
    content.vb: Function SendReadOptionalQuery(key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TApiEntity, ApizrException(Of TApiEntity)))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadOptionalQuery(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadOptionalQuery(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery``1(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery``1(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendReadOptionalQuery``1(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendReadOptionalQuery<TModelEntity>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadOptionalQuery<TModelEntity>(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadOptionalQuery<TModelEntity>(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendReadOptionalQuery
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 235
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a <xref href="Apizr.Mediation.Cruding.ReadQuery%602" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning a mapped optional result
  example: []
  syntax:
    content: Task<Option<TModelEntity, ApizrException<TModelEntity>>> SendReadOptionalQuery<TModelEntity>(TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: ''
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
      description: ''
    content.vb: Function SendReadOptionalQuery(Of TModelEntity)(key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TModelEntity, ApizrException(Of TModelEntity)))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadOptionalQuery(Of TModelEntity)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadOptionalQuery(Of TModelEntity)(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendReadOptionalQuery(Of TModelEntity)(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand(`1,`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand(`1,`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUpdateOptionalCommand(`1,`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateOptionalCommand(TApiEntityKey, TApiEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateOptionalCommand(TApiEntityKey, TApiEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUpdateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 248
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a <xref href="Apizr.Mediation.Cruding.UpdateCommand%602" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning an optional result
  example: []
  syntax:
    content: Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand(TApiEntityKey key, TApiEntity payload, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: payload
      type: '{TApiEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
      description: ''
    content.vb: Function SendUpdateOptionalCommand(key As TApiEntityKey, payload As TApiEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of Unit, ApizrException))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateOptionalCommand(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateOptionalCommand(TApiEntityKey, TApiEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(TApiEntityKey, TApiEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand``1(`1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand``1(`1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUpdateOptionalCommand``1(`1,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendUpdateOptionalCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateOptionalCommand<TModelEntity>(TApiEntityKey, TModelEntity, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateOptionalCommand<TModelEntity>(TApiEntityKey, TModelEntity, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUpdateOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 258
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a mapped <xref href="Apizr.Mediation.Cruding.UpdateCommand%602" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning an optional result
  example: []
  syntax:
    content: Task<Option<Unit, ApizrException>> SendUpdateOptionalCommand<TModelEntity>(TApiEntityKey key, TModelEntity payload, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: payload
      type: '{TModelEntity}'
      description: The entity to update
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    typeParameters:
    - id: TModelEntity
      description: ''
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
      description: ''
    content.vb: Function SendUpdateOptionalCommand(Of TModelEntity)(key As TApiEntityKey, payload As TModelEntity, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of Unit, ApizrException))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateOptionalCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateOptionalCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUpdateOptionalCommand(Of TModelEntity)(TApiEntityKey, TModelEntity, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendDeleteOptionalCommand(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendDeleteOptionalCommand(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDeleteOptionalCommand(`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4
  langs:
  - csharp
  - vb
  name: SendDeleteOptionalCommand(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteOptionalCommand(TApiEntityKey, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteOptionalCommand(TApiEntityKey, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDeleteOptionalCommand
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Cruding/Sending/IApizrCrudOptionalMediator.cs
    startLine: 271
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding.Sending
  summary: Send a <xref href="Apizr.Mediation.Cruding.DeleteCommand%602" data-throw-if-not-resolved="false"></xref> to Apizr using MediatR and returning an optional result
  example: []
  syntax:
    content: Task<Option<Unit, ApizrException>> SendDeleteOptionalCommand(TApiEntityKey key, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: key
      type: '{TApiEntityKey}'
      description: The entity key
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Options provided to the request
    return:
      type: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
      description: ''
    content.vb: Function SendDeleteOptionalCommand(key As TApiEntityKey, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of Unit, ApizrException))
  overload: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendDeleteOptionalCommand*
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteOptionalCommand(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteOptionalCommand(TApiEntityKey, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDeleteOptionalCommand(TApiEntityKey, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  commentId: T:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
  parent: Apizr.Optional.Cruding.Sending
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator.html
  name: IApizrCrudOptionalMediator
  nameWithType: IApizrCrudOptionalMediator
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator
- uid: Apizr.Optional.Cruding.Sending
  commentId: N:Apizr.Optional.Cruding.Sending
  href: Apizr.html
  name: Apizr.Optional.Cruding.Sending
  nameWithType: Apizr.Optional.Cruding.Sending
  fullName: Apizr.Optional.Cruding.Sending
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Cruding
    name: Cruding
    href: Apizr.Optional.Cruding.html
  - name: .
  - uid: Apizr.Optional.Cruding.Sending
    name: Sending
    href: Apizr.Optional.Cruding.Sending.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Cruding
    name: Cruding
    href: Apizr.Optional.Cruding.html
  - name: .
  - uid: Apizr.Optional.Cruding.Sending
    name: Sending
    href: Apizr.Optional.Cruding.Sending.html
- uid: Apizr.Optional.Cruding.CreateOptionalCommand`1
  commentId: T:Apizr.Optional.Cruding.CreateOptionalCommand`1
  href: Apizr.Optional.Cruding.CreateOptionalCommand-1.html
  name: CreateOptionalCommand<TModelData>
  nameWithType: CreateOptionalCommand<TModelData>
  fullName: Apizr.Optional.Cruding.CreateOptionalCommand<TModelData>
  nameWithType.vb: CreateOptionalCommand(Of TModelData)
  fullName.vb: Apizr.Optional.Cruding.CreateOptionalCommand(Of TModelData)
  name.vb: CreateOptionalCommand(Of TModelData)
  spec.csharp:
  - uid: Apizr.Optional.Cruding.CreateOptionalCommand`1
    name: CreateOptionalCommand
    href: Apizr.Optional.Cruding.CreateOptionalCommand-1.html
  - name: <
  - name: TModelData
  - name: '>'
  spec.vb:
  - uid: Apizr.Optional.Cruding.CreateOptionalCommand`1
    name: CreateOptionalCommand
    href: Apizr.Optional.Cruding.CreateOptionalCommand-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelData
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendCreateOptionalCommand
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html#Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator_4_SendCreateOptionalCommand__0_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendCreateOptionalCommand
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendCreateOptionalCommand
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateOptionalCommand
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendCreateOptionalCommand
- uid: '{TApiEntity}'
  commentId: '!:TApiEntity'
  definition: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<TApiEntity, ApizrException>>
  nameWithType: Task<Option<TApiEntity, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TApiEntity, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TApiEntity, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TApiEntity, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TApiEntity, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - name: TApiEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: )
  - name: )
- uid: TApiEntity
  name: TApiEntity
  nameWithType: TApiEntity
  fullName: TApiEntity
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Apizr.Mediation.Cruding.CreateCommand`1
  commentId: T:Apizr.Mediation.Cruding.CreateCommand`1
  href: Apizr.Mediation.Cruding.CreateCommand-1.html
  name: CreateCommand<TModelData>
  nameWithType: CreateCommand<TModelData>
  fullName: Apizr.Mediation.Cruding.CreateCommand<TModelData>
  nameWithType.vb: CreateCommand(Of TModelData)
  fullName.vb: Apizr.Mediation.Cruding.CreateCommand(Of TModelData)
  name.vb: CreateCommand(Of TModelData)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.CreateCommand`1
    name: CreateCommand
    href: Apizr.Mediation.Cruding.CreateCommand-1.html
  - name: <
  - name: TModelData
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.CreateCommand`1
    name: CreateCommand
    href: Apizr.Mediation.Cruding.CreateCommand-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelData
  - name: )
- uid: '{TModelEntity}'
  commentId: '!:TModelEntity'
  definition: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`0,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<TModelEntity, ApizrException>>
  nameWithType: Task<Option<TModelEntity, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntity, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TModelEntity, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntity, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TModelEntity, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - name: TModelEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModelEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: )
  - name: )
- uid: TModelEntity
  name: TModelEntity
  nameWithType: TModelEntity
  fullName: TModelEntity
- uid: Apizr.Mediation.Cruding.ReadAllQuery`1
  commentId: T:Apizr.Mediation.Cruding.ReadAllQuery`1
  href: Apizr.Mediation.Cruding.ReadAllQuery-1.html
  name: ReadAllQuery<TReadAllResult>
  nameWithType: ReadAllQuery<TReadAllResult>
  fullName: Apizr.Mediation.Cruding.ReadAllQuery<TReadAllResult>
  nameWithType.vb: ReadAllQuery(Of TReadAllResult)
  fullName.vb: Apizr.Mediation.Cruding.ReadAllQuery(Of TReadAllResult)
  name.vb: ReadAllQuery(Of TReadAllResult)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.ReadAllQuery`1
    name: ReadAllQuery
    href: Apizr.Mediation.Cruding.ReadAllQuery-1.html
  - name: <
  - name: TReadAllResult
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.ReadAllQuery`1
    name: ReadAllQuery
    href: Apizr.Mediation.Cruding.ReadAllQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TReadAllResult
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery*
  commentId: Overload:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadAllOptionalQuery
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html#Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator_4_SendReadAllOptionalQuery_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendReadAllOptionalQuery
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadAllOptionalQuery
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadAllOptionalQuery
- uid: System.Threading.Tasks.Task{Optional.Option{{TReadAllResult},Apizr.ApizrException{{TReadAllResult}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  nameWithType: Task<Option<TReadAllResult, ApizrException<TReadAllResult>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TReadAllResult, Apizr.ApizrException<TReadAllResult>>>
  nameWithType.vb: Task(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TReadAllResult, Apizr.ApizrException(Of TReadAllResult)))
  name.vb: Task(Of Option(Of TReadAllResult, ApizrException(Of TReadAllResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: <
  - name: TReadAllResult
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TReadAllResult
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TReadAllResult
  - name: )
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntityReadAllResult},Apizr.ApizrException{{TModelEntityReadAllResult}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`2,Apizr.ApizrException{`2}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  nameWithType: Task<Option<TModelEntityReadAllResult, ApizrException<TModelEntityReadAllResult>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntityReadAllResult, Apizr.ApizrException<TModelEntityReadAllResult>>>
  nameWithType.vb: Task(Of Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntityReadAllResult, Apizr.ApizrException(Of TModelEntityReadAllResult)))
  name.vb: Task(Of Option(Of TModelEntityReadAllResult, ApizrException(Of TModelEntityReadAllResult)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - name: TModelEntityReadAllResult
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: <
  - name: TModelEntityReadAllResult
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModelEntityReadAllResult
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelEntityReadAllResult
  - name: )
  - name: )
  - name: )
- uid: '{TReadAllParams}'
  commentId: '!:TReadAllParams'
  definition: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: TReadAllParams
  name: TReadAllParams
  nameWithType: TReadAllParams
  fullName: TReadAllParams
- uid: Apizr.Mediation.Cruding.ReadQuery`2
  commentId: T:Apizr.Mediation.Cruding.ReadQuery`2
  href: Apizr.Mediation.Cruding.ReadQuery-2.html
  name: ReadQuery<TResultData, TKey>
  nameWithType: ReadQuery<TResultData, TKey>
  fullName: Apizr.Mediation.Cruding.ReadQuery<TResultData, TKey>
  nameWithType.vb: ReadQuery(Of TResultData, TKey)
  fullName.vb: Apizr.Mediation.Cruding.ReadQuery(Of TResultData, TKey)
  name.vb: ReadQuery(Of TResultData, TKey)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    href: Apizr.Mediation.Cruding.ReadQuery-2.html
  - name: <
  - name: TResultData
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.ReadQuery`2
    name: ReadQuery
    href: Apizr.Mediation.Cruding.ReadQuery-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TResultData
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery*
  commentId: Overload:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendReadOptionalQuery
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html#Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator_4_SendReadOptionalQuery__1_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendReadOptionalQuery
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadOptionalQuery
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendReadOptionalQuery
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadOptionalQuery
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendReadOptionalQuery
- uid: '{TApiEntityKey}'
  commentId: '!:TApiEntityKey'
  definition: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: System.Threading.Tasks.Task{Optional.Option{{TApiEntity},Apizr.ApizrException{{TApiEntity}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``0,Apizr.ApizrException{``0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<TApiEntity, ApizrException<TApiEntity>>>
  nameWithType: Task<Option<TApiEntity, ApizrException<TApiEntity>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TApiEntity, Apizr.ApizrException<TApiEntity>>>
  nameWithType.vb: Task(Of Option(Of TApiEntity, ApizrException(Of TApiEntity)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TApiEntity, Apizr.ApizrException(Of TApiEntity)))
  name.vb: Task(Of Option(Of TApiEntity, ApizrException(Of TApiEntity)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - name: TApiEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: <
  - name: TApiEntity
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TApiEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TApiEntity
  - name: )
  - name: )
  - name: )
- uid: TApiEntityKey
  name: TApiEntityKey
  nameWithType: TApiEntityKey
  fullName: TApiEntityKey
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelEntity},Apizr.ApizrException{{TModelEntity}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`0,Apizr.ApizrException{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  nameWithType: Task<Option<TModelEntity, ApizrException<TModelEntity>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelEntity, Apizr.ApizrException<TModelEntity>>>
  nameWithType.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelEntity, Apizr.ApizrException(Of TModelEntity)))
  name.vb: Task(Of Option(Of TModelEntity, ApizrException(Of TModelEntity)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - name: TModelEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: <
  - name: TModelEntity
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModelEntity
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException`1
    name: ApizrException
    href: Apizr.ApizrException-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModelEntity
  - name: )
  - name: )
  - name: )
- uid: Apizr.Mediation.Cruding.UpdateCommand`2
  commentId: T:Apizr.Mediation.Cruding.UpdateCommand`2
  href: Apizr.Mediation.Cruding.UpdateCommand-2.html
  name: UpdateCommand<TKey, TRequestData>
  nameWithType: UpdateCommand<TKey, TRequestData>
  fullName: Apizr.Mediation.Cruding.UpdateCommand<TKey, TRequestData>
  nameWithType.vb: UpdateCommand(Of TKey, TRequestData)
  fullName.vb: Apizr.Mediation.Cruding.UpdateCommand(Of TKey, TRequestData)
  name.vb: UpdateCommand(Of TKey, TRequestData)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.UpdateCommand`2
    name: UpdateCommand
    href: Apizr.Mediation.Cruding.UpdateCommand-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TRequestData
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.UpdateCommand`2
    name: UpdateCommand
    href: Apizr.Mediation.Cruding.UpdateCommand-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TRequestData
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendUpdateOptionalCommand
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html#Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator_4_SendUpdateOptionalCommand__1__0_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendUpdateOptionalCommand
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendUpdateOptionalCommand
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateOptionalCommand
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendUpdateOptionalCommand
- uid: System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<Unit, ApizrException>>
  nameWithType: Task<Option<Unit, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of Unit, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: Task(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: )
  - name: )
- uid: Apizr.Mediation.Cruding.DeleteCommand`2
  commentId: T:Apizr.Mediation.Cruding.DeleteCommand`2
  href: Apizr.Mediation.Cruding.DeleteCommand-2.html
  name: DeleteCommand<T, TKey>
  nameWithType: DeleteCommand<T, TKey>
  fullName: Apizr.Mediation.Cruding.DeleteCommand<T, TKey>
  nameWithType.vb: DeleteCommand(Of T, TKey)
  fullName.vb: Apizr.Mediation.Cruding.DeleteCommand(Of T, TKey)
  name.vb: DeleteCommand(Of T, TKey)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.DeleteCommand`2
    name: DeleteCommand
    href: Apizr.Mediation.Cruding.DeleteCommand-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.DeleteCommand`2
    name: DeleteCommand
    href: Apizr.Mediation.Cruding.DeleteCommand-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendDeleteOptionalCommand*
  commentId: Overload:Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator`4.SendDeleteOptionalCommand
  href: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator-4.html#Apizr_Optional_Cruding_Sending_IApizrCrudOptionalMediator_4_SendDeleteOptionalCommand__1_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendDeleteOptionalCommand
  nameWithType: IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteOptionalCommand
  fullName: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator<TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams>.SendDeleteOptionalCommand
  nameWithType.vb: IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteOptionalCommand
  fullName.vb: Apizr.Optional.Cruding.Sending.IApizrCrudOptionalMediator(Of TApiEntity, TApiEntityKey, TReadAllResult, TReadAllParams).SendDeleteOptionalCommand
