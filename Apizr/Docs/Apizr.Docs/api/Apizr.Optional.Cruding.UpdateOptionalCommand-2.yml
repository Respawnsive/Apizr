### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Cruding.UpdateOptionalCommand`2
  commentId: T:Apizr.Optional.Cruding.UpdateOptionalCommand`2
  id: UpdateOptionalCommand`2
  parent: Apizr.Optional.Cruding
  children:
  - Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor(`0,`1)
  - Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor(`0,`1,Polly.Context)
  langs:
  - csharp
  - vb
  name: UpdateOptionalCommand<TKey, TRequestData>
  nameWithType: UpdateOptionalCommand<TKey, TRequestData>
  fullName: Apizr.Optional.Cruding.UpdateOptionalCommand<TKey, TRequestData>
  type: Class
  source:
    id: UpdateOptionalCommand
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\UpdateOptionalCommand.cs
    startLine: 7
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: 'public class UpdateOptionalCommand<TKey, TRequestData> : UpdateCommandBase<TKey, TRequestData, Option<Unit, ApizrException>>, IMediationCommand<TRequestData, Option<Unit, ApizrException>>, IRequest<Option<Unit, ApizrException>>, IBaseRequest'
    typeParameters:
    - id: TKey
    - id: TRequestData
    content.vb: "Public Class UpdateOptionalCommand(Of TKey, TRequestData)\n    Inherits UpdateCommandBase(Of TKey, TRequestData,  Option(Of Unit, ApizrException) ) \n    Implements IMediationCommand(Of TRequestData,  Option(Of Unit, ApizrException) ), IRequest(Of  Option(Of Unit, ApizrException) ), IBaseRequest"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - Apizr.Mediation.Commanding.MediationCommandBase{{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  implements:
  - Apizr.Mediation.Commanding.IMediationCommand{{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - MediatR.IBaseRequest
  inheritedMembers:
  - Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Key
  - Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.RequestData
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Context
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}.OnException
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: UpdateOptionalCommand(Of TKey, TRequestData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Cruding.UpdateOptionalCommand(Of TKey, TRequestData)
  name.vb: UpdateOptionalCommand(Of TKey, TRequestData)
- uid: Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor(`0,`1)
  commentId: M:Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: Apizr.Optional.Cruding.UpdateOptionalCommand`2
  langs:
  - csharp
  - vb
  name: UpdateOptionalCommand(TKey, TRequestData)
  nameWithType: UpdateOptionalCommand<TKey, TRequestData>.UpdateOptionalCommand(TKey, TRequestData)
  fullName: Apizr.Optional.Cruding.UpdateOptionalCommand<TKey, TRequestData>.UpdateOptionalCommand(TKey, TRequestData)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\UpdateOptionalCommand.cs
    startLine: 9
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public UpdateOptionalCommand(TKey key, TRequestData requestData)
    parameters:
    - id: key
      type: '{TKey}'
    - id: requestData
      type: '{TRequestData}'
    content.vb: Public Sub New(key As TKey, requestData As TRequestData)
  overload: Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor*
  nameWithType.vb: UpdateOptionalCommand(Of TKey, TRequestData).UpdateOptionalCommand(TKey, TRequestData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.UpdateOptionalCommand(Of TKey, TRequestData).UpdateOptionalCommand(TKey, TRequestData)
- uid: Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor(`0,`1,Polly.Context)
  commentId: M:Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor(`0,`1,Polly.Context)
  id: '#ctor(`0,`1,Polly.Context)'
  parent: Apizr.Optional.Cruding.UpdateOptionalCommand`2
  langs:
  - csharp
  - vb
  name: UpdateOptionalCommand(TKey, TRequestData, Context)
  nameWithType: UpdateOptionalCommand<TKey, TRequestData>.UpdateOptionalCommand(TKey, TRequestData, Context)
  fullName: Apizr.Optional.Cruding.UpdateOptionalCommand<TKey, TRequestData>.UpdateOptionalCommand(TKey, TRequestData, Polly.Context)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Cruding\UpdateOptionalCommand.cs
    startLine: 13
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Cruding
  syntax:
    content: public UpdateOptionalCommand(TKey key, TRequestData requestData, Context context)
    parameters:
    - id: key
      type: '{TKey}'
    - id: requestData
      type: '{TRequestData}'
    - id: context
      type: Polly.Context
    content.vb: Public Sub New(key As TKey, requestData As TRequestData, context As Context)
  overload: Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor*
  nameWithType.vb: UpdateOptionalCommand(Of TKey, TRequestData).UpdateOptionalCommand(TKey, TRequestData, Context)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Cruding.UpdateOptionalCommand(Of TKey, TRequestData).UpdateOptionalCommand(TKey, TRequestData, Polly.Context)
references:
- uid: Apizr.Optional.Cruding
  commentId: N:Apizr.Optional.Cruding
  name: Apizr.Optional.Cruding
  nameWithType: Apizr.Optional.Cruding
  fullName: Apizr.Optional.Cruding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1
  name: RequestBase<Option<Unit, ApizrException>>
  nameWithType: RequestBase<Option<Unit, ApizrException>>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: RequestBase(Of Option(Of Unit, ApizrException))
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: RequestBase(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.MediationCommandBase{{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:Apizr.Mediation.Commanding.MediationCommandBase{`1,Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: Apizr.Mediation.Commanding
  definition: Apizr.Mediation.Commanding.MediationCommandBase`2
  name: MediationCommandBase<TRequestData, Option<Unit, ApizrException>>
  nameWithType: MediationCommandBase<TRequestData, Option<Unit, ApizrException>>
  fullName: Apizr.Mediation.Commanding.MediationCommandBase<TRequestData, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: MediationCommandBase(Of TRequestData, Option(Of Unit, ApizrException))
  fullName.vb: Apizr.Mediation.Commanding.MediationCommandBase(Of TRequestData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: MediationCommandBase(Of TRequestData, Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`2
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`2
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:Apizr.Mediation.Cruding.Base.UpdateCommandBase{`0,`1,Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: Apizr.Mediation.Cruding.Base
  definition: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3
  name: UpdateCommandBase<TKey, TRequestData, Option<Unit, ApizrException>>
  nameWithType: UpdateCommandBase<TKey, TRequestData, Option<Unit, ApizrException>>
  fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase<TKey, TRequestData, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: UpdateCommandBase(Of TKey, TRequestData, Option(Of Unit, ApizrException))
  fullName.vb: Apizr.Mediation.Cruding.Base.UpdateCommandBase(Of TKey, TRequestData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: UpdateCommandBase(Of TKey, TRequestData, Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3
    name: UpdateCommandBase
    nameWithType: UpdateCommandBase
    fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3
    name: UpdateCommandBase
    nameWithType: UpdateCommandBase
    fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding.IMediationCommand{{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:Apizr.Mediation.Commanding.IMediationCommand{`1,Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: Apizr.Mediation.Commanding
  definition: Apizr.Mediation.Commanding.IMediationCommand`2
  name: IMediationCommand<TRequestData, Option<Unit, ApizrException>>
  nameWithType: IMediationCommand<TRequestData, Option<Unit, ApizrException>>
  fullName: Apizr.Mediation.Commanding.IMediationCommand<TRequestData, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IMediationCommand(Of TRequestData, Option(Of Unit, ApizrException))
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommand(Of TRequestData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IMediationCommand(Of TRequestData, Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: MediatR
  definition: MediatR.IRequest`1
  name: IRequest<Option<Unit, ApizrException>>
  nameWithType: IRequest<Option<Unit, ApizrException>>
  fullName: MediatR.IRequest<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IRequest(Of Option(Of Unit, ApizrException))
  fullName.vb: MediatR.IRequest(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IRequest(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IBaseRequest
  commentId: T:MediatR.IBaseRequest
  parent: MediatR
  isExternal: true
  name: IBaseRequest
  nameWithType: IBaseRequest
  fullName: MediatR.IBaseRequest
- uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Key
  commentId: P:Apizr.Mediation.Cruding.Base.UpdateCommandBase{`0,`1,Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Key
  parent: Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  definition: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3.Key
  name: Key
  nameWithType: UpdateCommandBase<TKey, TRequestData, Option<Unit, ApizrException>>.Key
  fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase<TKey, TRequestData, Optional.Option<MediatR.Unit, Apizr.ApizrException>>.Key
  nameWithType.vb: UpdateCommandBase(Of TKey, TRequestData, Option(Of Unit, ApizrException)).Key
  fullName.vb: Apizr.Mediation.Cruding.Base.UpdateCommandBase(Of TKey, TRequestData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException)).Key
- uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}.RequestData
  commentId: P:Apizr.Mediation.Cruding.Base.UpdateCommandBase{`0,`1,Optional.Option{MediatR.Unit,Apizr.ApizrException}}.RequestData
  parent: Apizr.Mediation.Cruding.Base.UpdateCommandBase{{TKey},{TRequestData},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  definition: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3.RequestData
  name: RequestData
  nameWithType: UpdateCommandBase<TKey, TRequestData, Option<Unit, ApizrException>>.RequestData
  fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase<TKey, TRequestData, Optional.Option<MediatR.Unit, Apizr.ApizrException>>.RequestData
  nameWithType.vb: UpdateCommandBase(Of TKey, TRequestData, Option(Of Unit, ApizrException)).RequestData
  fullName.vb: Apizr.Mediation.Cruding.Base.UpdateCommandBase(Of TKey, TRequestData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException)).RequestData
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Context
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}.Context
  parent: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  name: Context
  nameWithType: RequestBase<Option<Unit, ApizrException>>.Context
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>>.Context
  nameWithType.vb: RequestBase(Of Option(Of Unit, ApizrException)).Context
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException)).Context
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}.OnException
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}.OnException
  parent: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  name: OnException
  nameWithType: RequestBase<Option<Unit, ApizrException>>.OnException
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>>.OnException
  nameWithType.vb: RequestBase(Of Option(Of Unit, ApizrException)).OnException
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException)).OnException
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase`1
  name: RequestBase<TFormattedModelResultData>
  nameWithType: RequestBase<TFormattedModelResultData>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>
  nameWithType.vb: RequestBase(Of TFormattedModelResultData)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData)
  name.vb: RequestBase(Of TFormattedModelResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`1
    name: RequestBase
    nameWithType: RequestBase
    fullName: Apizr.Mediation.Requesting.Base.RequestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Base
  commentId: N:Apizr.Mediation.Requesting.Base
  name: Apizr.Mediation.Requesting.Base
  nameWithType: Apizr.Mediation.Requesting.Base
  fullName: Apizr.Mediation.Requesting.Base
- uid: Apizr.Mediation.Commanding.MediationCommandBase`2
  commentId: T:Apizr.Mediation.Commanding.MediationCommandBase`2
  name: MediationCommandBase<TRequestData, TResultData>
  nameWithType: MediationCommandBase<TRequestData, TResultData>
  fullName: Apizr.Mediation.Commanding.MediationCommandBase<TRequestData, TResultData>
  nameWithType.vb: MediationCommandBase(Of TRequestData, TResultData)
  fullName.vb: Apizr.Mediation.Commanding.MediationCommandBase(Of TRequestData, TResultData)
  name.vb: MediationCommandBase(Of TRequestData, TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`2
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.MediationCommandBase`2
    name: MediationCommandBase
    nameWithType: MediationCommandBase
    fullName: Apizr.Mediation.Commanding.MediationCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Commanding
  commentId: N:Apizr.Mediation.Commanding
  name: Apizr.Mediation.Commanding
  nameWithType: Apizr.Mediation.Commanding
  fullName: Apizr.Mediation.Commanding
- uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3
  commentId: T:Apizr.Mediation.Cruding.Base.UpdateCommandBase`3
  name: UpdateCommandBase<TKey, TRequestData, TResultData>
  nameWithType: UpdateCommandBase<TKey, TRequestData, TResultData>
  fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase<TKey, TRequestData, TResultData>
  nameWithType.vb: UpdateCommandBase(Of TKey, TRequestData, TResultData)
  fullName.vb: Apizr.Mediation.Cruding.Base.UpdateCommandBase(Of TKey, TRequestData, TResultData)
  name.vb: UpdateCommandBase(Of TKey, TRequestData, TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3
    name: UpdateCommandBase
    nameWithType: UpdateCommandBase
    fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3
    name: UpdateCommandBase
    nameWithType: UpdateCommandBase
    fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Cruding.Base
  commentId: N:Apizr.Mediation.Cruding.Base
  name: Apizr.Mediation.Cruding.Base
  nameWithType: Apizr.Mediation.Cruding.Base
  fullName: Apizr.Mediation.Cruding.Base
- uid: Apizr.Mediation.Commanding.IMediationCommand`2
  commentId: T:Apizr.Mediation.Commanding.IMediationCommand`2
  name: IMediationCommand<TRequestData, TResultData>
  nameWithType: IMediationCommand<TRequestData, TResultData>
  fullName: Apizr.Mediation.Commanding.IMediationCommand<TRequestData, TResultData>
  nameWithType.vb: IMediationCommand(Of TRequestData, TResultData)
  fullName.vb: Apizr.Mediation.Commanding.IMediationCommand(Of TRequestData, TResultData)
  name.vb: IMediationCommand(Of TRequestData, TResultData)
  spec.csharp:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Commanding.IMediationCommand`2
    name: IMediationCommand
    nameWithType: IMediationCommand
    fullName: Apizr.Mediation.Commanding.IMediationCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequestData
    nameWithType: TRequestData
    fullName: TRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResultData
    nameWithType: TResultData
    fullName: TResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequest`1
  commentId: T:MediatR.IRequest`1
  isExternal: true
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: MediatR.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: MediatR.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    nameWithType: IRequest
    fullName: MediatR.IRequest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3.Key
  commentId: P:Apizr.Mediation.Cruding.Base.UpdateCommandBase`3.Key
  name: Key
  nameWithType: UpdateCommandBase<TKey, TRequestData, TResultData>.Key
  fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase<TKey, TRequestData, TResultData>.Key
  nameWithType.vb: UpdateCommandBase(Of TKey, TRequestData, TResultData).Key
  fullName.vb: Apizr.Mediation.Cruding.Base.UpdateCommandBase(Of TKey, TRequestData, TResultData).Key
- uid: Apizr.Mediation.Cruding.Base.UpdateCommandBase`3.RequestData
  commentId: P:Apizr.Mediation.Cruding.Base.UpdateCommandBase`3.RequestData
  name: RequestData
  nameWithType: UpdateCommandBase<TKey, TRequestData, TResultData>.RequestData
  fullName: Apizr.Mediation.Cruding.Base.UpdateCommandBase<TKey, TRequestData, TResultData>.RequestData
  nameWithType.vb: UpdateCommandBase(Of TKey, TRequestData, TResultData).RequestData
  fullName.vb: Apizr.Mediation.Cruding.Base.UpdateCommandBase(Of TKey, TRequestData, TResultData).RequestData
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`1.Context
  name: Context
  nameWithType: RequestBase<TFormattedModelResultData>.Context
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>.Context
  nameWithType.vb: RequestBase(Of TFormattedModelResultData).Context
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData).Context
- uid: Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`1.OnException
  name: OnException
  nameWithType: RequestBase<TFormattedModelResultData>.OnException
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData>.OnException
  nameWithType.vb: RequestBase(Of TFormattedModelResultData).OnException
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData).OnException
- uid: Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor*
  commentId: Overload:Apizr.Optional.Cruding.UpdateOptionalCommand`2.#ctor
  name: UpdateOptionalCommand
  nameWithType: UpdateOptionalCommand<TKey, TRequestData>.UpdateOptionalCommand
  fullName: Apizr.Optional.Cruding.UpdateOptionalCommand<TKey, TRequestData>.UpdateOptionalCommand
  nameWithType.vb: UpdateOptionalCommand(Of TKey, TRequestData).UpdateOptionalCommand
  fullName.vb: Apizr.Optional.Cruding.UpdateOptionalCommand(Of TKey, TRequestData).UpdateOptionalCommand
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TRequestData}'
  commentId: '!:TRequestData'
  definition: TRequestData
  name: TRequestData
  nameWithType: TRequestData
  fullName: TRequestData
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TRequestData
  name: TRequestData
  nameWithType: TRequestData
  fullName: TRequestData
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
