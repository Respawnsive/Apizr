### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  commentId: T:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  id: ApizrOptionalMediatorFileTransferExtensions
  parent: Apizr.Optional.Extending
  children:
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: ApizrOptionalMediatorFileTransferExtensions
  nameWithType: ApizrOptionalMediatorFileTransferExtensions
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  type: Class
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrOptionalMediatorFileTransferExtensions
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 18
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Extensions for file transfer requests with optional result
  example: []
  syntax:
    content: public static class ApizrOptionalMediatorFileTransferExtensions
    content.vb: Public Module ApizrOptionalMediatorFileTransferExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(IApizrOptionalMediator, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(IApizrOptionalMediator, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadOptionalQueryFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 32
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR for <code class="typeparamref">TDownloadApi</code> with a custom query parameters type and optional result
  example: []
  syntax:
    content: 'public static Task<Option<FileInfo, ApizrException>> SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, TDownloadParams downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi<TDownloadParams>'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: '{TDownloadParams}'
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadOptionalQueryFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, downloadParams As TDownloadParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi, TDownloadParams)(IApizrOptionalMediator, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi, TDownloadParams)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadOptionalQueryFor(Of TDownloadApi, TDownloadParams)(IApizrOptionalMediator, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadOptionalQueryFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadOptionalQueryFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 49
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR for <code class="typeparamref">TDownloadApi</code> with optional result
  example: []
  syntax:
    content: 'public static Task<Option<FileInfo, ApizrException>> SendDownloadOptionalQueryFor<TDownloadApi, TDownloadParams>(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi<TDownloadParams>'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadOptionalQueryFor(Of TDownloadApi As IDownloadApi(Of TDownloadParams), TDownloadParams)(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi, TDownloadParams)(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi, TDownloadParams)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadOptionalQueryFor(Of TDownloadApi, TDownloadParams)(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadOptionalQueryFor<TDownloadApi>(IApizrOptionalMediator, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi>(IApizrOptionalMediator, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary<string, object>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadOptionalQueryFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 65
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR for <code class="typeparamref">TDownloadApi</code> with a dictionary query parameters type and optional result
  example: []
  syntax:
    content: 'public static Task<Option<FileInfo, ApizrException>> SendDownloadOptionalQueryFor<TDownloadApi>(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, IDictionary<string, object> downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadOptionalQueryFor(Of TDownloadApi As IDownloadApi)(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, downloadParams As IDictionary(Of String, Object), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi)(IApizrOptionalMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary(Of String, Object), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadOptionalQueryFor(Of TDownloadApi)(IApizrOptionalMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadOptionalQueryFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadOptionalQueryFor<TDownloadApi>(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi>(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor<TDownloadApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadOptionalQueryFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 80
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR for <code class="typeparamref">TDownloadApi</code> with optional result
  example: []
  syntax:
    content: 'public static Task<Option<FileInfo, ApizrException>> SendDownloadOptionalQueryFor<TDownloadApi>(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TDownloadApi : IDownloadApi'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadApi
      description: The download api type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadOptionalQueryFor(Of TDownloadApi As IDownloadApi)(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi)(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor(Of TDownloadApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadOptionalQueryFor(Of TDownloadApi)(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, IDictionary<string, object>, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary<string, object>, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadOptionalQuery
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 95
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR for <xref href="Apizr.Transferring.Requesting.IDownloadApi" data-throw-if-not-resolved="false"></xref> with a dictionary query parameters type and optional result
  example: []
  syntax:
    content: public static Task<Option<FileInfo, ApizrException>> SendDownloadOptionalQuery(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, IDictionary<string, object> downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadOptionalQuery(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, downloadParams As IDictionary(Of String, Object), optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Collections.Generic.IDictionary(Of String, Object), System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, IDictionary(Of String, Object), Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadOptionalQuery
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 108
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR for <xref href="Apizr.Transferring.Requesting.IDownloadApi" data-throw-if-not-resolved="false"></xref> with optional result
  example: []
  syntax:
    content: public static Task<Option<FileInfo, ApizrException>> SendDownloadOptionalQuery(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadOptionalQuery(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadOptionalQuery(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadWithOptionalQuery``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,``0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadWithOptionalQuery<TDownloadParams>(IApizrOptionalMediator, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery<TDownloadParams>(IApizrOptionalMediator, FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery<TDownloadParams>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadWithOptionalQuery
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 123
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR with <code class="typeparamref">TDownloadParams</code> and optional result
  example: []
  syntax:
    content: public static Task<Option<FileInfo, ApizrException>> SendDownloadWithOptionalQuery<TDownloadParams>(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, TDownloadParams downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: '{TDownloadParams}'
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadWithOptionalQuery(Of TDownloadParams)(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, downloadParams As TDownloadParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery(Of TDownloadParams)(IApizrOptionalMediator, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery(Of TDownloadParams)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadWithOptionalQuery(Of TDownloadParams)(IApizrOptionalMediator, FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendDownloadWithOptionalQueryWith``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendDownloadWithOptionalQueryWith<TDownloadParams>(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith<TDownloadParams>(IApizrOptionalMediator, FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith<TDownloadParams>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendDownloadWithOptionalQueryWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 138
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a download query to Apizr using MediatR with <code class="typeparamref">TDownloadParams</code> and optional result
  example: []
  syntax:
    content: public static Task<Option<FileInfo, ApizrException>> SendDownloadWithOptionalQueryWith<TDownloadParams>(this IApizrOptionalMediator apizrMediator, FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TDownloadParams
      description: The query parameters type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendDownloadWithOptionalQueryWith(Of TDownloadParams)(apizrMediator As IApizrOptionalMediator, fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of FileInfo, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith(Of TDownloadParams)(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith(Of TDownloadParams)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendDownloadWithOptionalQueryWith(Of TDownloadParams)(IApizrOptionalMediator, FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommandFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 157
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <code class="typeparamref">TUploadApi</code> from file bytes data with optional result
  example: []
  syntax:
    content: 'public static Task<Option<TUploadApiResultData, ApizrException>> SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(this IApizrOptionalMediator apizrMediator, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    - id: TUploadApiResultData
      description: The upload api result data type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommandFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(apizrMediator As IApizrOptionalMediator, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TUploadApiResultData, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommandFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 173
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <code class="typeparamref">TUploadApi</code> from file stream data with optional result
  example: []
  syntax:
    content: 'public static Task<Option<TUploadApiResultData, ApizrException>> SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(this IApizrOptionalMediator apizrMediator, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    - id: TUploadApiResultData
      description: The upload api result data type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommandFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(apizrMediator As IApizrOptionalMediator, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TUploadApiResultData, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommandFor``2(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommandFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 189
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <code class="typeparamref">TUploadApi</code> from file info data with optional result
  example: []
  syntax:
    content: 'public static Task<Option<TUploadApiResultData, ApizrException>> SendUploadOptionalCommandFor<TUploadApi, TUploadApiResultData>(this IApizrOptionalMediator apizrMediator, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi<TUploadApiResultData>'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    - id: TUploadApiResultData
      description: The upload api result data type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommandFor(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)(apizrMediator As IApizrOptionalMediator, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TUploadApiResultData, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommandFor(Of TUploadApi, TUploadApiResultData)(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommandFor<TUploadApi>(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi>(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommandFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 204
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <code class="typeparamref">TUploadApi</code> from file bytes data with optional result
  example: []
  syntax:
    content: 'public static Task<Option<HttpResponseMessage, ApizrException>> SendUploadOptionalCommandFor<TUploadApi>(this IApizrOptionalMediator apizrMediator, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommandFor(Of TUploadApi As IUploadApi)(apizrMediator As IApizrOptionalMediator, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of HttpResponseMessage, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi)(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommandFor(Of TUploadApi)(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommandFor<TUploadApi>(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi>(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommandFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 219
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <code class="typeparamref">TUploadApi</code> from file stream data with optional result
  example: []
  syntax:
    content: 'public static Task<Option<HttpResponseMessage, ApizrException>> SendUploadOptionalCommandFor<TUploadApi>(this IApizrOptionalMediator apizrMediator, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommandFor(Of TUploadApi As IUploadApi)(apizrMediator As IApizrOptionalMediator, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of HttpResponseMessage, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi)(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommandFor(Of TUploadApi)(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommandFor``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommandFor<TUploadApi>(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi>(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor<TUploadApi>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommandFor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 234
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <code class="typeparamref">TUploadApi</code> from file info data with optional result
  example: []
  syntax:
    content: 'public static Task<Option<HttpResponseMessage, ApizrException>> SendUploadOptionalCommandFor<TUploadApi>(this IApizrOptionalMediator apizrMediator, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null) where TUploadApi : IUploadApi'
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApi
      description: The upload api type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommandFor(Of TUploadApi As IUploadApi)(apizrMediator As IApizrOptionalMediator, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of HttpResponseMessage, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi)(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor(Of TUploadApi)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommandFor(Of TUploadApi)(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommand(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommand
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 248
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <xref href="Apizr.Transferring.Requesting.IUploadApi" data-throw-if-not-resolved="false"></xref> from file bytes data with optional result
  example: []
  syntax:
    content: public static Task<Option<HttpResponseMessage, ApizrException>> SendUploadOptionalCommand(this IApizrOptionalMediator apizrMediator, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommand(apizrMediator As IApizrOptionalMediator, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of HttpResponseMessage, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommand(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommand(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommand
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 261
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <xref href="Apizr.Transferring.Requesting.IUploadApi" data-throw-if-not-resolved="false"></xref> from file stream data with optional result
  example: []
  syntax:
    content: public static Task<Option<HttpResponseMessage, ApizrException>> SendUploadOptionalCommand(this IApizrOptionalMediator apizrMediator, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommand(apizrMediator As IApizrOptionalMediator, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of HttpResponseMessage, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommand(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadOptionalCommand(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadOptionalCommand
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 274
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR for <xref href="Apizr.Transferring.Requesting.IUploadApi" data-throw-if-not-resolved="false"></xref> from file info data with optional result
  example: []
  syntax:
    content: public static Task<Option<HttpResponseMessage, ApizrException>> SendUploadOptionalCommand(this IApizrOptionalMediator apizrMediator, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadOptionalCommand(apizrMediator As IApizrOptionalMediator, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of HttpResponseMessage, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadOptionalCommand(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadWithOptionalCommand<TUploadApiResultData>(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand<TUploadApiResultData>(IApizrOptionalMediator, ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand<TUploadApiResultData>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadWithOptionalCommand
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 288
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR with <code class="typeparamref">TUploadApiResultData</code> from file bytes data with optional result
  example: []
  syntax:
    content: public static Task<Option<TUploadApiResultData, ApizrException>> SendUploadWithOptionalCommand<TUploadApiResultData>(this IApizrOptionalMediator apizrMediator, ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api result data type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadWithOptionalCommand(Of TUploadApiResultData)(apizrMediator As IApizrOptionalMediator, byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TUploadApiResultData, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand(Of TUploadApiResultData)(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand(Of TUploadApiResultData)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadWithOptionalCommand(Of TUploadApiResultData)(IApizrOptionalMediator, ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadWithOptionalCommand<TUploadApiResultData>(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand<TUploadApiResultData>(IApizrOptionalMediator, StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand<TUploadApiResultData>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadWithOptionalCommand
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 302
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR with <code class="typeparamref">TUploadApiResultData</code> from file stream data with optional result
  example: []
  syntax:
    content: public static Task<Option<TUploadApiResultData, ApizrException>> SendUploadWithOptionalCommand<TUploadApiResultData>(this IApizrOptionalMediator apizrMediator, StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api result data type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadWithOptionalCommand(Of TUploadApiResultData)(apizrMediator As IApizrOptionalMediator, streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TUploadApiResultData, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand(Of TUploadApiResultData)(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand(Of TUploadApiResultData)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadWithOptionalCommand(Of TUploadApiResultData)(IApizrOptionalMediator, StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: SendUploadWithOptionalCommand``1(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExtensionMethod: true
  parent: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions
  langs:
  - csharp
  - vb
  name: SendUploadWithOptionalCommand<TUploadApiResultData>(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand<TUploadApiResultData>(IApizrOptionalMediator, FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand<TUploadApiResultData>(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendUploadWithOptionalCommand
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Extending/ApizrOptionalMediatorFileTransferExtensions.cs
    startLine: 316
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Extending
  summary: Send a upload command to Apizr using MediatR with <code class="typeparamref">TUploadApiResultData</code> from file info data with optional result
  example: []
  syntax:
    content: public static Task<Option<TUploadApiResultData, ApizrException>> SendUploadWithOptionalCommand<TUploadApiResultData>(this IApizrOptionalMediator apizrMediator, FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: apizrMediator
      type: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
      description: The extended mediator
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    typeParameters:
    - id: TUploadApiResultData
      description: The upload api result data type
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
      description: ''
    content.vb: Public Shared Function SendUploadWithOptionalCommand(Of TUploadApiResultData)(apizrMediator As IApizrOptionalMediator, fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of [Option](Of TUploadApiResultData, ApizrException))
  overload: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand*
  nameWithType.vb: ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand(Of TUploadApiResultData)(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand(Of TUploadApiResultData)(Apizr.Optional.Requesting.Sending.IApizrOptionalMediator, Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: SendUploadWithOptionalCommand(Of TUploadApiResultData)(IApizrOptionalMediator, FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Optional.Extending
  commentId: N:Apizr.Optional.Extending
  href: Apizr.html
  name: Apizr.Optional.Extending
  nameWithType: Apizr.Optional.Extending
  fullName: Apizr.Optional.Extending
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Extending
    name: Extending
    href: Apizr.Optional.Extending.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Extending
    name: Extending
    href: Apizr.Optional.Extending.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor*
  commentId: Overload:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor
  href: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.html#Apizr_Optional_Extending_ApizrOptionalMediatorFileTransferExtensions_SendDownloadOptionalQueryFor__2_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator_System_IO_FileInfo___1_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendDownloadOptionalQueryFor
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQueryFor
- uid: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  commentId: T:Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
  parent: Apizr.Optional.Requesting.Sending
  href: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator.html
  name: IApizrOptionalMediator
  nameWithType: IApizrOptionalMediator
  fullName: Apizr.Optional.Requesting.Sending.IApizrOptionalMediator
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: '{TDownloadParams}'
  commentId: '!:TDownloadParams'
  definition: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    href: Apizr.Configuring.Request.IApizrRequestOptionsBuilder.html
  - name: )
- uid: System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{System.IO.FileInfo,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<FileInfo, ApizrException>>
  nameWithType: Task<Option<FileInfo, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<System.IO.FileInfo, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of FileInfo, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of System.IO.FileInfo, Apizr.ApizrException))
  name.vb: Task(Of Option(Of FileInfo, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.FileInfo
    name: FileInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
  - name: )
  - name: )
- uid: Apizr.Optional.Requesting.Sending
  commentId: N:Apizr.Optional.Requesting.Sending
  href: Apizr.html
  name: Apizr.Optional.Requesting.Sending
  nameWithType: Apizr.Optional.Requesting.Sending
  fullName: Apizr.Optional.Requesting.Sending
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Requesting
    name: Requesting
    href: Apizr.Optional.Requesting.html
  - name: .
  - uid: Apizr.Optional.Requesting.Sending
    name: Sending
    href: Apizr.Optional.Requesting.Sending.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Requesting
    name: Requesting
    href: Apizr.Optional.Requesting.html
  - name: .
  - uid: Apizr.Optional.Requesting.Sending
    name: Sending
    href: Apizr.Optional.Requesting.Sending.html
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Apizr.Transferring.Requesting.IDownloadApi
  commentId: T:Apizr.Transferring.Requesting.IDownloadApi
  href: Apizr.Transferring.Requesting.IDownloadApi.html
  name: IDownloadApi
  nameWithType: IDownloadApi
  fullName: Apizr.Transferring.Requesting.IDownloadApi
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery*
  commentId: Overload:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery
  href: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.html#Apizr_Optional_Extending_ApizrOptionalMediatorFileTransferExtensions_SendDownloadOptionalQuery_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator_System_IO_FileInfo_System_Collections_Generic_IDictionary_System_String_System_Object__System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendDownloadOptionalQuery
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadOptionalQuery
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery*
  commentId: Overload:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery
  href: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.html#Apizr_Optional_Extending_ApizrOptionalMediatorFileTransferExtensions_SendDownloadWithOptionalQuery__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator_System_IO_FileInfo___0_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendDownloadWithOptionalQuery
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQuery
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith*
  commentId: Overload:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith
  href: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.html#Apizr_Optional_Extending_ApizrOptionalMediatorFileTransferExtensions_SendDownloadWithOptionalQueryWith__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator_System_IO_FileInfo_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendDownloadWithOptionalQueryWith
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendDownloadWithOptionalQueryWith
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor*
  commentId: Overload:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor
  href: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.html#Apizr_Optional_Extending_ApizrOptionalMediatorFileTransferExtensions_SendUploadOptionalCommandFor__2_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator_Refit_ByteArrayPart_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendUploadOptionalCommandFor
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommandFor
- uid: Refit.ByteArrayPart
  commentId: T:Refit.ByteArrayPart
  parent: Refit
  isExternal: true
  name: ByteArrayPart
  nameWithType: ByteArrayPart
  fullName: Refit.ByteArrayPart
- uid: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``1,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<TUploadApiResultData, ApizrException>>
  nameWithType: Task<Option<TUploadApiResultData, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TUploadApiResultData, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TUploadApiResultData, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TUploadApiResultData, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TUploadApiResultData, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - name: TUploadApiResultData
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TUploadApiResultData
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
  - name: )
  - name: )
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
- uid: Refit.StreamPart
  commentId: T:Refit.StreamPart
  parent: Refit
  isExternal: true
  name: StreamPart
  nameWithType: StreamPart
  fullName: Refit.StreamPart
- uid: Refit.FileInfoPart
  commentId: T:Refit.FileInfoPart
  parent: Refit
  isExternal: true
  name: FileInfoPart
  nameWithType: FileInfoPart
  fullName: Refit.FileInfoPart
- uid: System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{System.Net.Http.HttpResponseMessage,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Option<HttpResponseMessage, ApizrException>>
  nameWithType: Task<Option<HttpResponseMessage, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<System.Net.Http.HttpResponseMessage, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of HttpResponseMessage, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of System.Net.Http.HttpResponseMessage, Apizr.ApizrException))
  name.vb: Task(Of Option(Of HttpResponseMessage, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
  - name: )
  - name: )
- uid: Apizr.Transferring.Requesting.IUploadApi
  commentId: T:Apizr.Transferring.Requesting.IUploadApi
  href: Apizr.Transferring.Requesting.IUploadApi.html
  name: IUploadApi
  nameWithType: IUploadApi
  fullName: Apizr.Transferring.Requesting.IUploadApi
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand*
  commentId: Overload:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand
  href: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.html#Apizr_Optional_Extending_ApizrOptionalMediatorFileTransferExtensions_SendUploadOptionalCommand_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator_Refit_ByteArrayPart_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendUploadOptionalCommand
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadOptionalCommand
- uid: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand*
  commentId: Overload:Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand
  href: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.html#Apizr_Optional_Extending_ApizrOptionalMediatorFileTransferExtensions_SendUploadWithOptionalCommand__1_Apizr_Optional_Requesting_Sending_IApizrOptionalMediator_Refit_ByteArrayPart_System_Action_Apizr_Configuring_Request_IApizrRequestOptionsBuilder__
  name: SendUploadWithOptionalCommand
  nameWithType: ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand
  fullName: Apizr.Optional.Extending.ApizrOptionalMediatorFileTransferExtensions.SendUploadWithOptionalCommand
