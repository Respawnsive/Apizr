### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3
  commentId: T:Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3
  id: ExecuteOptionalUnitRequestBase`3
  parent: Apizr.Optional.Requesting.Base
  children:
  - Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{`2})
  - Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`1,`0,System.Threading.Tasks.Task}},System.Action{`2})
  langs:
  - csharp
  - vb
  name: ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  type: Class
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Base/ExecuteOptionalUnitRequestBase.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteOptionalUnitRequestBase
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Base/ExecuteOptionalUnitRequestBase.cs
    startLine: 52
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Base
  summary: The top level base mediation execute optional unit request (returning no result)
  example: []
  syntax:
    content: 'public abstract class ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder> : ExecuteUnitRequestBase<TWebApi, Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>, IRequest<Option<Unit, ApizrException>>, IBaseRequest where TApizrRequestOptions : IApizrRequestOptions where TApizrRequestOptionsBuilder : IApizrRequestOptionsBuilder<TApizrRequestOptions, TApizrRequestOptionsBuilder>'
    typeParameters:
    - id: TWebApi
      description: The web api type
    - id: TApizrRequestOptions
      description: Options provided to the request
    - id: TApizrRequestOptionsBuilder
      description: The request options builder
    content.vb: Public MustInherit Class ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions As IApizrRequestOptions, TApizrRequestOptionsBuilder As IApizrRequestOptionsBuilder(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)) Inherits ExecuteUnitRequestBase(Of TWebApi, Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder) Implements IRequest(Of Option(Of Unit, ApizrException)), IBaseRequest
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  - Apizr.Mediation.Requesting.Base.ExecuteRequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  - Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase{{TWebApi},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  derivedClasses:
  - Apizr.Optional.Requesting.ExecuteOptionalUnitRequest`1
  implements:
  - MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  - MediatR.IBaseRequest
  inheritedMembers:
  - Apizr.Mediation.Requesting.Base.ExecuteRequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.ExecuteApiMethod
  - Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.OptionsBuilder
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder)
- uid: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{`2})
  commentId: M:Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{`2})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}},System.Action{`2})'
  parent: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3
  langs:
  - csharp
  - vb
  name: ExecuteOptionalUnitRequestBase(Expression<Func<TWebApi, Task>>, Action<TApizrRequestOptionsBuilder>)
  nameWithType: ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestBase(Expression<Func<TWebApi, Task>>, Action<TApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestBase(System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>, System.Action<TApizrRequestOptionsBuilder>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Base/ExecuteOptionalUnitRequestBase.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Base/ExecuteOptionalUnitRequestBase.cs
    startLine: 61
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Base
  summary: The top level base mediation execute optional unit request constructor
  example: []
  syntax:
    content: protected ExecuteOptionalUnitRequestBase(Expression<Func<TWebApi, Task>> executeApiMethod, Action<TApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
      description: The request to execute
    - id: optionsBuilder
      type: System.Action{{TApizrRequestOptionsBuilder}}
      description: Options provided to the request
    content.vb: Protected Sub New(executeApiMethod As Expression(Of Func(Of TWebApi, Task)), optionsBuilder As Action(Of TApizrRequestOptionsBuilder) = Nothing)
  overload: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor*
  nameWithType.vb: ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder).New(Expression(Of Func(Of TWebApi, Task)), Action(Of TApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder).New(System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task)), System.Action(Of TApizrRequestOptionsBuilder))
  name.vb: New(Expression(Of Func(Of TWebApi, Task)), Action(Of TApizrRequestOptionsBuilder))
- uid: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`1,`0,System.Threading.Tasks.Task}},System.Action{`2})
  commentId: M:Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor(System.Linq.Expressions.Expression{System.Func{`1,`0,System.Threading.Tasks.Task}},System.Action{`2})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{`1,`0,System.Threading.Tasks.Task}},System.Action{`2})'
  parent: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3
  langs:
  - csharp
  - vb
  name: ExecuteOptionalUnitRequestBase(Expression<Func<TApizrRequestOptions, TWebApi, Task>>, Action<TApizrRequestOptionsBuilder>)
  nameWithType: ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestBase(Expression<Func<TApizrRequestOptions, TWebApi, Task>>, Action<TApizrRequestOptionsBuilder>)
  fullName: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestBase(System.Linq.Expressions.Expression<System.Func<TApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>, System.Action<TApizrRequestOptionsBuilder>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Base/ExecuteOptionalUnitRequestBase.cs
      branch: feat/response
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Base/ExecuteOptionalUnitRequestBase.cs
    startLine: 70
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Base
  summary: The top level base mediation execute optional unit request constructor
  example: []
  syntax:
    content: protected ExecuteOptionalUnitRequestBase(Expression<Func<TApizrRequestOptions, TWebApi, Task>> executeApiMethod, Action<TApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: executeApiMethod
      type: System.Linq.Expressions.Expression{System.Func{{TApizrRequestOptions},{TWebApi},System.Threading.Tasks.Task}}
      description: The request to execute
    - id: optionsBuilder
      type: System.Action{{TApizrRequestOptionsBuilder}}
      description: Options provided to the request
    content.vb: Protected Sub New(executeApiMethod As Expression(Of Func(Of TApizrRequestOptions, TWebApi, Task)), optionsBuilder As Action(Of TApizrRequestOptionsBuilder) = Nothing)
  overload: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor*
  nameWithType.vb: ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder).New(Expression(Of Func(Of TApizrRequestOptions, TWebApi, Task)), Action(Of TApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder).New(System.Linq.Expressions.Expression(Of System.Func(Of TApizrRequestOptions, TWebApi, System.Threading.Tasks.Task)), System.Action(Of TApizrRequestOptionsBuilder))
  name.vb: New(Expression(Of Func(Of TApizrRequestOptions, TWebApi, Task)), Action(Of TApizrRequestOptionsBuilder))
references:
- uid: Apizr.Optional.Requesting.Base
  commentId: N:Apizr.Optional.Requesting.Base
  href: Apizr.html
  name: Apizr.Optional.Requesting.Base
  nameWithType: Apizr.Optional.Requesting.Base
  fullName: Apizr.Optional.Requesting.Base
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Requesting
    name: Requesting
    href: Apizr.Optional.Requesting.html
  - name: .
  - uid: Apizr.Optional.Requesting.Base
    name: Base
    href: Apizr.Optional.Requesting.Base.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Optional
    name: Optional
    href: Apizr.Optional.html
  - name: .
  - uid: Apizr.Optional.Requesting
    name: Requesting
    href: Apizr.Optional.Requesting.html
  - name: .
  - uid: Apizr.Optional.Requesting.Base
    name: Base
    href: Apizr.Optional.Requesting.Base.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},`3,`4}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.RequestBase`3
  href: Apizr.Mediation.Requesting.Base.RequestBase-3.html
  name: RequestBase<Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestBase<Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestBase(Of Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestBase(Of Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    href: Apizr.Mediation.Requesting.Base.RequestBase-3.html
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: '>'
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    href: Apizr.Mediation.Requesting.Base.RequestBase-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: )
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: )
- uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  commentId: T:Apizr.Mediation.Requesting.Base.ExecuteRequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},`3,`4}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3
  href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html
  name: ExecuteRequestBase<Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteRequestBase<Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.ExecuteRequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteRequestBase(Of Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.ExecuteRequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteRequestBase(Of Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3
    name: ExecuteRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: '>'
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3
    name: ExecuteRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: )
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: )
- uid: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase{{TWebApi},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  commentId: T:Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase{`0,Optional.Option{MediatR.Unit,Apizr.ApizrException},`1,`2}
  parent: Apizr.Mediation.Requesting.Base
  definition: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase`4
  href: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase-4.html
  name: ExecuteUnitRequestBase<TWebApi, Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteUnitRequestBase<TWebApi, Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase<TWebApi, Optional.Option<MediatR.Unit, Apizr.ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteUnitRequestBase(Of TWebApi, Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase(Of TWebApi, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteUnitRequestBase(Of TWebApi, Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase`4
    name: ExecuteUnitRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase-4.html
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: '>'
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase`4
    name: ExecuteUnitRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: )
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: )
- uid: MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:MediatR.IRequest{Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: MediatR
  definition: MediatR.IRequest`1
  href: Apizr.ApizrException.html
  name: IRequest<Option<Unit, ApizrException>>
  nameWithType: IRequest<Option<Unit, ApizrException>>
  fullName: MediatR.IRequest<Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IRequest(Of Option(Of Unit, ApizrException))
  fullName.vb: MediatR.IRequest(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IRequest(Of Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    isExternal: true
  - name: <
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: <
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Optional.Option`2
    name: Option
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MediatR.Unit
    name: Unit
    isExternal: true
  - name: ','
  - name: " "
  - uid: Apizr.ApizrException
    name: ApizrException
    href: Apizr.ApizrException.html
  - name: )
  - name: )
- uid: MediatR.IBaseRequest
  commentId: T:MediatR.IBaseRequest
  parent: MediatR
  isExternal: true
  name: IBaseRequest
  nameWithType: IBaseRequest
  fullName: MediatR.IBaseRequest
- uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.ExecuteApiMethod
  commentId: P:Apizr.Mediation.Requesting.Base.ExecuteRequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},`3,`4}.ExecuteApiMethod
  parent: Apizr.Mediation.Requesting.Base.ExecuteRequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  definition: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3.ExecuteApiMethod
  href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html#Apizr_Mediation_Requesting_Base_ExecuteRequestBase_3_ExecuteApiMethod
  name: ExecuteApiMethod
  nameWithType: ExecuteRequestBase<Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteApiMethod
  fullName: Apizr.Mediation.Requesting.Base.ExecuteRequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteApiMethod
  nameWithType.vb: ExecuteRequestBase(Of Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteApiMethod
  fullName.vb: Apizr.Mediation.Requesting.Base.ExecuteRequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteApiMethod
- uid: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.OptionsBuilder
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},`3,`4}.OptionsBuilder
  parent: Apizr.Mediation.Requesting.Base.RequestBase{Optional.Option{MediatR.Unit,Apizr.ApizrException},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  definition: Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  href: Apizr.Mediation.Requesting.Base.RequestBase-3.html#Apizr_Mediation_Requesting_Base_RequestBase_3_OptionsBuilder
  name: OptionsBuilder
  nameWithType: RequestBase<Option<Unit, ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<Optional.Option<MediatR.Unit, Apizr.ApizrException>, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  nameWithType.vb: RequestBase(Of Option(Of Unit, ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Base.RequestBase`3
  commentId: T:Apizr.Mediation.Requesting.Base.RequestBase`3
  href: Apizr.Mediation.Requesting.Base.RequestBase-3.html
  name: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    href: Apizr.Mediation.Requesting.Base.RequestBase-3.html
  - name: <
  - name: TFormattedModelResultData
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.RequestBase`3
    name: RequestBase
    href: Apizr.Mediation.Requesting.Base.RequestBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TFormattedModelResultData
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: )
- uid: Apizr.Mediation.Requesting.Base
  commentId: N:Apizr.Mediation.Requesting.Base
  href: Apizr.html
  name: Apizr.Mediation.Requesting.Base
  nameWithType: Apizr.Mediation.Requesting.Base
  fullName: Apizr.Mediation.Requesting.Base
  spec.csharp:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Mediation
    name: Mediation
    href: Apizr.Mediation.html
  - name: .
  - uid: Apizr.Mediation.Requesting
    name: Requesting
    href: Apizr.Mediation.Requesting.html
  - name: .
  - uid: Apizr.Mediation.Requesting.Base
    name: Base
    href: Apizr.Mediation.Requesting.Base.html
  spec.vb:
  - uid: Apizr
    name: Apizr
    href: Apizr.html
  - name: .
  - uid: Apizr.Mediation
    name: Mediation
    href: Apizr.Mediation.html
  - name: .
  - uid: Apizr.Mediation.Requesting
    name: Requesting
    href: Apizr.Mediation.Requesting.html
  - name: .
  - uid: Apizr.Mediation.Requesting.Base
    name: Base
    href: Apizr.Mediation.Requesting.Base.html
- uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3
  commentId: T:Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3
  href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html
  name: ExecuteRequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteRequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.ExecuteRequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteRequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.ExecuteRequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteRequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3
    name: ExecuteRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html
  - name: <
  - name: TFormattedModelResultData
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3
    name: ExecuteRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TFormattedModelResultData
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: )
- uid: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase`4
  commentId: T:Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase`4
  href: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase-4.html
  name: ExecuteUnitRequestBase<TWebApi, TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteUnitRequestBase<TWebApi, TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase<TWebApi, TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteUnitRequestBase(Of TWebApi, TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase(Of TWebApi, TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteUnitRequestBase(Of TWebApi, TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase`4
    name: ExecuteUnitRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase-4.html
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TFormattedModelResultData
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase`4
    name: ExecuteUnitRequestBase
    href: Apizr.Mediation.Requesting.Base.ExecuteUnitRequestBase-4.html
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - name: TFormattedModelResultData
  - name: ','
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: )
- uid: MediatR.IRequest`1
  commentId: T:MediatR.IRequest`1
  isExternal: true
  name: IRequest<TResponse>
  nameWithType: IRequest<TResponse>
  fullName: MediatR.IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
  fullName.vb: MediatR.IRequest(Of TResponse)
  name.vb: IRequest(Of TResponse)
  spec.csharp:
  - uid: MediatR.IRequest`1
    name: IRequest
    isExternal: true
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequest`1
    name: IRequest
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3.ExecuteApiMethod
  commentId: P:Apizr.Mediation.Requesting.Base.ExecuteRequestBase`3.ExecuteApiMethod
  href: Apizr.Mediation.Requesting.Base.ExecuteRequestBase-3.html#Apizr_Mediation_Requesting_Base_ExecuteRequestBase_3_ExecuteApiMethod
  name: ExecuteApiMethod
  nameWithType: ExecuteRequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteApiMethod
  fullName: Apizr.Mediation.Requesting.Base.ExecuteRequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteApiMethod
  nameWithType.vb: ExecuteRequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteApiMethod
  fullName.vb: Apizr.Mediation.Requesting.Base.ExecuteRequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteApiMethod
- uid: Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  commentId: P:Apizr.Mediation.Requesting.Base.RequestBase`3.OptionsBuilder
  href: Apizr.Mediation.Requesting.Base.RequestBase-3.html#Apizr_Mediation_Requesting_Base_RequestBase_3_OptionsBuilder
  name: OptionsBuilder
  nameWithType: RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  fullName: Apizr.Mediation.Requesting.Base.RequestBase<TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder>.OptionsBuilder
  nameWithType.vb: RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
  fullName.vb: Apizr.Mediation.Requesting.Base.RequestBase(Of TFormattedModelResultData, TApizrRequestOptions, TApizrRequestOptionsBuilder).OptionsBuilder
- uid: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor*
  commentId: Overload:Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase`3.#ctor
  href: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase-3.html#Apizr_Optional_Requesting_Base_ExecuteOptionalUnitRequestBase_3__ctor_System_Linq_Expressions_Expression_System_Func__0_System_Threading_Tasks_Task___System_Action__2__
  name: ExecuteOptionalUnitRequestBase
  nameWithType: ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestBase
  fullName: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase<TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestBase
  nameWithType.vb: ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder).New
  fullName.vb: Apizr.Optional.Requesting.Base.ExecuteOptionalUnitRequestBase(Of TWebApi, TApizrRequestOptions, TApizrRequestOptionsBuilder).New
  name.vb: New
- uid: System.Linq.Expressions.Expression{System.Func{{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TWebApi, Task>>
  nameWithType: Expression<Func<TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: )
- uid: System.Action{{TApizrRequestOptionsBuilder}}
  commentId: T:System.Action{`5}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<TApizrRequestOptionsBuilder>
  nameWithType: Action<TApizrRequestOptionsBuilder>
  fullName: System.Action<TApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of TApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of TApizrRequestOptionsBuilder)
  name.vb: Action(Of TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TApizrRequestOptionsBuilder
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TApizrRequestOptionsBuilder
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TApizrRequestOptions},{TWebApi},System.Threading.Tasks.Task}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`2,`0,System.Threading.Tasks.Task}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TApizrRequestOptions, TWebApi, Task>>
  nameWithType: Expression<Func<TApizrRequestOptions, TWebApi, Task>>
  fullName: System.Linq.Expressions.Expression<System.Func<TApizrRequestOptions, TWebApi, System.Threading.Tasks.Task>>
  nameWithType.vb: Expression(Of Func(Of TApizrRequestOptions, TWebApi, Task))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TApizrRequestOptions, TWebApi, System.Threading.Tasks.Task))
  name.vb: Expression(Of Func(Of TApizrRequestOptions, TWebApi, Task))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TApizrRequestOptions
  - name: ','
  - name: " "
  - name: TWebApi
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: )
