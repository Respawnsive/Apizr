### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
  commentId: T:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
  id: ExecuteOptionalResultRequestHandlerBase`6
  parent: Apizr.Optional.Requesting.Handling.Base
  children:
  - Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6.#ctor(Apizr.IApizrManager{`0})
  langs:
  - csharp
  - vb
  name: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>
  nameWithType: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>
  type: Class
  source:
    remote:
      path: Apizr/Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalResultRequestHandlerBase.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteOptionalResultRequestHandlerBase
    path: ../../Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalResultRequestHandlerBase.cs
    startLine: 6
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Handling.Base
  syntax:
    content: 'public abstract class ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest> : ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>, IRequestHandler<TRequest, Option<TModelResultData, ApizrException<TModelResultData>>> where TRequest : ExecuteOptionalResultRequestBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>'
    typeParameters:
    - id: TWebApi
    - id: TModelResultData
    - id: TApiResultData
    - id: TApiRequestData
    - id: TModelRequestData
    - id: TRequest
    content.vb: "Public MustInherit Class ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest As ExecuteOptionalResultRequestBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))\n    Inherits ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData,  Option(Of TModelResultData, ApizrException(Of TModelResultData)) ,  TApiRequestData, TModelRequestData, TRequest) \n    Implements IRequestHandler(Of TRequest,  Option(Of TModelResultData, ApizrException(Of TModelResultData)) )"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}
  derivedClasses:
  - Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5
  implements:
  - MediatR.IRequestHandler{{TRequest},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}}}
  inheritedMembers:
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}.WebApiManager
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}.Handle({TRequest},System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  nameWithType.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest)
  name.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest)
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6.#ctor(Apizr.IApizrManager{`0})
  commentId: M:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6.#ctor(Apizr.IApizrManager{`0})
  id: '#ctor(Apizr.IApizrManager{`0})'
  parent: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
  langs:
  - csharp
  - vb
  name: ExecuteOptionalResultRequestHandlerBase(IApizrManager<TWebApi>)
  nameWithType: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>.ExecuteOptionalResultRequestHandlerBase(IApizrManager<TWebApi>)
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>.ExecuteOptionalResultRequestHandlerBase(Apizr.IApizrManager<TWebApi>)
  type: Constructor
  source:
    remote:
      path: Apizr/Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalResultRequestHandlerBase.cs
      branch: lab
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalResultRequestHandlerBase.cs
    startLine: 14
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Handling.Base
  syntax:
    content: protected ExecuteOptionalResultRequestHandlerBase(IApizrManager<TWebApi> webApiManager)
    parameters:
    - id: webApiManager
      type: Apizr.IApizrManager{{TWebApi}}
    content.vb: Protected Sub New(webApiManager As IApizrManager(Of TWebApi))
  overload: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6.#ctor*
  nameWithType.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest).ExecuteOptionalResultRequestHandlerBase(IApizrManager(Of TWebApi))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest).ExecuteOptionalResultRequestHandlerBase(Apizr.IApizrManager(Of TWebApi))
  name.vb: ExecuteOptionalResultRequestHandlerBase(IApizrManager(Of TWebApi))
references:
- uid: Apizr.Optional.Requesting.Handling.Base
  commentId: N:Apizr.Optional.Requesting.Handling.Base
  name: Apizr.Optional.Requesting.Handling.Base
  nameWithType: Apizr.Optional.Requesting.Handling.Base
  fullName: Apizr.Optional.Requesting.Handling.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  parent: Apizr.Mediation.Requesting.Handling.Base
  name: RequestHandlerBase
  nameWithType: RequestHandlerBase
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,Optional.Option{`1,Apizr.ApizrException{`1}},`3,`4,`5}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
  name: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest)
  name.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{{TRequest},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}}}
  commentId: T:MediatR.IRequestHandler{`5,Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<TRequest, Option<TModelResultData, ApizrException<TModelResultData>>>
  nameWithType: IRequestHandler<TRequest, Option<TModelResultData, ApizrException<TModelResultData>>>
  fullName: MediatR.IRequestHandler<TRequest, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>>
  nameWithType.vb: IRequestHandler(Of TRequest, Option(Of TModelResultData, ApizrException(Of TModelResultData)))
  fullName.vb: MediatR.IRequestHandler(Of TRequest, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)))
  name.vb: IRequestHandler(Of TRequest, Option(Of TModelResultData, ApizrException(Of TModelResultData)))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,Optional.Option{`1,Apizr.ApizrException{`1}},`3,`4,`5}.WebApiManager
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>.WebApiManager
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}.Handle({TRequest},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,Optional.Option{`1,Apizr.ApizrException{`1}},`3,`4,`5}.Handle(`5,System.Threading.CancellationToken)
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},{TRequest}}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
  name: Handle(TRequest, CancellationToken)
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>.Handle(TRequest, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest).Handle(TRequest, CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, TRequest>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, TRequest).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  parent: Apizr.Extending.ObjectExtensions
  definition: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  name: ToString(String, String)
  nameWithType: ObjectExtensions.ToString(String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
  name: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest)
  name.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.WebApiManager
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TRequest, CancellationToken)
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle(TRequest, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle(TRequest, CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  commentId: M:Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
  isExternal: true
  name: ToString(Object, String, String)
  nameWithType: ObjectExtensions.ToString(Object, String, String)
  fullName: Apizr.Extending.ObjectExtensions.ToString(System.Object, System.String, System.String)
  spec.csharp:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Extending.ObjectExtensions.ToString(System.Object,System.String,System.String)
    name: ToString
    nameWithType: ObjectExtensions.ToString
    fullName: Apizr.Extending.ObjectExtensions.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Extending.ObjectExtensions
  commentId: T:Apizr.Extending.ObjectExtensions
  parent: Apizr.Extending
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Apizr.Extending.ObjectExtensions
- uid: Apizr.Extending
  commentId: N:Apizr.Extending
  name: Apizr.Extending
  nameWithType: Apizr.Extending
  fullName: Apizr.Extending
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6.#ctor*
  commentId: Overload:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6.#ctor
  name: ExecuteOptionalResultRequestHandlerBase
  nameWithType: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>.ExecuteOptionalResultRequestHandlerBase
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>.ExecuteOptionalResultRequestHandlerBase
  nameWithType.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest).ExecuteOptionalResultRequestHandlerBase
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest).ExecuteOptionalResultRequestHandlerBase
- uid: Apizr.IApizrManager{{TWebApi}}
  commentId: T:Apizr.IApizrManager{``0}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
