### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6
  commentId: T:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6
  id: ExecuteOptionalUnitRequestHandlerBase`6
  parent: Apizr.Optional.Requesting.Handling.Base
  children:
  - Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6.#ctor(Apizr.IApizrManager{`0})
  langs:
  - csharp
  - vb
  name: ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  type: Class
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalUnitRequestHandlerBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: ExecuteOptionalUnitRequestHandlerBase
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalUnitRequestHandlerBase.cs
    startLine: 17
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Handling.Base
  summary: "\nThe top level base mediation execute optional unit request handler\n"
  example: []
  syntax:
    content: 'public abstract class ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder> : ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Option<Unit, ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>, IRequestHandler<TRequest, Option<Unit, ApizrException>> where TRequest : ExecuteOptionalUnitRequestBase<TWebApi, TModelData, TApiData, TApizrRequestOptions, TApizrRequestOptionsBuilder> where TApizrRequestOptions : IApizrRequestOptions where TApizrRequestOptionsBuilder : IApizrRequestOptionsBuilder<TApizrRequestOptions, TApizrRequestOptionsBuilder>'
    typeParameters:
    - id: TWebApi
      description: The web api type
    - id: TModelData
      description: The model data type
    - id: TApiData
      description: The api data type
    - id: TRequest
      description: The execute unit request to handle
    - id: TApizrRequestOptions
      description: Options provided to the request
    - id: TApizrRequestOptionsBuilder
      description: The request options builder
    content.vb: "Public MustInherit Class ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest As ExecuteOptionalUnitRequestBase(Of TWebApi, TModelData, TApiData, TApizrRequestOptions, TApizrRequestOptionsBuilder), TApizrRequestOptions As IApizrRequestOptions, TApizrRequestOptionsBuilder As IApizrRequestOptionsBuilder(Of TApizrRequestOptions, TApizrRequestOptionsBuilder))\n    Inherits ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData,  Option(Of Unit, ApizrException) ,  TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder) \n    Implements IRequestHandler(Of TRequest,  Option(Of Unit, ApizrException) )"
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  derivedClasses:
  - Apizr.Optional.Requesting.Handling.ExecuteOptionalUnitRequestHandler`3
  implements:
  - MediatR.IRequestHandler{{TRequest},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  inheritedMembers:
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.WebApiManager
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.Handle({TRequest},System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6.#ctor(Apizr.IApizrManager{`0})
  commentId: M:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6.#ctor(Apizr.IApizrManager{`0})
  id: '#ctor(Apizr.IApizrManager{`0})'
  parent: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6
  langs:
  - csharp
  - vb
  name: ExecuteOptionalUnitRequestHandlerBase(IApizrManager<TWebApi>)
  nameWithType: ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestHandlerBase(IApizrManager<TWebApi>)
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestHandlerBase(Apizr.IApizrManager<TWebApi>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalUnitRequestHandlerBase.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Handling/Apizr.Integrations.Optional/Optional/Requesting/Handling/Base/ExecuteOptionalUnitRequestHandlerBase.cs
    startLine: 23
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Handling.Base
  syntax:
    content: protected ExecuteOptionalUnitRequestHandlerBase(IApizrManager<TWebApi> webApiManager)
    parameters:
    - id: webApiManager
      type: Apizr.IApizrManager{{TWebApi}}
    content.vb: Protected Sub New(webApiManager As IApizrManager(Of TWebApi))
  overload: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6.#ctor*
  nameWithType.vb: ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteOptionalUnitRequestHandlerBase(IApizrManager(Of TWebApi))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteOptionalUnitRequestHandlerBase(Apizr.IApizrManager(Of TWebApi))
  name.vb: ExecuteOptionalUnitRequestHandlerBase(IApizrManager(Of TWebApi))
references:
- uid: Apizr.Optional.Requesting.Handling.Base
  commentId: N:Apizr.Optional.Requesting.Handling.Base
  name: Apizr.Optional.Requesting.Handling.Base
  nameWithType: Apizr.Optional.Requesting.Handling.Base
  fullName: Apizr.Optional.Requesting.Handling.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{`7,`8}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{`0,`1,`2,Optional.Option{MediatR.Unit,Apizr.ApizrException},`3,`4,`5}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7
  name: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Option<Unit, ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Option<Unit, ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Optional.Option<MediatR.Unit, Apizr.ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Option(Of Unit, ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Option(Of Unit, ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7
    name: ExecuteUnitRequestHandlerBase
    nameWithType: ExecuteUnitRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7
    name: ExecuteUnitRequestHandlerBase
    nameWithType: ExecuteUnitRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{{TRequest},Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  commentId: T:MediatR.IRequestHandler{`3,Optional.Option{MediatR.Unit,Apizr.ApizrException}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<TRequest, Option<Unit, ApizrException>>
  nameWithType: IRequestHandler<TRequest, Option<Unit, ApizrException>>
  fullName: MediatR.IRequestHandler<TRequest, Optional.Option<MediatR.Unit, Apizr.ApizrException>>
  nameWithType.vb: IRequestHandler(Of TRequest, Option(Of Unit, ApizrException))
  fullName.vb: MediatR.IRequestHandler(Of TRequest, Optional.Option(Of MediatR.Unit, Apizr.ApizrException))
  name.vb: IRequestHandler(Of TRequest, Option(Of Unit, ApizrException))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MediatR.Unit
    name: Unit
    nameWithType: Unit
    fullName: MediatR.Unit
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{`0,`1,`2,Optional.Option{MediatR.Unit,Apizr.ApizrException},`3,`4,`5}.WebApiManager
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Option<Unit, ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Optional.Option<MediatR.Unit, Apizr.ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.WebApiManager
  nameWithType.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Option(Of Unit, ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}.Handle({TRequest},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{`0,`1,`2,Optional.Option{MediatR.Unit,Apizr.ApizrException},`3,`4,`5}.Handle(`3,System.Threading.CancellationToken)
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase{{TWebApi},{TModelData},{TApiData},Optional.Option{MediatR.Unit,Apizr.ApizrException},{TRequest},{TApizrRequestOptions},{TApizrRequestOptionsBuilder}}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.Handle(`4,System.Threading.CancellationToken)
  name: Handle(TRequest, CancellationToken)
  nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Option<Unit, ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TRequest, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Optional.Option<MediatR.Unit, Apizr.ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Option(Of Unit, ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TRequest, CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Option<Unit, ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, Optional.Option<MediatR.Unit, Apizr.ApizrException>, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Option(Of Unit, ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, Optional.Option(Of MediatR.Unit, Apizr.ApizrException), TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7
  name: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7
    name: ExecuteUnitRequestHandlerBase
    nameWithType: ExecuteUnitRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7
    name: ExecuteUnitRequestHandlerBase
    nameWithType: ExecuteUnitRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelData
    nameWithType: TModelData
    fullName: TModelData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiData
    nameWithType: TApiData
    fullName: TApiData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.WebApiManager
  nameWithType.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.Handle(`4,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.Handle(`4,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TRequest, CancellationToken)
  nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TRequest, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TRequest, CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase`7.Handle(`4,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TFormattedModelResultData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6.#ctor*
  commentId: Overload:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase`6.#ctor
  name: ExecuteOptionalUnitRequestHandlerBase
  nameWithType: ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestHandlerBase
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase<TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder>.ExecuteOptionalUnitRequestHandlerBase
  nameWithType.vb: ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteOptionalUnitRequestHandlerBase
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalUnitRequestHandlerBase(Of TWebApi, TModelData, TApiData, TRequest, TApizrRequestOptions, TApizrRequestOptionsBuilder).ExecuteOptionalUnitRequestHandlerBase
- uid: Apizr.IApizrManager{{TWebApi}}
  commentId: T:Apizr.IApizrManager{``0}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
