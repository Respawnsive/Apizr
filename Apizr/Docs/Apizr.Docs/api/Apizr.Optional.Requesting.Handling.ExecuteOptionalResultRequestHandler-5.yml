### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5
  commentId: T:Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5
  id: ExecuteOptionalResultRequestHandler`5
  parent: Apizr.Optional.Requesting.Handling
  children:
  - Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.#ctor(Apizr.IApizrManager{`0})
  - Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType: ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  fullName: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  type: Class
  source:
    id: ExecuteOptionalResultRequestHandler
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Requesting\Handling\ExecuteOptionalResultRequestHandler.cs
    startLine: 12
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Handling
  syntax:
    content: 'public class ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData> : ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>, IRequestHandler<ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Option<TModelResultData, ApizrException<TModelResultData>>>'
    typeParameters:
    - id: TWebApi
    - id: TModelResultData
    - id: TApiResultData
    - id: TApiRequestData
    - id: TModelRequestData
    content.vb: >-
      Public Class ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
          Inherits ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))
          Implements IRequestHandler(Of ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData),  Option(Of TModelResultData, ApizrException(Of TModelResultData)) )
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}
  - Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}
  implements:
  - MediatR.IRequestHandler{Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}}}
  inheritedMembers:
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}.WebApiManager
  - Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  name.vb: ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
- uid: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.#ctor(Apizr.IApizrManager{`0})
  commentId: M:Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.#ctor(Apizr.IApizrManager{`0})
  id: '#ctor(Apizr.IApizrManager{`0})'
  parent: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5
  langs:
  - csharp
  - vb
  name: ExecuteOptionalResultRequestHandler(IApizrManager<TWebApi>)
  nameWithType: ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteOptionalResultRequestHandler(IApizrManager<TWebApi>)
  fullName: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteOptionalResultRequestHandler(Apizr.IApizrManager<TWebApi>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Requesting\Handling\ExecuteOptionalResultRequestHandler.cs
    startLine: 16
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Handling
  syntax:
    content: public ExecuteOptionalResultRequestHandler(IApizrManager<TWebApi> webApiManager)
    parameters:
    - id: webApiManager
      type: Apizr.IApizrManager{{TWebApi}}
    content.vb: Public Sub New(webApiManager As IApizrManager(Of TWebApi))
  overload: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.#ctor*
  nameWithType.vb: ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteOptionalResultRequestHandler(IApizrManager(Of TWebApi))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteOptionalResultRequestHandler(Apizr.IApizrManager(Of TWebApi))
  name.vb: ExecuteOptionalResultRequestHandler(IApizrManager(Of TWebApi))
- uid: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  id: Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  parent: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5
  langs:
  - csharp
  - vb
  name: Handle(ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  nameWithType: ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle(ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  fullName: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Handle
    path: C:\Dev\Community\Apizr\Apizr\Apizr.Integrations.Optional\Optional\Requesting\Handling\ExecuteOptionalResultRequestHandler.cs
    startLine: 21
  assemblies:
  - Apizr.Integrations.Optional
  namespace: Apizr.Optional.Requesting.Handling
  syntax:
    content: public override async Task<Option<TModelResultData, ApizrException<TModelResultData>>> Handle(ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}}}
    content.vb: Public Overrides Function Handle(request As ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), cancellationToken As CancellationToken) As Task(Of  Option(Of TModelResultData, ApizrException(Of TModelResultData))
  overridden: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},System.Threading.CancellationToken)
  overload: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.Handle*
  nameWithType.vb: ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle(ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), System.Threading.CancellationToken)
  name.vb: Handle(ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
references:
- uid: Apizr.Optional.Requesting.Handling
  commentId: N:Apizr.Optional.Requesting.Handling
  name: Apizr.Optional.Requesting.Handling
  nameWithType: Apizr.Optional.Requesting.Handling
  fullName: Apizr.Optional.Requesting.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  parent: Apizr.Mediation.Requesting.Handling.Base
  name: RequestHandlerBase
  nameWithType: RequestHandlerBase
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,Optional.Option{`1,Apizr.ApizrException{`1}},`3,`4,Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4}}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
  name: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))
  name.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}
  commentId: T:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase{`0,`1,`2,`3,`4,Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4}}
  parent: Apizr.Optional.Requesting.Handling.Base
  definition: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
  name: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>
  nameWithType: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>
  nameWithType.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))
  name.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData))
  spec.csharp:
  - uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
    name: ExecuteOptionalResultRequestHandlerBase
    nameWithType: ExecuteOptionalResultRequestHandlerBase
    fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
    name: ExecuteOptionalResultRequestHandlerBase
    nameWithType: ExecuteOptionalResultRequestHandlerBase
    fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}}}
  commentId: T:MediatR.IRequestHandler{Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4},Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Option<TModelResultData, ApizrException<TModelResultData>>>
  nameWithType: IRequestHandler<ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Option<TModelResultData, ApizrException<TModelResultData>>>
  fullName: MediatR.IRequestHandler<Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>>
  nameWithType.vb: IRequestHandler(Of ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), Option(Of TModelResultData, ApizrException(Of TModelResultData)))
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)))
  name.vb: IRequestHandler(Of ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), Option(Of TModelResultData, ApizrException(Of TModelResultData)))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,Optional.Option{`1,Apizr.ApizrException{`1}},`3,`4,Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4}}.WebApiManager
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>.WebApiManager
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}},System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{`0,`1,`2,Optional.Option{`1,Apizr.ApizrException{`1}},`3,`4,Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4}}.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4},System.Threading.CancellationToken)
  parent: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase{{TWebApi},{TModelResultData},{TApiResultData},Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}},{TApiRequestData},{TModelRequestData},Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}}
  definition: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
  name: Handle(ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>.Handle(ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>.Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)).Handle(ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)).Handle(Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), System.Threading.CancellationToken)
  name.vb: Handle(ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData), CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Option<TModelResultData, ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>, TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Option(Of TModelResultData, ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)), TApiRequestData, TModelRequestData, Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
  name: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest)
  name.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7
    name: ExecuteResultRequestHandlerBase
    nameWithType: ExecuteResultRequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFormattedModelResultData
    nameWithType: TFormattedModelResultData
    fullName: TFormattedModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
  commentId: T:Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
  name: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>
  nameWithType: ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>
  fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest>
  nameWithType.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest)
  fullName.vb: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest)
  name.vb: ExecuteOptionalResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData, TRequest)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
    name: ExecuteOptionalResultRequestHandlerBase
    nameWithType: ExecuteOptionalResultRequestHandlerBase
    fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase`6
    name: ExecuteOptionalResultRequestHandlerBase
    nameWithType: ExecuteOptionalResultRequestHandlerBase
    fullName: Apizr.Optional.Requesting.Handling.Base.ExecuteOptionalResultRequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Handling.Base
  commentId: N:Apizr.Optional.Requesting.Handling.Base
  name: Apizr.Optional.Requesting.Handling.Base
  nameWithType: Apizr.Optional.Requesting.Handling.Base
  fullName: Apizr.Optional.Requesting.Handling.Base
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.WebApiManager
  commentId: F:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.WebApiManager
  name: WebApiManager
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.WebApiManager
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.WebApiManager
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).WebApiManager
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).WebApiManager
- uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
  commentId: M:Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TRequest, CancellationToken)
  nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle(TRequest, CancellationToken)
  fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle(TRequest, CancellationToken)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase<TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase`7.Handle(`6,System.Threading.CancellationToken)
    name: Handle
    nameWithType: ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle
    fullName: Apizr.Mediation.Requesting.Handling.Base.ExecuteResultRequestHandlerBase(Of TWebApi, TModelResultData, TApiResultData, TFormattedModelResultData, TApiRequestData, TModelRequestData, TRequest).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.#ctor*
  commentId: Overload:Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.#ctor
  name: ExecuteOptionalResultRequestHandler
  nameWithType: ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteOptionalResultRequestHandler
  fullName: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.ExecuteOptionalResultRequestHandler
  nameWithType.vb: ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteOptionalResultRequestHandler
  fullName.vb: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).ExecuteOptionalResultRequestHandler
- uid: Apizr.IApizrManager{{TWebApi}}
  commentId: T:Apizr.IApizrManager{``0}
  parent: Apizr
  definition: Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager`1
  commentId: T:Apizr.IApizrManager`1
  name: IApizrManager<TWebApi>
  nameWithType: IApizrManager<TWebApi>
  fullName: Apizr.IApizrManager<TWebApi>
  nameWithType.vb: IApizrManager(Of TWebApi)
  fullName.vb: Apizr.IApizrManager(Of TWebApi)
  name.vb: IApizrManager(Of TWebApi)
  spec.csharp:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.IApizrManager`1
    name: IApizrManager
    nameWithType: IApizrManager
    fullName: Apizr.IApizrManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.Handle*
  commentId: Overload:Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler`5.Handle
  name: Handle
  nameWithType: ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle
  fullName: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>.Handle
  nameWithType.vb: ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle
  fullName.vb: Apizr.Optional.Requesting.Handling.ExecuteOptionalResultRequestHandler(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData).Handle
- uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest{{TWebApi},{TModelResultData},{TApiResultData},{TApiRequestData},{TModelRequestData}}
  commentId: T:Apizr.Optional.Requesting.ExecuteOptionalResultRequest{`0,`1,`2,`3,`4}
  parent: Apizr.Optional.Requesting
  definition: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
  name: ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType: ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType.vb: ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  fullName.vb: Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  name.vb: ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Optional.Option{{TModelResultData},Apizr.ApizrException{{TModelResultData}}}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{`1,Apizr.ApizrException{`1}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TModelResultData, ApizrException<TModelResultData>>>
  nameWithType: Task<Option<TModelResultData, ApizrException<TModelResultData>>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TModelResultData, Apizr.ApizrException<TModelResultData>>>
  nameWithType.vb: Task(Of Option(Of TModelResultData, ApizrException(Of TModelResultData)))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TModelResultData, Apizr.ApizrException(Of TModelResultData)))
  name.vb: Task(Of Option(Of TModelResultData, ApizrException(Of TModelResultData)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: <
    nameWithType: <
    fullName: <
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException`1
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
  commentId: T:Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
  name: ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType: ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest<TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData>
  nameWithType.vb: ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  fullName.vb: Apizr.Optional.Requesting.ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  name.vb: ExecuteOptionalResultRequest(Of TWebApi, TModelResultData, TApiResultData, TApiRequestData, TModelRequestData)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.ExecuteOptionalResultRequest`5
    name: ExecuteOptionalResultRequest
    nameWithType: ExecuteOptionalResultRequest
    fullName: Apizr.Optional.Requesting.ExecuteOptionalResultRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWebApi
    nameWithType: TWebApi
    fullName: TWebApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelResultData
    nameWithType: TModelResultData
    fullName: TModelResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiResultData
    nameWithType: TApiResultData
    fullName: TApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApiRequestData
    nameWithType: TApiRequestData
    fullName: TApiRequestData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModelRequestData
    nameWithType: TModelRequestData
    fullName: TModelRequestData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting
  commentId: N:Apizr.Optional.Requesting
  name: Apizr.Optional.Requesting
  nameWithType: Apizr.Optional.Requesting
  fullName: Apizr.Optional.Requesting
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
