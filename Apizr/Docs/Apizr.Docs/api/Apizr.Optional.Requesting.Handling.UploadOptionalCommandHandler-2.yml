### YamlMime:ManagedReference
items:
- uid: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2
  commentId: T:Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2
  id: UploadOptionalCommandHandler`2
  parent: Apizr.Optional.Requesting.Handling
  children:
  - Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.#ctor(Apizr.Transferring.Managing.IApizrUploadManager{`0,`1})
  - Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.Handle(Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>
  nameWithType: UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>
  type: Class
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Requesting/Handling/UploadOptionalCommandHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadOptionalCommandHandler
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Requesting/Handling/UploadOptionalCommandHandler.cs
    startLine: 15
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Requesting.Handling
  syntax:
    content: 'public class UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData> : RequestHandlerBase<IApizrRequestOptions, IApizrRequestOptionsBuilder>, IRequestHandler<UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Option<TUploadApiResultData, ApizrException>> where TUploadApi : IUploadApi<TUploadApiResultData>'
    typeParameters:
    - id: TUploadApi
    - id: TUploadApiResultData
    content.vb: >-
      Public Class UploadOptionalCommandHandler(Of TUploadApi As IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
          Inherits RequestHandlerBase(Of IApizrRequestOptions, IApizrRequestOptionsBuilder)
          Implements IRequestHandler(Of UploadOptionalCommand(Of TUploadApi, TUploadApiResultData),  Option(Of TUploadApiResultData, ApizrException) )
  inheritance:
  - System.Object
  - Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  implements:
  - MediatR.IRequestHandler{Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}},Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData)
  name.vb: UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData)
- uid: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.#ctor(Apizr.Transferring.Managing.IApizrUploadManager{`0,`1})
  commentId: M:Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.#ctor(Apizr.Transferring.Managing.IApizrUploadManager{`0,`1})
  id: '#ctor(Apizr.Transferring.Managing.IApizrUploadManager{`0,`1})'
  parent: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2
  langs:
  - csharp
  - vb
  name: UploadOptionalCommandHandler(IApizrUploadManager<TUploadApi, TUploadApiResultData>)
  nameWithType: UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.UploadOptionalCommandHandler(IApizrUploadManager<TUploadApi, TUploadApiResultData>)
  fullName: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.UploadOptionalCommandHandler(Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Requesting/Handling/UploadOptionalCommandHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Requesting/Handling/UploadOptionalCommandHandler.cs
    startLine: 21
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Requesting.Handling
  syntax:
    content: public UploadOptionalCommandHandler(IApizrUploadManager<TUploadApi, TUploadApiResultData> uploadManager)
    parameters:
    - id: uploadManager
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi},{TUploadApiResultData}}
    content.vb: Public Sub New(uploadManager As IApizrUploadManager(Of TUploadApi, TUploadApiResultData))
  overload: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.#ctor*
  nameWithType.vb: UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).UploadOptionalCommandHandler(IApizrUploadManager(Of TUploadApi, TUploadApiResultData))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).UploadOptionalCommandHandler(Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData))
  name.vb: UploadOptionalCommandHandler(IApizrUploadManager(Of TUploadApi, TUploadApiResultData))
- uid: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.Handle(Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1},System.Threading.CancellationToken)
  commentId: M:Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.Handle(Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1},System.Threading.CancellationToken)
  id: Handle(Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1},System.Threading.CancellationToken)
  parent: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2
  langs:
  - csharp
  - vb
  name: Handle(UploadOptionalCommand<TUploadApi, TUploadApiResultData>, CancellationToken)
  nameWithType: UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.Handle(UploadOptionalCommand<TUploadApi, TUploadApiResultData>, CancellationToken)
  fullName: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.Handle(Apizr.Optional.Requesting.UploadOptionalCommand<TUploadApi, TUploadApiResultData>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Requesting/Handling/UploadOptionalCommandHandler.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: Handle
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer.Optional/Optional/Requesting/Handling/UploadOptionalCommandHandler.cs
    startLine: 32
  assemblies:
  - Apizr.Integrations.FileTransfer.Optional
  namespace: Apizr.Optional.Requesting.Handling
  summary: "\nHandling the upload optional request\n"
  example: []
  syntax:
    content: public async Task<Option<TUploadApiResultData, ApizrException>> Handle(UploadOptionalCommand<TUploadApi, TUploadApiResultData> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}}
      description: The upload optional request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token
    return:
      type: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
      description: ''
    content.vb: Public Function Handle(request As UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), cancellationToken As CancellationToken) As Task(Of  Option(Of TUploadApiResultData, ApizrException)
  overload: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.Handle*
  implements:
  - MediatR.IRequestHandler{Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}},Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}.Handle(Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}},System.Threading.CancellationToken)
  nameWithType.vb: UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).Handle(UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).Handle(Apizr.Optional.Requesting.UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), System.Threading.CancellationToken)
  name.vb: Handle(UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), CancellationToken)
references:
- uid: Apizr.Optional.Requesting.Handling
  commentId: N:Apizr.Optional.Requesting.Handling
  name: Apizr.Optional.Requesting.Handling
  nameWithType: Apizr.Optional.Requesting.Handling
  fullName: Apizr.Optional.Requesting.Handling
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase{Apizr.Configuring.Request.IApizrRequestOptions,Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: Apizr.Mediation.Requesting.Handling.Base
  definition: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<IApizrRequestOptions, IApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<IApizrRequestOptions, IApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of IApizrRequestOptions, IApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of Apizr.Configuring.Request.IApizrRequestOptions, Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of IApizrRequestOptions, IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptions
    name: IApizrRequestOptions
    nameWithType: IApizrRequestOptions
    fullName: Apizr.Configuring.Request.IApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler{Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}},Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
  commentId: T:MediatR.IRequestHandler{Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1},Optional.Option{`1,Apizr.ApizrException}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  name: IRequestHandler<UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Option<TUploadApiResultData, ApizrException>>
  nameWithType: IRequestHandler<UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Option<TUploadApiResultData, ApizrException>>
  fullName: MediatR.IRequestHandler<Apizr.Optional.Requesting.UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Optional.Option<TUploadApiResultData, Apizr.ApizrException>>
  nameWithType.vb: IRequestHandler(Of UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), Option(Of TUploadApiResultData, ApizrException))
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Optional.Requesting.UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), Optional.Option(Of TUploadApiResultData, Apizr.ApizrException))
  name.vb: IRequestHandler(Of UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), Option(Of TUploadApiResultData, ApizrException))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  commentId: T:Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
  name: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType: RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase<TApizrRequestOptions, TApizrRequestOptionsBuilder>
  nameWithType.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  fullName.vb: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  name.vb: RequestHandlerBase(Of TApizrRequestOptions, TApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase`2
    name: RequestHandlerBase
    nameWithType: RequestHandlerBase
    fullName: Apizr.Mediation.Requesting.Handling.Base.RequestHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TApizrRequestOptions
    nameWithType: TApizrRequestOptions
    fullName: TApizrRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TApizrRequestOptionsBuilder
    nameWithType: TApizrRequestOptionsBuilder
    fullName: TApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Mediation.Requesting.Handling.Base
  commentId: N:Apizr.Mediation.Requesting.Handling.Base
  name: Apizr.Mediation.Requesting.Handling.Base
  nameWithType: Apizr.Mediation.Requesting.Handling.Base
  fullName: Apizr.Mediation.Requesting.Handling.Base
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    nameWithType: IRequestHandler
    fullName: MediatR.IRequestHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.#ctor*
  commentId: Overload:Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.#ctor
  name: UploadOptionalCommandHandler
  nameWithType: UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.UploadOptionalCommandHandler
  fullName: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.UploadOptionalCommandHandler
  nameWithType.vb: UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).UploadOptionalCommandHandler
  fullName.vb: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).UploadOptionalCommandHandler
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TUploadApi},{TUploadApiResultData}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2
  name: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  name.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`2
  name: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  name.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing
  commentId: N:Apizr.Transferring.Managing
  name: Apizr.Transferring.Managing
  nameWithType: Apizr.Transferring.Managing
  fullName: Apizr.Transferring.Managing
- uid: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.Handle*
  commentId: Overload:Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler`2.Handle
  name: Handle
  nameWithType: UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.Handle
  fullName: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler<TUploadApi, TUploadApiResultData>.Handle
  nameWithType.vb: UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).Handle
  fullName.vb: Apizr.Optional.Requesting.Handling.UploadOptionalCommandHandler(Of TUploadApi, TUploadApiResultData).Handle
- uid: MediatR.IRequestHandler{Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}},Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}.Handle(Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}},System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1},Optional.Option{`1,Apizr.ApizrException}}.Handle(Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1},System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}},Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
  definition: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  name: Handle(UploadOptionalCommand<TUploadApi, TUploadApiResultData>, CancellationToken)
  nameWithType: IRequestHandler<UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Option<TUploadApiResultData, ApizrException>>.Handle(UploadOptionalCommand<TUploadApi, TUploadApiResultData>, CancellationToken)
  fullName: MediatR.IRequestHandler<Apizr.Optional.Requesting.UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Optional.Option<TUploadApiResultData, Apizr.ApizrException>>.Handle(Apizr.Optional.Requesting.UploadOptionalCommand<TUploadApi, TUploadApiResultData>, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), Option(Of TUploadApiResultData, ApizrException)).Handle(UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of Apizr.Optional.Requesting.UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), Optional.Option(Of TUploadApiResultData, Apizr.ApizrException)).Handle(Apizr.Optional.Requesting.UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), System.Threading.CancellationToken)
  name.vb: Handle(UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler<UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Option<TUploadApiResultData, ApizrException>>.Handle
    fullName: MediatR.IRequestHandler<Apizr.Optional.Requesting.UploadOptionalCommand<TUploadApi, TUploadApiResultData>, Optional.Option<TUploadApiResultData, Apizr.ApizrException>>.Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler(Of UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), Option(Of TUploadApiResultData, ApizrException)).Handle
    fullName: MediatR.IRequestHandler(Of Apizr.Optional.Requesting.UploadOptionalCommand(Of TUploadApi, TUploadApiResultData), Optional.Option(Of TUploadApiResultData, Apizr.ApizrException)).Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.UploadOptionalCommand{{TUploadApi},{TUploadApiResultData}}
  commentId: T:Apizr.Optional.Requesting.UploadOptionalCommand{`0,`1}
  parent: Apizr.Optional.Requesting
  definition: Apizr.Optional.Requesting.UploadOptionalCommand`2
  name: UploadOptionalCommand<TUploadApi, TUploadApiResultData>
  nameWithType: UploadOptionalCommand<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Optional.Requesting.UploadOptionalCommand<TUploadApi, TUploadApiResultData>
  nameWithType.vb: UploadOptionalCommand(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Optional.Requesting.UploadOptionalCommand(Of TUploadApi, TUploadApiResultData)
  name.vb: UploadOptionalCommand(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Optional.Option{{TUploadApiResultData},Apizr.ApizrException}}
  commentId: T:System.Threading.Tasks.Task{Optional.Option{``1,Apizr.ApizrException}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Option<TUploadApiResultData, ApizrException>>
  nameWithType: Task<Option<TUploadApiResultData, ApizrException>>
  fullName: System.Threading.Tasks.Task<Optional.Option<TUploadApiResultData, Apizr.ApizrException>>
  nameWithType.vb: Task(Of Option(Of TUploadApiResultData, ApizrException))
  fullName.vb: System.Threading.Tasks.Task(Of Optional.Option(Of TUploadApiResultData, Apizr.ApizrException))
  name.vb: Task(Of Option(Of TUploadApiResultData, ApizrException))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Optional.Option`2
    name: Option
    nameWithType: Option
    fullName: Optional.Option
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Apizr.ApizrException
    name: ApizrException
    nameWithType: ApizrException
    fullName: Apizr.ApizrException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler<TRequest, TResponse>.Handle
    fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    nameWithType: IRequestHandler(Of TRequest, TResponse).Handle
    fullName: MediatR.IRequestHandler(Of TRequest, TResponse).Handle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
  commentId: T:Apizr.Optional.Requesting.UploadOptionalCommand`2
  name: UploadOptionalCommand<TUploadApi, TUploadApiResultData>
  nameWithType: UploadOptionalCommand<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Optional.Requesting.UploadOptionalCommand<TUploadApi, TUploadApiResultData>
  nameWithType.vb: UploadOptionalCommand(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Optional.Requesting.UploadOptionalCommand(Of TUploadApi, TUploadApiResultData)
  name.vb: UploadOptionalCommand(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Optional.Requesting.UploadOptionalCommand`2
    name: UploadOptionalCommand
    nameWithType: UploadOptionalCommand
    fullName: Apizr.Optional.Requesting.UploadOptionalCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Optional.Requesting
  commentId: N:Apizr.Optional.Requesting
  name: Apizr.Optional.Requesting
  nameWithType: Apizr.Optional.Requesting
  fullName: Apizr.Optional.Requesting
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
