### YamlMime:ManagedReference
items:
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions
  commentId: T:Apizr.Policing.HttpRequestMessageApizrExtensions
  id: HttpRequestMessageApizrExtensions
  parent: Apizr.Policing
  children:
  - Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  - Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions(System.Net.Http.HttpRequestMessage)
  - Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  - Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  - Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions(System.Net.Http.HttpRequestMessage,Apizr.Configuring.Request.IApizrRequestOptions@)
  langs:
  - csharp
  - vb
  name: HttpRequestMessageApizrExtensions
  nameWithType: HttpRequestMessageApizrExtensions
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions
  type: Class
  source:
    id: HttpRequestMessageApizrExtensions
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 14
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nExtension methods for <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> Polly integration.\n"
  example: []
  syntax:
    content: public static class HttpRequestMessageApizrExtensions
    content.vb: Public Module HttpRequestMessageApizrExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  id: GetOrBuildApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageApizrExtensions
  langs:
  - csharp
  - vb
  name: GetOrBuildApizrPolicyExecutionContext(HttpRequestMessage)
  nameWithType: HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext(HttpRequestMessage)
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    id: GetOrBuildApizrPolicyExecutionContext
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 26
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nGets the <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> will attach a context to the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> prior\nto executing a <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref>, if one does not already exist. The <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> will be provided\nto the policy for use inside the <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref> and in other message handlers.\n"
  example: []
  syntax:
    content: public static Context GetOrBuildApizrPolicyExecutionContext(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Polly.Context
      description: The <xref href="Polly.Context" data-throw-if-not-resolved="false"></xref> if set, otherwise <code>null</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOrBuildApizrPolicyExecutionContext(request As HttpRequestMessage) As Context
  overload: Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  id: GetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageApizrExtensions
  langs:
  - csharp
  - vb
  name: GetApizrPolicyExecutionContext(HttpRequestMessage)
  nameWithType: HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext(HttpRequestMessage)
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    id: GetApizrPolicyExecutionContext
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 48
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nGets the <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> will attach a context to the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> prior\nto executing a <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref>, if one does not already exist. The <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> will be provided\nto the policy for use inside the <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref> and in other message handlers.\n"
  example: []
  syntax:
    content: public static Context GetApizrPolicyExecutionContext(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Polly.Context
      description: The <xref href="Polly.Context" data-throw-if-not-resolved="false"></xref> if set, otherwise <code>null</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetApizrPolicyExecutionContext(request As HttpRequestMessage) As Context
  overload: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions(System.Net.Http.HttpRequestMessage)
  id: GetApizrRequestOptions(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageApizrExtensions
  langs:
  - csharp
  - vb
  name: GetApizrRequestOptions(HttpRequestMessage)
  nameWithType: HttpRequestMessageApizrExtensions.GetApizrRequestOptions(HttpRequestMessage)
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    id: GetApizrRequestOptions
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 66
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nGets the <xref href=\"Apizr.Configuring.Request.IApizrRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IApizrRequestOptions GetApizrRequestOptions(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Apizr.Configuring.Request.IApizrRequestOptions
      description: The <xref href="Apizr.Configuring.Request.IApizrRequestOptions" data-throw-if-not-resolved="false"></xref> if set, otherwise <code>null</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetApizrRequestOptions(request As HttpRequestMessage) As IApizrRequestOptions
  overload: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions(System.Net.Http.HttpRequestMessage,Apizr.Configuring.Request.IApizrRequestOptions@)
  commentId: M:Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions(System.Net.Http.HttpRequestMessage,Apizr.Configuring.Request.IApizrRequestOptions@)
  id: TryGetOptions(System.Net.Http.HttpRequestMessage,Apizr.Configuring.Request.IApizrRequestOptions@)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageApizrExtensions
  langs:
  - csharp
  - vb
  name: TryGetOptions(HttpRequestMessage, out IApizrRequestOptions)
  nameWithType: HttpRequestMessageApizrExtensions.TryGetOptions(HttpRequestMessage, out IApizrRequestOptions)
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions(System.Net.Http.HttpRequestMessage, out Apizr.Configuring.Request.IApizrRequestOptions)
  type: Method
  source:
    id: TryGetOptions
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 78
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nTry to get the <xref href=\"Apizr.Configuring.Request.IApizrRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static bool TryGetOptions(this HttpRequestMessage request, out IApizrRequestOptions options)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    - id: options
      type: Apizr.Configuring.Request.IApizrRequestOptions
      description: The <xref href="Apizr.Configuring.Request.IApizrRequestOptions" data-throw-if-not-resolved="false"></xref> if set, otherwise <code>null</code>.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetOptions(request As HttpRequestMessage, ByRef options As IApizrRequestOptions) As Boolean
  overload: Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions*
  nameWithType.vb: HttpRequestMessageApizrExtensions.TryGetOptions(HttpRequestMessage, ByRef IApizrRequestOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions(System.Net.Http.HttpRequestMessage, ByRef Apizr.Configuring.Request.IApizrRequestOptions)
  name.vb: TryGetOptions(HttpRequestMessage, ByRef IApizrRequestOptions)
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  commentId: M:Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  id: SetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageApizrExtensions
  langs:
  - csharp
  - vb
  name: SetApizrPolicyExecutionContext(HttpRequestMessage, Context)
  nameWithType: HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext(HttpRequestMessage, Context)
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext(System.Net.Http.HttpRequestMessage, Polly.Context)
  type: Method
  source:
    id: SetApizrPolicyExecutionContext
    path: C:\Dev\Community\Apizr\Apizr\Src\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 95
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nSets the <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> will attach a context to the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> prior\nto executing a <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref>, if one does not already exist. The <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> will be provided\nto the policy for use inside the <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref> and in other message handlers.\n"
  example: []
  syntax:
    content: public static void SetApizrPolicyExecutionContext(this HttpRequestMessage request, Context context)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: Polly.Context
      description: The <xref href="Polly.Context" data-throw-if-not-resolved="false"></xref>, may be <code>null</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetApizrPolicyExecutionContext(request As HttpRequestMessage, context As Context)
  overload: Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: Apizr.Policing
  commentId: N:Apizr.Policing
  name: Apizr.Policing
  nameWithType: Apizr.Policing
  fullName: Apizr.Policing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Apizr.Policing.PolicyHttpMessageHandler
  commentId: T:Apizr.Policing.PolicyHttpMessageHandler
  name: PolicyHttpMessageHandler
  nameWithType: PolicyHttpMessageHandler
  fullName: Apizr.Policing.PolicyHttpMessageHandler
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: Polly.Policy
  commentId: T:Polly.Policy
  isExternal: true
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext*
  commentId: Overload:Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext
  name: GetOrBuildApizrPolicyExecutionContext
  nameWithType: HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.GetOrBuildApizrPolicyExecutionContext
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext*
  commentId: Overload:Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext
  name: GetApizrPolicyExecutionContext
  nameWithType: HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrPolicyExecutionContext
- uid: Apizr.Configuring.Request.IApizrRequestOptions
  commentId: T:Apizr.Configuring.Request.IApizrRequestOptions
  parent: Apizr.Configuring.Request
  name: IApizrRequestOptions
  nameWithType: IApizrRequestOptions
  fullName: Apizr.Configuring.Request.IApizrRequestOptions
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions*
  commentId: Overload:Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions
  name: GetApizrRequestOptions
  nameWithType: HttpRequestMessageApizrExtensions.GetApizrRequestOptions
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.GetApizrRequestOptions
- uid: Apizr.Configuring.Request
  commentId: N:Apizr.Configuring.Request
  name: Apizr.Configuring.Request
  nameWithType: Apizr.Configuring.Request
  fullName: Apizr.Configuring.Request
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions*
  commentId: Overload:Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions
  name: TryGetOptions
  nameWithType: HttpRequestMessageApizrExtensions.TryGetOptions
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.TryGetOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext*
  commentId: Overload:Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext
  name: SetApizrPolicyExecutionContext
  nameWithType: HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext
  fullName: Apizr.Policing.HttpRequestMessageApizrExtensions.SetApizrPolicyExecutionContext
