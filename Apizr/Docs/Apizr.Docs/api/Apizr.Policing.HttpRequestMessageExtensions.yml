### YamlMime:ManagedReference
items:
- uid: Apizr.Policing.HttpRequestMessageExtensions
  commentId: T:Apizr.Policing.HttpRequestMessageExtensions
  id: HttpRequestMessageExtensions
  parent: Apizr.Policing
  children:
  - Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  - Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  - Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  langs:
  - csharp
  - vb
  name: HttpRequestMessageExtensions
  nameWithType: HttpRequestMessageExtensions
  fullName: Apizr.Policing.HttpRequestMessageExtensions
  type: Class
  source:
    id: HttpRequestMessageExtensions
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 13
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nExtension methods for <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> Polly integration.\n"
  example: []
  syntax:
    content: public static class HttpRequestMessageExtensions
    content.vb: Public Module HttpRequestMessageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  id: GetOrBuildPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: GetOrBuildPolicyExecutionContext(HttpRequestMessage)
  nameWithType: HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext(HttpRequestMessage)
  fullName: Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    id: GetOrBuildPolicyExecutionContext
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 25
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nGets the <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> will attach a context to the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> prior\nto executing a <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref>, if one does not already exist. The <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> will be provided\nto the policy for use inside the <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref> and in other message handlers.\n"
  example: []
  syntax:
    content: public static Context GetOrBuildPolicyExecutionContext(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Polly.Context
      description: The <xref href="Polly.Context" data-throw-if-not-resolved="false"></xref> if set, otherwise <code>null</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOrBuildPolicyExecutionContext(request As HttpRequestMessage) As Context
  overload: Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  commentId: M:Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  id: GetPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: GetPolicyExecutionContext(HttpRequestMessage)
  nameWithType: HttpRequestMessageExtensions.GetPolicyExecutionContext(HttpRequestMessage)
  fullName: Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    id: GetPolicyExecutionContext
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 52
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nGets the <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> will attach a context to the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> prior\nto executing a <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref>, if one does not already exist. The <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> will be provided\nto the policy for use inside the <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref> and in other message handlers.\n"
  example: []
  syntax:
    content: public static Context GetPolicyExecutionContext(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Polly.Context
      description: The <xref href="Polly.Context" data-throw-if-not-resolved="false"></xref> if set, otherwise <code>null</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPolicyExecutionContext(request As HttpRequestMessage) As Context
  overload: Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  commentId: M:Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  id: SetPolicyExecutionContext(System.Net.Http.HttpRequestMessage,Polly.Context)
  isExtensionMethod: true
  parent: Apizr.Policing.HttpRequestMessageExtensions
  langs:
  - csharp
  - vb
  name: SetPolicyExecutionContext(HttpRequestMessage, Context)
  nameWithType: HttpRequestMessageExtensions.SetPolicyExecutionContext(HttpRequestMessage, Context)
  fullName: Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext(System.Net.Http.HttpRequestMessage, Polly.Context)
  type: Method
  source:
    id: SetPolicyExecutionContext
    path: C:\Dev\Community\Apizr\Apizr\Apizr\Policing\HttpRequestMessageExtensions.cs
    startLine: 73
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nSets the <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> associated with the provided <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> will attach a context to the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> prior\nto executing a <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref>, if one does not already exist. The <xref href=\"Polly.Context\" data-throw-if-not-resolved=\"false\"></xref> will be provided\nto the policy for use inside the <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref> and in other message handlers.\n"
  example: []
  syntax:
    content: public static void SetPolicyExecutionContext(this HttpRequestMessage request, Context context)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: Polly.Context
      description: The <xref href="Polly.Context" data-throw-if-not-resolved="false"></xref>, may be <code>null</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetPolicyExecutionContext(request As HttpRequestMessage, context As Context)
  overload: Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: Apizr.Policing
  commentId: N:Apizr.Policing
  name: Apizr.Policing
  nameWithType: Apizr.Policing
  fullName: Apizr.Policing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Apizr.Policing.PolicyHttpMessageHandler
  commentId: T:Apizr.Policing.PolicyHttpMessageHandler
  name: PolicyHttpMessageHandler
  nameWithType: PolicyHttpMessageHandler
  fullName: Apizr.Policing.PolicyHttpMessageHandler
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: Polly.Policy
  commentId: T:Polly.Policy
  isExternal: true
- uid: Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext*
  commentId: Overload:Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext
  name: GetOrBuildPolicyExecutionContext
  nameWithType: HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext
  fullName: Apizr.Policing.HttpRequestMessageExtensions.GetOrBuildPolicyExecutionContext
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
- uid: Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext*
  commentId: Overload:Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext
  name: GetPolicyExecutionContext
  nameWithType: HttpRequestMessageExtensions.GetPolicyExecutionContext
  fullName: Apizr.Policing.HttpRequestMessageExtensions.GetPolicyExecutionContext
- uid: Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext*
  commentId: Overload:Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext
  name: SetPolicyExecutionContext
  nameWithType: HttpRequestMessageExtensions.SetPolicyExecutionContext
  fullName: Apizr.Policing.HttpRequestMessageExtensions.SetPolicyExecutionContext
