### YamlMime:ManagedReference
items:
- uid: Apizr.Policing.LoggedPolicies
  commentId: T:Apizr.Policing.LoggedPolicies
  id: LoggedPolicies
  parent: Apizr.Policing
  children:
  - Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context)
  - Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context,System.Action{Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context})
  langs:
  - csharp
  - vb
  name: LoggedPolicies
  nameWithType: LoggedPolicies
  fullName: Apizr.Policing.LoggedPolicies
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/LoggedPolicies.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: LoggedPolicies
    path: ../../Src/Apizr/Policing/LoggedPolicies.cs
    startLine: 11
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nPolicy logging helper\n"
  example: []
  syntax:
    content: public static class LoggedPolicies
    content.vb: Public Module LoggedPolicies
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context)
  commentId: M:Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context)
  id: OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context)
  parent: Apizr.Policing.LoggedPolicies
  langs:
  - csharp
  - vb
  name: OnLoggedRetry(DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context)
  nameWithType: LoggedPolicies.OnLoggedRetry(DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context)
  fullName: Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult<System.Net.Http.HttpResponseMessage>, System.TimeSpan, System.Int32, Polly.Context)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/LoggedPolicies.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: OnLoggedRetry
    path: ../../Src/Apizr/Policing/LoggedPolicies.cs
    startLine: 20
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nTells Apizr to log retries\n"
  example: []
  syntax:
    content: public static void OnLoggedRetry(DelegateResult<HttpResponseMessage> result, TimeSpan timeSpan, int retryCount, Context context)
    parameters:
    - id: result
      type: Polly.DelegateResult{System.Net.Http.HttpResponseMessage}
      description: ''
    - id: timeSpan
      type: System.TimeSpan
      description: ''
    - id: retryCount
      type: System.Int32
      description: ''
    - id: context
      type: Polly.Context
      description: ''
    content.vb: Public Shared Sub OnLoggedRetry(result As DelegateResult(Of HttpResponseMessage), timeSpan As TimeSpan, retryCount As Integer, context As Context)
  overload: Apizr.Policing.LoggedPolicies.OnLoggedRetry*
  nameWithType.vb: LoggedPolicies.OnLoggedRetry(DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult(Of System.Net.Http.HttpResponseMessage), System.TimeSpan, System.Int32, Polly.Context)
  name.vb: OnLoggedRetry(DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context)
- uid: Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context,System.Action{Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context})
  commentId: M:Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context,System.Action{Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context})
  id: OnLoggedRetry(Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context,System.Action{Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context})
  parent: Apizr.Policing.LoggedPolicies
  langs:
  - csharp
  - vb
  name: OnLoggedRetry(DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context, Action<DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context>)
  nameWithType: LoggedPolicies.OnLoggedRetry(DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context, Action<DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context>)
  fullName: Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult<System.Net.Http.HttpResponseMessage>, System.TimeSpan, System.Int32, Polly.Context, System.Action<Polly.DelegateResult<System.Net.Http.HttpResponseMessage>, System.TimeSpan, System.Int32, Polly.Context>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/LoggedPolicies.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: OnLoggedRetry
    path: ../../Src/Apizr/Policing/LoggedPolicies.cs
    startLine: 32
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nTells Apizr to log retries plus some more actions\n"
  example: []
  syntax:
    content: public static void OnLoggedRetry(DelegateResult<HttpResponseMessage> result, TimeSpan timeSpan, int retryCount, Context context, Action<DelegateResult<HttpResponseMessage>, TimeSpan, int, Context> onRetry)
    parameters:
    - id: result
      type: Polly.DelegateResult{System.Net.Http.HttpResponseMessage}
      description: ''
    - id: timeSpan
      type: System.TimeSpan
      description: ''
    - id: retryCount
      type: System.Int32
      description: ''
    - id: context
      type: Polly.Context
      description: ''
    - id: onRetry
      type: System.Action{Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context}
      description: ''
    content.vb: Public Shared Sub OnLoggedRetry(result As DelegateResult(Of HttpResponseMessage), timeSpan As TimeSpan, retryCount As Integer, context As Context, onRetry As Action(Of DelegateResult(Of HttpResponseMessage), TimeSpan, Integer, Context))
  overload: Apizr.Policing.LoggedPolicies.OnLoggedRetry*
  nameWithType.vb: LoggedPolicies.OnLoggedRetry(DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context, Action(Of DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Apizr.Policing.LoggedPolicies.OnLoggedRetry(Polly.DelegateResult(Of System.Net.Http.HttpResponseMessage), System.TimeSpan, System.Int32, Polly.Context, System.Action(Of Polly.DelegateResult(Of System.Net.Http.HttpResponseMessage), System.TimeSpan, System.Int32, Polly.Context))
  name.vb: OnLoggedRetry(DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context, Action(Of DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context))
references:
- uid: Apizr.Policing
  commentId: N:Apizr.Policing
  name: Apizr.Policing
  nameWithType: Apizr.Policing
  fullName: Apizr.Policing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Policing.LoggedPolicies.OnLoggedRetry*
  commentId: Overload:Apizr.Policing.LoggedPolicies.OnLoggedRetry
  name: OnLoggedRetry
  nameWithType: LoggedPolicies.OnLoggedRetry
  fullName: Apizr.Policing.LoggedPolicies.OnLoggedRetry
- uid: Polly.DelegateResult{System.Net.Http.HttpResponseMessage}
  commentId: T:Polly.DelegateResult{System.Net.Http.HttpResponseMessage}
  parent: Polly
  definition: Polly.DelegateResult`1
  name: DelegateResult<HttpResponseMessage>
  nameWithType: DelegateResult<HttpResponseMessage>
  fullName: Polly.DelegateResult<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: DelegateResult(Of HttpResponseMessage)
  fullName.vb: Polly.DelegateResult(Of System.Net.Http.HttpResponseMessage)
  name.vb: DelegateResult(Of HttpResponseMessage)
  spec.csharp:
  - uid: Polly.DelegateResult`1
    name: DelegateResult
    nameWithType: DelegateResult
    fullName: Polly.DelegateResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polly.DelegateResult`1
    name: DelegateResult
    nameWithType: DelegateResult
    fullName: Polly.DelegateResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Polly.DelegateResult`1
  commentId: T:Polly.DelegateResult`1
  isExternal: true
  name: DelegateResult<TResult>
  nameWithType: DelegateResult<TResult>
  fullName: Polly.DelegateResult<TResult>
  nameWithType.vb: DelegateResult(Of TResult)
  fullName.vb: Polly.DelegateResult(Of TResult)
  name.vb: DelegateResult(Of TResult)
  spec.csharp:
  - uid: Polly.DelegateResult`1
    name: DelegateResult
    nameWithType: DelegateResult
    fullName: Polly.DelegateResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polly.DelegateResult`1
    name: DelegateResult
    nameWithType: DelegateResult
    fullName: Polly.DelegateResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
- uid: System.Action{Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context}
  commentId: T:System.Action{Polly.DelegateResult{System.Net.Http.HttpResponseMessage},System.TimeSpan,System.Int32,Polly.Context}
  parent: System
  definition: System.Action`4
  name: Action<DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context>
  nameWithType: Action<DelegateResult<HttpResponseMessage>, TimeSpan, Int32, Context>
  fullName: System.Action<Polly.DelegateResult<System.Net.Http.HttpResponseMessage>, System.TimeSpan, System.Int32, Polly.Context>
  nameWithType.vb: Action(Of DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context)
  fullName.vb: System.Action(Of Polly.DelegateResult(Of System.Net.Http.HttpResponseMessage), System.TimeSpan, System.Int32, Polly.Context)
  name.vb: Action(Of DelegateResult(Of HttpResponseMessage), TimeSpan, Int32, Context)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polly.DelegateResult`1
    name: DelegateResult
    nameWithType: DelegateResult
    fullName: Polly.DelegateResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polly.DelegateResult`1
    name: DelegateResult
    nameWithType: DelegateResult
    fullName: Polly.DelegateResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.Context
    name: Context
    nameWithType: Context
    fullName: Polly.Context
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`4
  commentId: T:System.Action`4
  isExternal: true
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
