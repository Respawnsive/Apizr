### YamlMime:ManagedReference
items:
- uid: Apizr.Policing.PolicyHttpMessageHandler
  commentId: T:Apizr.Policing.PolicyHttpMessageHandler
  id: PolicyHttpMessageHandler
  parent: Apizr.Policing
  children:
  - Apizr.Policing.PolicyHttpMessageHandler.#ctor(Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage},Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  - Apizr.Policing.PolicyHttpMessageHandler.#ctor(System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}},Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  - Apizr.Policing.PolicyHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync(System.Net.Http.HttpRequestMessage,Polly.Context,System.Threading.CancellationToken,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PolicyHttpMessageHandler
  nameWithType: PolicyHttpMessageHandler
  fullName: Apizr.Policing.PolicyHttpMessageHandler
  type: Class
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/PolicyHttpMessageHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: PolicyHttpMessageHandler
    path: ../../Src/Apizr/Policing/PolicyHttpMessageHandler.cs
    startLine: 20
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nA <xref href=\"System.Net.Http.DelegatingHandler\" data-throw-if-not-resolved=\"false\"></xref> implementation that executes request processing surrounded by a <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class PolicyHttpMessageHandler : DelegatingHandler, IDisposable'
    content.vb: >-
      Public Class PolicyHttpMessageHandler
          Inherits DelegatingHandler
          Implements IDisposable
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  - System.Net.Http.DelegatingHandler
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  - System.Net.Http.DelegatingHandler.InnerHandler
  - System.Net.Http.HttpMessageHandler.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Apizr.Policing.PolicyHttpMessageHandler.#ctor(Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage},Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  commentId: M:Apizr.Policing.PolicyHttpMessageHandler.#ctor(Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage},Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  id: '#ctor(Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage},Apizr.Configuring.Manager.IApizrManagerOptionsBase)'
  parent: Apizr.Policing.PolicyHttpMessageHandler
  langs:
  - csharp
  - vb
  name: PolicyHttpMessageHandler(IAsyncPolicy<HttpResponseMessage>, IApizrManagerOptionsBase)
  nameWithType: PolicyHttpMessageHandler.PolicyHttpMessageHandler(IAsyncPolicy<HttpResponseMessage>, IApizrManagerOptionsBase)
  fullName: Apizr.Policing.PolicyHttpMessageHandler.PolicyHttpMessageHandler(Polly.IAsyncPolicy<System.Net.Http.HttpResponseMessage>, Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/PolicyHttpMessageHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Apizr/Policing/PolicyHttpMessageHandler.cs
    startLine: 30
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nCreates a new <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PolicyHttpMessageHandler(IAsyncPolicy<HttpResponseMessage> policy, IApizrManagerOptionsBase apizrOptions)
    parameters:
    - id: policy
      type: Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}
      description: The policy.
    - id: apizrOptions
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    content.vb: Public Sub New(policy As IAsyncPolicy(Of HttpResponseMessage), apizrOptions As IApizrManagerOptionsBase)
  overload: Apizr.Policing.PolicyHttpMessageHandler.#ctor*
  nameWithType.vb: PolicyHttpMessageHandler.PolicyHttpMessageHandler(IAsyncPolicy(Of HttpResponseMessage), IApizrManagerOptionsBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Policing.PolicyHttpMessageHandler.PolicyHttpMessageHandler(Polly.IAsyncPolicy(Of System.Net.Http.HttpResponseMessage), Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  name.vb: PolicyHttpMessageHandler(IAsyncPolicy(Of HttpResponseMessage), IApizrManagerOptionsBase)
- uid: Apizr.Policing.PolicyHttpMessageHandler.#ctor(System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}},Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  commentId: M:Apizr.Policing.PolicyHttpMessageHandler.#ctor(System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}},Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  id: '#ctor(System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}},Apizr.Configuring.Manager.IApizrManagerOptionsBase)'
  parent: Apizr.Policing.PolicyHttpMessageHandler
  langs:
  - csharp
  - vb
  name: PolicyHttpMessageHandler(Func<HttpRequestMessage, IAsyncPolicy<HttpResponseMessage>>, IApizrManagerOptionsBase)
  nameWithType: PolicyHttpMessageHandler.PolicyHttpMessageHandler(Func<HttpRequestMessage, IAsyncPolicy<HttpResponseMessage>>, IApizrManagerOptionsBase)
  fullName: Apizr.Policing.PolicyHttpMessageHandler.PolicyHttpMessageHandler(System.Func<System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy<System.Net.Http.HttpResponseMessage>>, Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/PolicyHttpMessageHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Apizr/Policing/PolicyHttpMessageHandler.cs
    startLine: 50
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nCreates a new <xref href=\"Apizr.Policing.PolicyHttpMessageHandler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PolicyHttpMessageHandler(Func<HttpRequestMessage, IAsyncPolicy<HttpResponseMessage>> policySelector, IApizrManagerOptionsBase apizrOptions)
    parameters:
    - id: policySelector
      type: System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}}
      description: A function which can select the desired policy for a given <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    - id: apizrOptions
      type: Apizr.Configuring.Manager.IApizrManagerOptionsBase
    content.vb: Public Sub New(policySelector As Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage)), apizrOptions As IApizrManagerOptionsBase)
  overload: Apizr.Policing.PolicyHttpMessageHandler.#ctor*
  nameWithType.vb: PolicyHttpMessageHandler.PolicyHttpMessageHandler(Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage)), IApizrManagerOptionsBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Policing.PolicyHttpMessageHandler.PolicyHttpMessageHandler(System.Func(Of System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy(Of System.Net.Http.HttpResponseMessage)), Apizr.Configuring.Manager.IApizrManagerOptionsBase)
  name.vb: PolicyHttpMessageHandler(Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage)), IApizrManagerOptionsBase)
- uid: Apizr.Policing.PolicyHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Apizr.Policing.PolicyHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Apizr.Policing.PolicyHttpMessageHandler
  langs:
  - csharp
  - vb
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: PolicyHttpMessageHandler.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: Apizr.Policing.PolicyHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/PolicyHttpMessageHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendAsync
    path: ../../Src/Apizr/Policing/PolicyHttpMessageHandler.cs
    startLine: 66
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  syntax:
    content: protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Protected Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)
  overridden: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  overload: Apizr.Policing.PolicyHttpMessageHandler.SendAsync*
  modifiers.csharp:
  - protected
  - override
  - async
  modifiers.vb:
  - Protected
  - Overrides
- uid: Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync(System.Net.Http.HttpRequestMessage,Polly.Context,System.Threading.CancellationToken,System.Threading.CancellationToken)
  commentId: M:Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync(System.Net.Http.HttpRequestMessage,Polly.Context,System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: SendCoreAsync(System.Net.Http.HttpRequestMessage,Polly.Context,System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: Apizr.Policing.PolicyHttpMessageHandler
  langs:
  - csharp
  - vb
  name: SendCoreAsync(HttpRequestMessage, Context, CancellationToken, CancellationToken)
  nameWithType: PolicyHttpMessageHandler.SendCoreAsync(HttpRequestMessage, Context, CancellationToken, CancellationToken)
  fullName: Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync(System.Net.Http.HttpRequestMessage, Polly.Context, System.Threading.CancellationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Apizr/Src/Apizr/Policing/PolicyHttpMessageHandler.cs
      branch: dev
      repo: https://github.com/Respawnsive/Apizr.git
    id: SendCoreAsync
    path: ../../Src/Apizr/Policing/PolicyHttpMessageHandler.cs
    startLine: 167
  assemblies:
  - Apizr
  namespace: Apizr.Policing
  summary: "\nCalled inside the execution of the <xref href=\"Polly.Policy\" data-throw-if-not-resolved=\"false\"></xref> to perform request processing.\n"
  example: []
  syntax:
    content: protected virtual async Task<HttpResponseMessage> SendCoreAsync(HttpRequestMessage request, Context context, CancellationToken cancellationToken, CancellationToken optionsCancellationToken)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: Polly.Context
      description: The <xref href="Polly.Context" data-throw-if-not-resolved="false"></xref>.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
    - id: optionsCancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: Returns a <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> that will yield a response when completed.
    content.vb: Protected Overridable Function SendCoreAsync(request As HttpRequestMessage, context As Context, cancellationToken As CancellationToken, optionsCancellationToken As CancellationToken) As Task(Of HttpResponseMessage)
  overload: Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync*
  modifiers.csharp:
  - protected
  - virtual
  - async
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Net.Http.DelegatingHandler
  commentId: T:System.Net.Http.DelegatingHandler
  parent: System.Net.Http
  isExternal: true
  name: DelegatingHandler
  nameWithType: DelegatingHandler
  fullName: System.Net.Http.DelegatingHandler
- uid: Polly.Policy
  commentId: T:Polly.Policy
  isExternal: true
- uid: Apizr.Policing
  commentId: N:Apizr.Policing
  name: Apizr.Policing
  nameWithType: Apizr.Policing
  fullName: Apizr.Policing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  commentId: M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DelegatingHandler.Dispose(Boolean)
  fullName: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DelegatingHandler.Dispose
    fullName: System.Net.Http.DelegatingHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DelegatingHandler.Dispose
    fullName: System.Net.Http.DelegatingHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.DelegatingHandler.InnerHandler
  commentId: P:System.Net.Http.DelegatingHandler.InnerHandler
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: InnerHandler
  nameWithType: DelegatingHandler.InnerHandler
  fullName: System.Net.Http.DelegatingHandler.InnerHandler
- uid: System.Net.Http.HttpMessageHandler.Dispose
  commentId: M:System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: Dispose()
  nameWithType: HttpMessageHandler.Dispose()
  fullName: System.Net.Http.HttpMessageHandler.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Policing.PolicyHttpMessageHandler
  commentId: T:Apizr.Policing.PolicyHttpMessageHandler
  name: PolicyHttpMessageHandler
  nameWithType: PolicyHttpMessageHandler
  fullName: Apizr.Policing.PolicyHttpMessageHandler
- uid: Apizr.Policing.PolicyHttpMessageHandler.#ctor*
  commentId: Overload:Apizr.Policing.PolicyHttpMessageHandler.#ctor
  name: PolicyHttpMessageHandler
  nameWithType: PolicyHttpMessageHandler.PolicyHttpMessageHandler
  fullName: Apizr.Policing.PolicyHttpMessageHandler.PolicyHttpMessageHandler
- uid: Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}
  commentId: T:Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}
  parent: Polly
  definition: Polly.IAsyncPolicy`1
  name: IAsyncPolicy<HttpResponseMessage>
  nameWithType: IAsyncPolicy<HttpResponseMessage>
  fullName: Polly.IAsyncPolicy<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: IAsyncPolicy(Of HttpResponseMessage)
  fullName.vb: Polly.IAsyncPolicy(Of System.Net.Http.HttpResponseMessage)
  name.vb: IAsyncPolicy(Of HttpResponseMessage)
  spec.csharp:
  - uid: Polly.IAsyncPolicy`1
    name: IAsyncPolicy
    nameWithType: IAsyncPolicy
    fullName: Polly.IAsyncPolicy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polly.IAsyncPolicy`1
    name: IAsyncPolicy
    nameWithType: IAsyncPolicy
    fullName: Polly.IAsyncPolicy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Configuring.Manager.IApizrManagerOptionsBase
  commentId: T:Apizr.Configuring.Manager.IApizrManagerOptionsBase
  parent: Apizr.Configuring.Manager
  name: IApizrManagerOptionsBase
  nameWithType: IApizrManagerOptionsBase
  fullName: Apizr.Configuring.Manager.IApizrManagerOptionsBase
- uid: Polly.IAsyncPolicy`1
  commentId: T:Polly.IAsyncPolicy`1
  isExternal: true
  name: IAsyncPolicy<TResult>
  nameWithType: IAsyncPolicy<TResult>
  fullName: Polly.IAsyncPolicy<TResult>
  nameWithType.vb: IAsyncPolicy(Of TResult)
  fullName.vb: Polly.IAsyncPolicy(Of TResult)
  name.vb: IAsyncPolicy(Of TResult)
  spec.csharp:
  - uid: Polly.IAsyncPolicy`1
    name: IAsyncPolicy
    nameWithType: IAsyncPolicy
    fullName: Polly.IAsyncPolicy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polly.IAsyncPolicy`1
    name: IAsyncPolicy
    nameWithType: IAsyncPolicy
    fullName: Polly.IAsyncPolicy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
- uid: Apizr.Configuring.Manager
  commentId: N:Apizr.Configuring.Manager
  name: Apizr.Configuring.Manager
  nameWithType: Apizr.Configuring.Manager
  fullName: Apizr.Configuring.Manager
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}}
  commentId: T:System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}}
  parent: System
  definition: System.Func`2
  name: Func<HttpRequestMessage, IAsyncPolicy<HttpResponseMessage>>
  nameWithType: Func<HttpRequestMessage, IAsyncPolicy<HttpResponseMessage>>
  fullName: System.Func<System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy<System.Net.Http.HttpResponseMessage>>
  nameWithType.vb: Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage))
  fullName.vb: System.Func(Of System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy(Of System.Net.Http.HttpResponseMessage))
  name.vb: Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.IAsyncPolicy`1
    name: IAsyncPolicy
    nameWithType: IAsyncPolicy
    fullName: Polly.IAsyncPolicy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Polly.IAsyncPolicy`1
    name: IAsyncPolicy
    nameWithType: IAsyncPolicy
    fullName: Polly.IAsyncPolicy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: DelegatingHandler.SendAsync
    fullName: System.Net.Http.DelegatingHandler.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: DelegatingHandler.SendAsync
    fullName: System.Net.Http.DelegatingHandler.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Policing.PolicyHttpMessageHandler.SendAsync*
  commentId: Overload:Apizr.Policing.PolicyHttpMessageHandler.SendAsync
  name: SendAsync
  nameWithType: PolicyHttpMessageHandler.SendAsync
  fullName: Apizr.Policing.PolicyHttpMessageHandler.SendAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Polly.Context
  commentId: T:Polly.Context
  parent: Polly
  isExternal: true
  name: Context
  nameWithType: Context
  fullName: Polly.Context
- uid: Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync*
  commentId: Overload:Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync
  name: SendCoreAsync
  nameWithType: PolicyHttpMessageHandler.SendCoreAsync
  fullName: Apizr.Policing.PolicyHttpMessageHandler.SendCoreAsync
