### YamlMime:ManagedReference
items:
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings
  commentId: T:Apizr.Resiliencing.ApizrResilienceContextSettings
  id: ApizrResilienceContextSettings
  parent: Apizr.Resiliencing
  children:
  - Apizr.Resiliencing.ApizrResilienceContextSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext
  - Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete
  langs:
  - csharp
  - vb
  name: ApizrResilienceContextSettings
  nameWithType: ApizrResilienceContextSettings
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings
  type: Struct
  source:
    remote:
      path: Apizr/Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrResilienceContextSettings
    path: ../../Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
    startLine: 9
  assemblies:
  - Apizr
  namespace: Apizr.Resiliencing
  summary: "\nSettings used by Apizr when dealing with <xref href=\"Polly.ResilienceContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly struct ApizrResilienceContextSettings
    content.vb: Public Structure ApizrResilienceContextSettings
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - readonly
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:Apizr.Resiliencing.ApizrResilienceContextSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: '#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean})'
  parent: Apizr.Resiliencing.ApizrResilienceContextSettings
  langs:
  - csharp
  - vb
  name: ApizrResilienceContextSettings(Nullable<Boolean>, Nullable<Boolean>)
  nameWithType: ApizrResilienceContextSettings.ApizrResilienceContextSettings(Nullable<Boolean>, Nullable<Boolean>)
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings.ApizrResilienceContextSettings(System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
    startLine: 16
  assemblies:
  - Apizr
  namespace: Apizr.Resiliencing
  summary: "\nInitializes a new instance of the <xref href=\"Apizr.Resiliencing.ApizrResilienceContextSettings\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public ApizrResilienceContextSettings(bool? continueOnCapturedContext = null, bool? returnToPoolOnComplete = null)
    parameters:
    - id: continueOnCapturedContext
      type: System.Nullable{System.Boolean}
      description: Value indicating whether to continue on captured context.
    - id: returnToPoolOnComplete
      type: System.Nullable{System.Boolean}
      description: ''
    content.vb: Public Sub New(continueOnCapturedContext As Boolean? = Nothing, returnToPoolOnComplete As Boolean? = Nothing)
  overload: Apizr.Resiliencing.ApizrResilienceContextSettings.#ctor*
  nameWithType.vb: ApizrResilienceContextSettings.ApizrResilienceContextSettings(Nullable(Of Boolean), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Resiliencing.ApizrResilienceContextSettings.ApizrResilienceContextSettings(System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: ApizrResilienceContextSettings(Nullable(Of Boolean), Nullable(Of Boolean))
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext
  commentId: P:Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext
  id: ContinueOnCapturedContext
  parent: Apizr.Resiliencing.ApizrResilienceContextSettings
  langs:
  - csharp
  - vb
  name: ContinueOnCapturedContext
  nameWithType: ApizrResilienceContextSettings.ContinueOnCapturedContext
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ContinueOnCapturedContext
    path: ../../Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
    startLine: 25
  assemblies:
  - Apizr
  namespace: Apizr.Resiliencing
  summary: "\nGets the value indicating whether to continue on captured context, if any.\n"
  example: []
  syntax:
    content: public readonly bool? ContinueOnCapturedContext { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property ContinueOnCapturedContext As Boolean?
  overload: Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete
  commentId: P:Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete
  id: ReturnToPoolOnComplete
  parent: Apizr.Resiliencing.ApizrResilienceContextSettings
  langs:
  - csharp
  - vb
  name: ReturnToPoolOnComplete
  nameWithType: ApizrResilienceContextSettings.ReturnToPoolOnComplete
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete
  type: Property
  source:
    remote:
      path: Apizr/Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ReturnToPoolOnComplete
    path: ../../Src/Apizr/Resiliencing/ApizrResilienceContextSettings.cs
    startLine: 30
  assemblies:
  - Apizr
  namespace: Apizr.Resiliencing
  summary: "\nGets the value indicating whether to return the context to the pool, when request completes.\n"
  example: []
  syntax:
    content: public readonly bool? ReturnToPoolOnComplete { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property ReturnToPoolOnComplete As Boolean?
  overload: Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Polly.ResilienceContext
  commentId: T:Polly.ResilienceContext
  parent: Polly
  isExternal: true
  name: ResilienceContext
  nameWithType: ResilienceContext
  fullName: Polly.ResilienceContext
- uid: Apizr.Resiliencing
  commentId: N:Apizr.Resiliencing
  name: Apizr.Resiliencing
  nameWithType: Apizr.Resiliencing
  fullName: Apizr.Resiliencing
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Polly
  commentId: N:Polly
  isExternal: true
  name: Polly
  nameWithType: Polly
  fullName: Polly
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings
  commentId: T:Apizr.Resiliencing.ApizrResilienceContextSettings
  name: ApizrResilienceContextSettings
  nameWithType: ApizrResilienceContextSettings
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings.#ctor*
  commentId: Overload:Apizr.Resiliencing.ApizrResilienceContextSettings.#ctor
  name: ApizrResilienceContextSettings
  nameWithType: ApizrResilienceContextSettings.ApizrResilienceContextSettings
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings.ApizrResilienceContextSettings
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext*
  commentId: Overload:Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext
  name: ContinueOnCapturedContext
  nameWithType: ApizrResilienceContextSettings.ContinueOnCapturedContext
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings.ContinueOnCapturedContext
- uid: Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete*
  commentId: Overload:Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete
  name: ReturnToPoolOnComplete
  nameWithType: ApizrResilienceContextSettings.ReturnToPoolOnComplete
  fullName: Apizr.Resiliencing.ApizrResilienceContextSettings.ReturnToPoolOnComplete
