### YamlMime:ManagedReference
items:
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2
  commentId: T:Apizr.Transferring.Managing.ApizrTransferManager`2
  id: ApizrTransferManager`2
  parent: Apizr.Transferring.Managing
  children:
  - Apizr.Transferring.Managing.ApizrTransferManager`2.#ctor(Apizr.Transferring.Managing.IApizrDownloadManager{`0,`1},Apizr.Transferring.Managing.IApizrUploadManager{`0})
  - Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: ApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>
  type: Class
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: ApizrTransferManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
    startLine: 50
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  syntax:
    content: 'public class ApizrTransferManager<TTransferApi, TDownloadParams> : IApizrTransferManager<TTransferApi, TDownloadParams>, IApizrDownloadManager<TTransferApi, TDownloadParams>, IApizrUploadManager<TTransferApi>, IApizrUploadManager<TTransferApi, HttpResponseMessage>, IApizrTransferManagerBase<TTransferApi>, IApizrManager where TTransferApi : ITransferApi<TDownloadParams, HttpResponseMessage>, IUploadApi'
    typeParameters:
    - id: TTransferApi
    - id: TDownloadParams
    content.vb: >-
      Public Class ApizrTransferManager(Of TTransferApi As {ITransferApi(Of TDownloadParams, HttpResponseMessage), IUploadApi}, TDownloadParams)
          Implements IApizrTransferManager(Of TTransferApi, TDownloadParams), IApizrDownloadManager(Of TTransferApi, TDownloadParams), IApizrUploadManager(Of TTransferApi), IApizrUploadManager(Of TTransferApi, HttpResponseMessage), IApizrTransferManagerBase(Of TTransferApi), IApizrManager
  inheritance:
  - System.Object
  derivedClasses:
  - Apizr.Transferring.Managing.ApizrTransferManager`1
  implements:
  - Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
  - Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}
  - Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi}}
  - Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}
  - Apizr.Transferring.Managing.IApizrTransferManagerBase{{TTransferApi}}
  - Apizr.IApizrManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams)
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.#ctor(Apizr.Transferring.Managing.IApizrDownloadManager{`0,`1},Apizr.Transferring.Managing.IApizrUploadManager{`0})
  commentId: M:Apizr.Transferring.Managing.ApizrTransferManager`2.#ctor(Apizr.Transferring.Managing.IApizrDownloadManager{`0,`1},Apizr.Transferring.Managing.IApizrUploadManager{`0})
  id: '#ctor(Apizr.Transferring.Managing.IApizrDownloadManager{`0,`1},Apizr.Transferring.Managing.IApizrUploadManager{`0})'
  parent: Apizr.Transferring.Managing.ApizrTransferManager`2
  langs:
  - csharp
  - vb
  name: ApizrTransferManager(IApizrDownloadManager<TTransferApi, TDownloadParams>, IApizrUploadManager<TTransferApi>)
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.ApizrTransferManager(IApizrDownloadManager<TTransferApi, TDownloadParams>, IApizrUploadManager<TTransferApi>)
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.ApizrTransferManager(Apizr.Transferring.Managing.IApizrDownloadManager<TTransferApi, TDownloadParams>, Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi>)
  type: Constructor
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: .ctor
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
    startLine: 55
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  syntax:
    content: public ApizrTransferManager(IApizrDownloadManager<TTransferApi, TDownloadParams> downloadManager, IApizrUploadManager<TTransferApi> uploadManager)
    parameters:
    - id: downloadManager
      type: Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}
    - id: uploadManager
      type: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi}}
    content.vb: Public Sub New(downloadManager As IApizrDownloadManager(Of TTransferApi, TDownloadParams), uploadManager As IApizrUploadManager(Of TTransferApi))
  overload: Apizr.Transferring.Managing.ApizrTransferManager`2.#ctor*
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).ApizrTransferManager(IApizrDownloadManager(Of TTransferApi, TDownloadParams), IApizrUploadManager(Of TTransferApi))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).ApizrTransferManager(Apizr.Transferring.Managing.IApizrDownloadManager(Of TTransferApi, TDownloadParams), Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi))
  name.vb: ApizrTransferManager(IApizrDownloadManager(Of TTransferApi, TDownloadParams), IApizrUploadManager(Of TTransferApi))
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.ApizrTransferManager`2
  langs:
  - csharp
  - vb
  name: DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
    startLine: 62
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nDownload a file\n"
  example: []
  syntax:
    content: public Task<FileInfo> DownloadAsync(FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Function DownloadAsync(fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync*
  implements:
  - Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.ApizrTransferManager`2
  langs:
  - csharp
  - vb
  name: DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
    startLine: 66
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nDownload a file with custom query parameters\n"
  example: []
  syntax:
    content: public Task<FileInfo> DownloadAsync(FileInfo fileInfo, TDownloadParams downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: '{TDownloadParams}'
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Public Function DownloadAsync(fileInfo As FileInfo, downloadParams As TDownloadParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync*
  implements:
  - Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,{TDownloadParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.ApizrTransferManager`2
  langs:
  - csharp
  - vb
  name: UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync(Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
    startLine: 71
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nUpload a file from its bytes data\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> UploadAsync(ByteArrayPart byteArrayPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: byteArrayPart
      type: Refit.ByteArrayPart
      description: The file bytes data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Function UploadAsync(byteArrayPart As ByteArrayPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync*
  implements:
  - Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync(Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.ApizrTransferManager`2
  langs:
  - csharp
  - vb
  name: UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync(Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
    startLine: 75
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nUpload a file from its stream data\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> UploadAsync(StreamPart streamPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: streamPart
      type: Refit.StreamPart
      description: The file stream data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Function UploadAsync(streamPart As StreamPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync*
  implements:
  - Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync(Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.ApizrTransferManager`2
  langs:
  - csharp
  - vb
  name: UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync(Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
      branch: feat/resilience
      repo: https://github.com/Respawnsive/Apizr.git
    id: UploadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/ApizrTransferManager.cs
    startLine: 79
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nUpload a file from its file info data\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> UploadAsync(FileInfoPart fileInfoPart, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: fileInfoPart
      type: Refit.FileInfoPart
      description: The file info data
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
    content.vb: Public Function UploadAsync(fileInfoPart As FileInfoPart, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of HttpResponseMessage)
  overload: Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync*
  implements:
  - Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync(Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Transferring.Managing
  commentId: N:Apizr.Transferring.Managing
  name: Apizr.Transferring.Managing
  nameWithType: Apizr.Transferring.Managing
  fullName: Apizr.Transferring.Managing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Apizr.Transferring.Managing.IApizrTransferManager{{TTransferApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager{``0,``1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManager`2
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{`0,`1}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{`0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`1
  name: IApizrUploadManager<TTransferApi>
  nameWithType: IApizrUploadManager<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi>
  nameWithType.vb: IApizrUploadManager(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi)
  name.vb: IApizrUploadManager(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{`0,System.Net.Http.HttpResponseMessage}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2
  name: IApizrUploadManager<TTransferApi, HttpResponseMessage>
  nameWithType: IApizrUploadManager<TTransferApi, HttpResponseMessage>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi, System.Net.Http.HttpResponseMessage>
  nameWithType.vb: IApizrUploadManager(Of TTransferApi, HttpResponseMessage)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi, System.Net.Http.HttpResponseMessage)
  name.vb: IApizrUploadManager(Of TTransferApi, HttpResponseMessage)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManagerBase{{TTransferApi}}
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManagerBase{`0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrTransferManagerBase`1
  name: IApizrTransferManagerBase<TTransferApi>
  nameWithType: IApizrTransferManagerBase<TTransferApi>
  fullName: Apizr.Transferring.Managing.IApizrTransferManagerBase<TTransferApi>
  nameWithType.vb: IApizrTransferManagerBase(Of TTransferApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManagerBase(Of TTransferApi)
  name.vb: IApizrTransferManagerBase(Of TTransferApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManagerBase`1
    name: IApizrTransferManagerBase
    nameWithType: IApizrTransferManagerBase
    fullName: Apizr.Transferring.Managing.IApizrTransferManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManagerBase`1
    name: IApizrTransferManagerBase
    nameWithType: IApizrTransferManagerBase
    fullName: Apizr.Transferring.Managing.IApizrTransferManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.IApizrManager
  commentId: T:Apizr.IApizrManager
  parent: Apizr
  name: IApizrManager
  nameWithType: IApizrManager
  fullName: Apizr.IApizrManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Apizr.Transferring.Managing.IApizrTransferManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManager`2
  name: IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType: IApizrTransferManager<TTransferApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrTransferManager<TTransferApi, TDownloadParams>
  nameWithType.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManager(Of TTransferApi, TDownloadParams)
  name.vb: IApizrTransferManager(Of TTransferApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManager`2
    name: IApizrTransferManager
    nameWithType: IApizrTransferManager
    fullName: Apizr.Transferring.Managing.IApizrTransferManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApi
    nameWithType: TTransferApi
    fullName: TTransferApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`1
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`1
  name: IApizrUploadManager<TUploadApi>
  nameWithType: IApizrUploadManager<TUploadApi>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi)
  name.vb: IApizrUploadManager(Of TUploadApi)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`1
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`2
  name: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  name.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrTransferManagerBase`1
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManagerBase`1
  name: IApizrTransferManagerBase<TTransferApiBase>
  nameWithType: IApizrTransferManagerBase<TTransferApiBase>
  fullName: Apizr.Transferring.Managing.IApizrTransferManagerBase<TTransferApiBase>
  nameWithType.vb: IApizrTransferManagerBase(Of TTransferApiBase)
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManagerBase(Of TTransferApiBase)
  name.vb: IApizrTransferManagerBase(Of TTransferApiBase)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrTransferManagerBase`1
    name: IApizrTransferManagerBase
    nameWithType: IApizrTransferManagerBase
    fullName: Apizr.Transferring.Managing.IApizrTransferManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransferApiBase
    nameWithType: TTransferApiBase
    fullName: TTransferApiBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrTransferManagerBase`1
    name: IApizrTransferManagerBase
    nameWithType: IApizrTransferManagerBase
    fullName: Apizr.Transferring.Managing.IApizrTransferManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransferApiBase
    nameWithType: TTransferApiBase
    fullName: TTransferApiBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr
  commentId: N:Apizr
  name: Apizr
  nameWithType: Apizr
  fullName: Apizr
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.#ctor*
  commentId: Overload:Apizr.Transferring.Managing.ApizrTransferManager`2.#ctor
  name: ApizrTransferManager
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.ApizrTransferManager
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.ApizrTransferManager
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).ApizrTransferManager
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).ApizrTransferManager
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync*
  commentId: Overload:Apizr.Transferring.Managing.ApizrTransferManager`2.DownloadAsync
  name: DownloadAsync
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.DownloadAsync
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.DownloadAsync
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).DownloadAsync
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).DownloadAsync
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager{`0,`1}.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.FileInfo}
  commentId: T:System.Threading.Tasks.Task{System.IO.FileInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileInfo>
  nameWithType: Task<FileInfo>
  fullName: System.Threading.Tasks.Task<System.IO.FileInfo>
  nameWithType.vb: Task(Of FileInfo)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.FileInfo)
  name.vb: Task(Of FileInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,{TDownloadParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager{`0,`1}.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrDownloadManager{{TTransferApi},{TDownloadParams}}
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TTransferApi, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of TTransferApi, TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TDownloadParams}'
  commentId: '!:TDownloadParams'
  definition: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync*
  commentId: Overload:Apizr.Transferring.Managing.ApizrTransferManager`2.UploadAsync
  name: UploadAsync
  nameWithType: ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync
  fullName: Apizr.Transferring.Managing.ApizrTransferManager<TTransferApi, TDownloadParams>.UploadAsync
  nameWithType.vb: ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync
  fullName.vb: Apizr.Transferring.Managing.ApizrTransferManager(Of TTransferApi, TDownloadParams).UploadAsync
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager{`0,System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TTransferApi, HttpResponseMessage>.UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi, System.Net.Http.HttpResponseMessage>.UploadAsync(Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TTransferApi, HttpResponseMessage).UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi, System.Net.Http.HttpResponseMessage).UploadAsync(Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TTransferApi, HttpResponseMessage>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi, System.Net.Http.HttpResponseMessage>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TTransferApi, HttpResponseMessage).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi, System.Net.Http.HttpResponseMessage).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit.ByteArrayPart
  commentId: T:Refit.ByteArrayPart
  parent: Refit
  isExternal: true
  name: ByteArrayPart
  nameWithType: ByteArrayPart
  fullName: Refit.ByteArrayPart
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit
  commentId: N:Refit
  isExternal: true
  name: Refit
  nameWithType: Refit
  fullName: Refit
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager{`0,System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TTransferApi, HttpResponseMessage>.UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi, System.Net.Http.HttpResponseMessage>.UploadAsync(Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TTransferApi, HttpResponseMessage).UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi, System.Net.Http.HttpResponseMessage).UploadAsync(Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TTransferApi, HttpResponseMessage>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi, System.Net.Http.HttpResponseMessage>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TTransferApi, HttpResponseMessage).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi, System.Net.Http.HttpResponseMessage).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit.StreamPart
  commentId: T:Refit.StreamPart
  parent: Refit
  isExternal: true
  name: StreamPart
  nameWithType: StreamPart
  fullName: Refit.StreamPart
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager{`0,System.Net.Http.HttpResponseMessage}.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrUploadManager{{TTransferApi},System.Net.Http.HttpResponseMessage}
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TTransferApi, HttpResponseMessage>.UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi, System.Net.Http.HttpResponseMessage>.UploadAsync(Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TTransferApi, HttpResponseMessage).UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi, System.Net.Http.HttpResponseMessage).UploadAsync(Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TTransferApi, HttpResponseMessage>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TTransferApi, System.Net.Http.HttpResponseMessage>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TTransferApi, HttpResponseMessage).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TTransferApi, System.Net.Http.HttpResponseMessage).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Refit.FileInfoPart
  commentId: T:Refit.FileInfoPart
  parent: Refit
  isExternal: true
  name: FileInfoPart
  nameWithType: FileInfoPart
  fullName: Refit.FileInfoPart
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
