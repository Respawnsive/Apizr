### YamlMime:ManagedReference
items:
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`2
  id: IApizrDownloadManager`2
  parent: Apizr.Transferring.Managing
  children:
  - Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  langs:
  - csharp
  - vb
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  type: Interface
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrDownloadManager.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: IApizrDownloadManager
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrDownloadManager.cs
    startLine: 14
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nThe download manager with a custom query parameters type\n"
  example: []
  syntax:
    content: 'public interface IApizrDownloadManager<TDownloadApi, in TDownloadParams> : IApizrTransferManagerBase<TDownloadApi>, IApizrManager where TDownloadApi : IDownloadApi<TDownloadParams>'
    typeParameters:
    - id: TDownloadApi
      description: The download api type to manage
    - id: TDownloadParams
      description: The query parameters type
    content.vb: >-
      Public Interface IApizrDownloadManager(Of TDownloadApi As IDownloadApi(Of TDownloadParams), In TDownloadParams)
          Inherits IApizrTransferManagerBase(Of TDownloadApi)
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrDownloadManager`2
  langs:
  - csharp
  - vb
  name: DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrDownloadManager.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrDownloadManager.cs
    startLine: 22
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nDownload a file\n"
  example: []
  syntax:
    content: Task<FileInfo> DownloadAsync(FileInfo fileInfo, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Function DownloadAsync(fileInfo As FileInfo, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync*
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  id: DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrDownloadManager`2
  langs:
  - csharp
  - vb
  name: DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  type: Method
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrDownloadManager.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: DownloadAsync
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrDownloadManager.cs
    startLine: 31
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nDownload a file with custom query parameters\n"
  example: []
  syntax:
    content: Task<FileInfo> DownloadAsync(FileInfo fileInfo, TDownloadParams downloadParams, Action<IApizrRequestOptionsBuilder> optionsBuilder = null)
    parameters:
    - id: fileInfo
      type: System.IO.FileInfo
      description: Some information about the file to download
    - id: downloadParams
      type: '{TDownloadParams}'
      description: Some custom query parameters
    - id: optionsBuilder
      type: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
      description: Some request options
    return:
      type: System.Threading.Tasks.Task{System.IO.FileInfo}
      description: ''
    content.vb: Function DownloadAsync(fileInfo As FileInfo, downloadParams As TDownloadParams, optionsBuilder As Action(Of IApizrRequestOptionsBuilder) = Nothing) As Task(Of FileInfo)
  overload: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync*
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
references:
- uid: Apizr.Transferring.Managing
  commentId: N:Apizr.Transferring.Managing
  name: Apizr.Transferring.Managing
  nameWithType: Apizr.Transferring.Managing
  fullName: Apizr.Transferring.Managing
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync*
  commentId: Overload:Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync
  name: DownloadAsync
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  commentId: T:System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IApizrRequestOptionsBuilder>
  nameWithType: Action<IApizrRequestOptionsBuilder>
  fullName: System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>
  nameWithType.vb: Action(Of IApizrRequestOptionsBuilder)
  fullName.vb: System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder)
  name.vb: Action(Of IApizrRequestOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.FileInfo}
  commentId: T:System.Threading.Tasks.Task{System.IO.FileInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FileInfo>
  nameWithType: Task<FileInfo>
  fullName: System.Threading.Tasks.Task<System.IO.FileInfo>
  nameWithType.vb: Task(Of FileInfo)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.FileInfo)
  name.vb: Task(Of FileInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: '{TDownloadParams}'
  commentId: '!:TDownloadParams'
  definition: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
- uid: TDownloadParams
  name: TDownloadParams
  nameWithType: TDownloadParams
  fullName: TDownloadParams
