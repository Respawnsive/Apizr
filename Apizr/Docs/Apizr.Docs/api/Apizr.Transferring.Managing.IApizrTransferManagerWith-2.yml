### YamlMime:ManagedReference
items:
- uid: Apizr.Transferring.Managing.IApizrTransferManagerWith`2
  commentId: T:Apizr.Transferring.Managing.IApizrTransferManagerWith`2
  id: IApizrTransferManagerWith`2
  parent: Apizr.Transferring.Managing
  children: []
  langs:
  - csharp
  - vb
  name: IApizrTransferManagerWith<TDownloadParams, TUploadApiResultData>
  nameWithType: IApizrTransferManagerWith<TDownloadParams, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrTransferManagerWith<TDownloadParams, TUploadApiResultData>
  type: Interface
  source:
    remote:
      path: Apizr/Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrTransferManager.cs
      branch: master
      repo: https://github.com/Respawnsive/Apizr.git
    id: IApizrTransferManagerWith
    path: ../../Src/Transferring/Apizr.Integrations.FileTransfer/Transferring/Managing/IApizrTransferManager.cs
    startLine: 56
  assemblies:
  - Apizr.Integrations.FileTransfer
  namespace: Apizr.Transferring.Managing
  summary: "\nThe transfer manager to work with both downloads and uploads and with a dictionary query parameters type and no result\n"
  example: []
  syntax:
    content: 'public interface IApizrTransferManagerWith<TDownloadParams, TUploadApiResultData> : IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>, IApizrTransferManagerBase<IDownloadApi<TDownloadParams>>, IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>, IApizrTransferManagerBase<IUploadApi<TUploadApiResultData>>, IApizrManager'
    typeParameters:
    - id: TDownloadParams
    - id: TUploadApiResultData
    content.vb: >-
      Public Interface IApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
          Inherits IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams), IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  inheritedMembers:
  - Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,{TDownloadParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  - Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  nameWithType.vb: IApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Apizr.Transferring.Managing.IApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
  name.vb: IApizrTransferManagerWith(Of TDownloadParams, TUploadApiResultData)
references:
- uid: Apizr.Transferring.Managing
  commentId: N:Apizr.Transferring.Managing
  name: Apizr.Transferring.Managing
  nameWithType: Apizr.Transferring.Managing
  fullName: Apizr.Transferring.Managing
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{`0},`0}.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync(System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync(System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}.DownloadAsync(System.IO.FileInfo,{TDownloadParams},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{`0},`0}.DownloadAsync(System.IO.FileInfo,`0,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams), TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{`1},`1}.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync(Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync(Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{`1},`1}.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync(Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync(Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{`1},`1}.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  parent: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  name: UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync(Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync(Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(FileInfo, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{{TDownloadParams}},{TDownloadParams}}
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager{Apizr.Transferring.Requesting.IDownloadApi{``0},``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>
  nameWithType: IApizrDownloadManager<IDownloadApi<TDownloadParams>, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<Apizr.Transferring.Requesting.IDownloadApi<TDownloadParams>, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of Apizr.Transferring.Requesting.IDownloadApi(Of TDownloadParams), TDownloadParams)
  name.vb: IApizrDownloadManager(Of IDownloadApi(Of TDownloadParams), TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Transferring.Requesting.IDownloadApi`1
    name: IDownloadApi
    nameWithType: IDownloadApi
    fullName: Apizr.Transferring.Requesting.IDownloadApi
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Transferring.Requesting.IDownloadApi`1
    name: IDownloadApi
    nameWithType: IDownloadApi
    fullName: Apizr.Transferring.Requesting.IDownloadApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(FileInfo, TDownloadParams, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync(System.IO.FileInfo, TDownloadParams, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: DownloadAsync(FileInfo, TDownloadParams, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2.DownloadAsync(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: DownloadAsync
    nameWithType: IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams).DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(ByteArrayPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(Refit.ByteArrayPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(Refit.ByteArrayPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(ByteArrayPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.ByteArrayPart
    name: ByteArrayPart
    nameWithType: ByteArrayPart
    fullName: Refit.ByteArrayPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{{TUploadApiResultData}},{TUploadApiResultData}}
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager{Apizr.Transferring.Requesting.IUploadApi{``0},``0}
  parent: Apizr.Transferring.Managing
  definition: Apizr.Transferring.Managing.IApizrUploadManager`2
  name: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>
  nameWithType: IApizrUploadManager<IUploadApi<TUploadApiResultData>, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<Apizr.Transferring.Requesting.IUploadApi<TUploadApiResultData>, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of Apizr.Transferring.Requesting.IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  name.vb: IApizrUploadManager(Of IUploadApi(Of TUploadApiResultData), TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Transferring.Requesting.IUploadApi`1
    name: IUploadApi
    nameWithType: IUploadApi
    fullName: Apizr.Transferring.Requesting.IUploadApi
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Transferring.Requesting.IUploadApi`1
    name: IUploadApi
    nameWithType: IUploadApi
    fullName: Apizr.Transferring.Requesting.IUploadApi
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(StreamPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(Refit.StreamPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(Refit.StreamPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(StreamPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.StreamPart
    name: StreamPart
    nameWithType: StreamPart
    fullName: Refit.StreamPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  commentId: M:Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
  isExternal: true
  name: UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(FileInfoPart, Action<IApizrRequestOptionsBuilder>)
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync(Refit.FileInfoPart, System.Action<Apizr.Configuring.Request.IApizrRequestOptionsBuilder>)
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync(Refit.FileInfoPart, System.Action(Of Apizr.Configuring.Request.IApizrRequestOptionsBuilder))
  name.vb: UploadAsync(FileInfoPart, Action(Of IApizrRequestOptionsBuilder))
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2.UploadAsync(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})
    name: UploadAsync
    nameWithType: IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
    fullName: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData).UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Refit.FileInfoPart
    name: FileInfoPart
    nameWithType: FileInfoPart
    fullName: Refit.FileInfoPart
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
    name: IApizrRequestOptionsBuilder
    nameWithType: IApizrRequestOptionsBuilder
    fullName: Apizr.Configuring.Request.IApizrRequestOptionsBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrDownloadManager`2
  name: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType: IApizrDownloadManager<TDownloadApi, TDownloadParams>
  fullName: Apizr.Transferring.Managing.IApizrDownloadManager<TDownloadApi, TDownloadParams>
  nameWithType.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  fullName.vb: Apizr.Transferring.Managing.IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  name.vb: IApizrDownloadManager(Of TDownloadApi, TDownloadParams)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrDownloadManager`2
    name: IApizrDownloadManager
    nameWithType: IApizrDownloadManager
    fullName: Apizr.Transferring.Managing.IApizrDownloadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDownloadApi
    nameWithType: TDownloadApi
    fullName: TDownloadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDownloadParams
    nameWithType: TDownloadParams
    fullName: TDownloadParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Apizr.Transferring.Managing.IApizrUploadManager`2
  commentId: T:Apizr.Transferring.Managing.IApizrUploadManager`2
  name: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType: IApizrUploadManager<TUploadApi, TUploadApiResultData>
  fullName: Apizr.Transferring.Managing.IApizrUploadManager<TUploadApi, TUploadApiResultData>
  nameWithType.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  fullName.vb: Apizr.Transferring.Managing.IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  name.vb: IApizrUploadManager(Of TUploadApi, TUploadApiResultData)
  spec.csharp:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Apizr.Transferring.Managing.IApizrUploadManager`2
    name: IApizrUploadManager
    nameWithType: IApizrUploadManager
    fullName: Apizr.Transferring.Managing.IApizrUploadManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUploadApi
    nameWithType: TUploadApi
    fullName: TUploadApi
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUploadApiResultData
    nameWithType: TUploadApiResultData
    fullName: TUploadApiResultData
  - name: )
    nameWithType: )
    fullName: )
