<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Apizr.Integrations.FileTransfer.MediatR</name>
    </assembly>
    <members>
        <member name="M:Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Common.IApizrExtendedCommonOptionsBuilder)">
            <summary>
            Let Apizr handle file transfer requests management with some mediation
            </summary>
            <param name="optionsBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Apizr.MediationFileTransferOptionsBuilderExtensions.WithFileTransferMediation(Apizr.Extending.Configuring.Manager.IApizrExtendedManagerOptionsBuilder)">
            <summary>
            Let Apizr handle file transfer requests management with some mediation
            </summary>
            <param name="optionsBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,``1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a download query to Apizr using MediatR for <typeparamref name="TDownloadApi"/> with a custom query parameters type
            </summary>
            <typeparam name="TDownloadApi">The download api type</typeparam>
            <typeparam name="TDownloadParams">The query parameters type</typeparam>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="downloadParams">Some custom query parameters</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``2(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a download query to Apizr using MediatR for <typeparamref name="TDownloadApi"/>
            </summary>
            <typeparam name="TDownloadApi">The download api type</typeparam>
            <typeparam name="TDownloadParams">The query parameters type</typeparam>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a download query to Apizr using MediatR for <typeparamref name="TDownloadApi"/> with a dictionary query parameters type
            </summary>
            <typeparam name="TDownloadApi">The download api type</typeparam>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="downloadParams">Some custom query parameters</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQueryFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a download query to Apizr using MediatR for <typeparamref name="TDownloadApi"/>
            </summary>
            <typeparam name="TDownloadApi">The download api type</typeparam>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a download query to Apizr using MediatR for <see cref="T:Apizr.Transferring.Requesting.IDownloadApi"/> with a dictionary query parameters type
            </summary>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="downloadParams">Some custom query parameters</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendDownloadQuery(Apizr.Mediation.Requesting.Sending.IApizrMediator,System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a download query to Apizr using MediatR for <see cref="T:Apizr.Transferring.Requesting.IDownloadApi"/>
            </summary>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a upload command to Apizr using MediatR for <typeparamref name="TUploadApi"/> from file bytes data
            </summary>
            <typeparam name="TUploadApi">The upload api type</typeparam>
            <param name="apizrMediator">The extended mediator</param>
            <param name="byteArrayPart">The file bytes data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a upload command to Apizr using MediatR for <typeparamref name="TUploadApi"/> from file stream data
            </summary>
            <typeparam name="TUploadApi">The upload api type</typeparam>
            <param name="apizrMediator">The extended mediator</param>
            <param name="streamPart">The file stream data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommandFor``1(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a upload command to Apizr using MediatR for <typeparamref name="TUploadApi"/> from file info data
            </summary>
            <typeparam name="TUploadApi">The upload api type</typeparam>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfoPart">The file info data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a upload command to Apizr using MediatR for <see cref="T:Apizr.Transferring.Requesting.IUploadApi"/> from file bytes data
            </summary>
            <param name="apizrMediator">The extended mediator</param>
            <param name="byteArrayPart">The file bytes data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a upload command to Apizr using MediatR for <see cref="T:Apizr.Transferring.Requesting.IUploadApi"/> from file stream data
            </summary>
            <param name="apizrMediator">The extended mediator</param>
            <param name="streamPart">The file stream data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Extending.ApizrMediatorFileTransferExtensions.SendUploadCommand(Apizr.Mediation.Requesting.Sending.IApizrMediator,Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Send a upload command to Apizr using MediatR for <see cref="T:Apizr.Transferring.Requesting.IUploadApi"/> from file info data
            </summary>
            <param name="apizrMediator">The extended mediator</param>
            <param name="fileInfoPart">The file info data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="T:Apizr.Mediation.Requesting.DownloadQuery`2">
            <summary>
            The mediation download query with a custom query parameters type
            </summary>
            <typeparam name="TDownloadApi">The download api type to manage</typeparam>
            <typeparam name="TDownloadParams">The query parameters type</typeparam>
        </member>
        <member name="M:Apizr.Mediation.Requesting.DownloadQuery`2.#ctor(System.IO.FileInfo,`1,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            The mediation Read query constructor
            </summary>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="downloadParams">Some custom query parameters</param>
            <param name="optionsBuilder">Some request options</param>
        </member>
        <member name="P:Apizr.Mediation.Requesting.DownloadQuery`2.FileInfo">
            <summary>
            Some information about the file to download
            </summary>
        </member>
        <member name="P:Apizr.Mediation.Requesting.DownloadQuery`2.DownloadParams">
            <summary>
            Some custom query parameters
            </summary>
        </member>
        <member name="T:Apizr.Mediation.Requesting.DownloadQuery`1">
            <summary>
            The mediation download query with a dictionary query parameters type
            </summary>
        </member>
        <member name="M:Apizr.Mediation.Requesting.DownloadQuery`1.#ctor(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            The mediation Read query constructor
            </summary>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="optionsBuilder">Some request options</param>
        </member>
        <member name="M:Apizr.Mediation.Requesting.DownloadQuery`1.#ctor(System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            The mediation Read query constructor
            </summary>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="downloadParams">Some query parameters</param>
            <param name="optionsBuilder">Some request options</param>
        </member>
        <member name="T:Apizr.Mediation.Requesting.DownloadQuery">
            <summary>
            The mediation download query with a dictionary query parameters type
            </summary>
        </member>
        <member name="M:Apizr.Mediation.Requesting.DownloadQuery.#ctor(System.IO.FileInfo,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            The mediation Read query constructor
            </summary>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="optionsBuilder">Some request options</param>
        </member>
        <member name="M:Apizr.Mediation.Requesting.DownloadQuery.#ctor(System.IO.FileInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            The mediation Read query constructor
            </summary>
            <param name="fileInfo">Some information about the file to download</param>
            <param name="downloadParams">Some query parameters</param>
            <param name="optionsBuilder">Some request options</param>
        </member>
        <member name="T:Apizr.Mediation.Requesting.Handling.DownloadQueryHandler`2">
            <summary>
            The mediation handler for <see cref="T:Apizr.Mediation.Requesting.DownloadQuery`2"/>
            </summary>
            <typeparam name="TDownloadApi">The download api type to manage</typeparam>
            <typeparam name="TDownloadParams">The query parameters type</typeparam>
        </member>
        <member name="M:Apizr.Mediation.Requesting.Handling.DownloadQueryHandler`2.Handle(Apizr.Mediation.Requesting.DownloadQuery{`0,`1},System.Threading.CancellationToken)">
            <summary>
            Handling the download request
            </summary>
            <param name="request">The download request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Apizr.Mediation.Requesting.Handling.DownloadQueryHandler`1">
            <summary>
            The mediation handler for <see cref="T:Apizr.Mediation.Requesting.DownloadQuery`1"/>
            </summary>
            <typeparam name="TDownloadApi">The download api type to manage</typeparam>
        </member>
        <member name="M:Apizr.Mediation.Requesting.Handling.DownloadQueryHandler`1.Handle(Apizr.Mediation.Requesting.DownloadQuery{`0},System.Threading.CancellationToken)">
            <summary>
            Handling the download request
            </summary>
            <param name="request">The download request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Requesting.Handling.DownloadQueryHandler`1.Handle(Apizr.Mediation.Requesting.DownloadQuery,System.Threading.CancellationToken)">
            <summary>
            Handling the download request
            </summary>
            <param name="request">The download request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Requesting.Handling.UploadCommandHandler`1.Handle(Apizr.Mediation.Requesting.UploadCommand{`0},System.Threading.CancellationToken)">
            <summary>
            Handling the upload request
            </summary>
            <param name="request">The upload request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Requesting.Handling.UploadCommandHandler`1.Handle(Apizr.Mediation.Requesting.UploadCommand,System.Threading.CancellationToken)">
            <summary>
            Handling the upload request
            </summary>
            <param name="request">The upload request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Apizr.Mediation.Requesting.UploadCommand`1">
            <summary>
            The mediation upload command
            </summary>
            <typeparam name="TUploadApi">The upload api type to manage</typeparam>
        </member>
        <member name="M:Apizr.Mediation.Requesting.UploadCommand`1.#ctor(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Upload a file from its bytes data
            </summary>
            <param name="byteArrayPart">The file bytes data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Requesting.UploadCommand`1.#ctor(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Upload a file from its stream data
            </summary>
            <param name="streamPart">The file stream data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="M:Apizr.Mediation.Requesting.UploadCommand`1.#ctor(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <summary>
            Upload a file from its file info data
            </summary>
            <param name="fileInfoPart">The file info data</param>
            <param name="optionsBuilder">Some request options</param>
            <returns></returns>
        </member>
        <member name="P:Apizr.Mediation.Requesting.UploadCommand`1.FileInfoPart">
            <summary>
            The file info data
            </summary>
        </member>
        <member name="P:Apizr.Mediation.Requesting.UploadCommand`1.StreamPart">
            <summary>
            The file stream data
            </summary>
        </member>
        <member name="P:Apizr.Mediation.Requesting.UploadCommand`1.ByteArrayPart">
            <summary>
            The file bytes data
            </summary>
        </member>
        <member name="T:Apizr.Mediation.Requesting.UploadCommand">
            <summary>
            The mediation upload command
            </summary>
        </member>
        <member name="M:Apizr.Mediation.Requesting.UploadCommand.#ctor(Refit.ByteArrayPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <inheritdoc />
        </member>
        <member name="M:Apizr.Mediation.Requesting.UploadCommand.#ctor(Refit.StreamPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <inheritdoc />
        </member>
        <member name="M:Apizr.Mediation.Requesting.UploadCommand.#ctor(Refit.FileInfoPart,System.Action{Apizr.Configuring.Request.IApizrRequestOptionsBuilder})">
            <inheritdoc />
        </member>
    </members>
</doc>
