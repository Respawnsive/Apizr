using Apizr;
{% if HasManyServices -%}
using Apizr.Configuring.Registry;
{% endif -%}
using Microsoft.Extensions.DependencyInjection;
{% if WithRetry -%}
using System;
using Apizr.Policing;
using Polly;
using Polly.Extensions.Http;
using Polly.Registry;
{% endif -%}
{% if WithLogs -%}
using Apizr.Logging.Attributes;
{% endif -%}

{% if WithRetry -%}
[assembly:Policy("TransientHttpError")]
{% endif -%}
{% if WithLogs -%}
[assembly:Log]
{% endif -%}
namespace {{ NameSpace }}
{
    public static class ApizrRegistration
    {
{%      if WithRetry -%}
        public static PolicyRegistry ApizrPolicyRegistry = new PolicyRegistry
        {
            {
                "TransientHttpError", HttpPolicyExtensions.HandleTransientHttpError().WaitAndRetryAsync(new[]
                {
                    TimeSpan.FromSeconds(1),
                    TimeSpan.FromSeconds(5),
                    TimeSpan.FromSeconds(10)
                }, LoggedPolicies.OnLoggedRetry).WithPolicyKey("TransientHttpError")
            }
        };

{%      endif -%}
{%      if RegistrationType == 'Static' or RegistrationType == 'Both' -%}
        public static {% if HasManyServices  -%}IApizrRegistry {% else -%}IApizrManager<I{{ LastService }}Service> {% endif -%} Build() =>
{%          if HasManyServices -%}
            ApizrBuilder.CreateRegistry(
                registry => registry
{%                  for service in Services -%}
                    .AddManagerFor<I{{ service }}Service>(){% if service == LastService %},{% endif %}
{%                  endfor -%}
                options => options.WithBaseAddress("{{BaseUrl}}")
{%                  if WithRetry -%}
                    .WithPolicyRegistry(ApizrPolicyRegistry)
{%                  endif -%}
            );
{%          else -%}
            ApizrBuilder.CreateManagerFor<I{{ LastService }}Service>(
                options => options.WithBaseAddress("{{BaseUrl}}")
{%                  if WithRetry -%}
                    .WithPolicyRegistry(ApizrPolicyRegistry)
{%                  endif -%}
            );
{%          endif -%}
{%      endif -%}
{%      if RegistrationType == 'Extended' or RegistrationType == 'Both' -%}
{%      if RegistrationType == 'Both' -%}

{%      endif -%}
        public static IServiceCollection AddApizr(this IServiceCollection services)
        {
{%          if WithRetry -%}
            services.AddPolicyRegistry(ApizrPolicyRegistry);

{%          endif -%}
{%          if HasManyServices -%}
            services.AddApizr(
                registry => registry
{%                  for service in Services -%}
                    .AddManagerFor<I{{ service }}Service>(){% if service == LastService %},{% endif %}
{%                  endfor -%}
                options => options.WithBaseAddress("{{BaseUrl}}")
            );
{%          else -%}
            services.AddApizrManagerFor<I{{ LastService }}Service>(
                options => options.WithBaseAddress("{{BaseUrl}}")
            );
{%          endif -%}

            return services;
        }
{%      endif -%}
    }
}